//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <iWorkImport/TSDFill.h>

#import <iWorkImport/NSCopying-Protocol.h>
#import <iWorkImport/NSMutableCopying-Protocol.h>
#import <iWorkImport/TSDMixing-Protocol.h>
#import <iWorkImport/TSSPresetSource-Protocol.h>

@class NSObject, TSPData, TSUColor, TSUFlushableCachedImage;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface TSDImageFill : TSDFill <TSDMixing, TSSPresetSource, NSCopying, NSMutableCopying>
{
    TSPData *mImageData;
    int mTechnique;
    TSUColor *mTintColor;
    TSUFlushableCachedImage *mStandardSizeTintedImage;
    TSUFlushableCachedImage *mHalfSizeTintedImage;
    TSUFlushableCachedImage *mQuarterSizeTintedImage;
    TSUColor *mReferenceColor;
    struct CGSize mFillSize;
    _Bool mHasIndicatedInterestInProvider;
    NSObject<OS_dispatch_queue> *mTempRenderLock;
    struct CGImage *mTempRenderCopy;
    struct CGImage *mSourceOfTempRenderCopy;
    long long mTempRenderCount;
}

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (void)makeCompatibleImageFillDataFromURL:(id)arg1 withContext:(id)arg2 modalOperationPresenter:(id)arg3 compatibilityAlertPresenter:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
+ (id)instanceWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, copy, nonatomic) TSUColor *tintColor; // @synthesize tintColor=mTintColor;
@property(nonatomic) int technique; // @synthesize technique=mTechnique;
@property(readonly, retain, nonatomic) TSPData *imageData; // @synthesize imageData=mImageData;
- (void)p_drawPDFWithProvider:(id)arg1 inContext:(struct CGContext *)arg2 bounds:(struct CGRect)arg3;
- (void)p_drawBitmapImage:(struct CGImage *)arg1 withOrientation:(long long)arg2 inContext:(struct CGContext *)arg3 bounds:(struct CGRect)arg4;
- (struct CGRect)p_drawnRectForImageSize:(struct CGSize)arg1 destRect:(struct CGRect)arg2 inContext:(struct CGContext *)arg3;
- (id)p_validatedImageProvider;
- (SEL)mapThemeAssetSelector;
- (id)presetKind;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (id)p_quarterSizeCachedImage;
- (struct CGImage *)p_newQuarterSizeImage;
- (id)p_halfSizeCachedImage;
- (struct CGImage *)p_newHalfSizeImage;
- (id)p_standardSizeCachedImage;
- (struct CGImage *)p_newStandardSizeImage;
- (struct CGImage *)p_newTintedImageWithScale:(double)arg1;
- (void)paintPath:(struct CGPath *)arg1 naturalBounds:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 isPDF:(_Bool)arg4;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)p_paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (struct CGSize)p_sizeOfFillImageForDestRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (struct CGSize)renderedImageSizeForObjectSize:(struct CGSize)arg1;
- (void)applyToCALayer:(id)arg1 withScale:(double)arg2;
- (id)p_cachedImageForSize:(struct CGSize)arg1 inContext:(struct CGContext *)arg2 orLayer:(id)arg3;
- (_Bool)shouldBeReappliedToCALayer:(id)arg1;
- (_Bool)p_shouldApplyTintedImage;
- (int)fillType;
- (_Bool)canApplyToCALayerByAddingSublayers;
- (_Bool)canApplyToCALayer;
- (_Bool)drawsInOneStep;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)referenceColor;
- (id)imageDataAtFillSize;
- (void)p_setFillSizeForApplicationData;
- (_Bool)isOpaque;
@property(readonly, nonatomic) struct CGSize fillSize; // @synthesize fillSize=mFillSize;
@property(readonly, nonatomic) double scale;
- (id)copyWithNewImageData:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithImageData:(id)arg1 technique:(int)arg2 tintColor:(id)arg3 size:(struct CGSize)arg4;
- (_Bool)tsch_hasAllResources;
- (void)saveToArchive:(struct FillArchive *)arg1 archiver:(id)arg2;
- (_Bool)p_shouldPersistFillSizeForData:(id)arg1;
- (id)initWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;

@end

