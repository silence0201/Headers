//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Home/HFCharacteristicValueSource-Protocol.h>

@class HFCharacteristicValueTransaction, NACancelationToken, NSMutableArray, NSMutableDictionary, NSMutableSet, NSRecursiveLock, NSSet, NSString;
@protocol HFCharacteristicOperationContextProviding, HFCharacteristicValueReader, HFCharacteristicValueWriter;

@interface HFCharacteristicValueManager : NSObject <HFCharacteristicValueSource>
{
    id <HFCharacteristicValueReader> _valueReader;
    id <HFCharacteristicValueWriter> _valueWriter;
    long long __debug_totalNumberOfIssuedBatchReadRequests;
    HFCharacteristicValueTransaction *_openTransaction;
    NSMutableArray *_runningTransactions;
    NSMutableArray *_readTransactionsToExecuteOnNextRunLoop;
    NSMutableArray *_completionHandlersForReadTransactionsToExecuteOnNextRunLoop;
    NSRecursiveLock *_transactionLock;
    NSMutableSet *_mutableAllReadCharacteristics;
    NSMutableSet *_characteristicsWithCachedValues;
    NSMutableDictionary *_cachedReadErrorsKeyedByCharacteristicIdentifier;
    NSMutableDictionary *_cachedWriteErrorsKeyedByCharacteristicIdentifier;
    NSMutableDictionary *_cachedExecutionErrorsKeyedByActionSetIdentifier;
    NACancelationToken *_inFlightReadCancelationToken;
}

@property(retain, nonatomic) NACancelationToken *inFlightReadCancelationToken; // @synthesize inFlightReadCancelationToken=_inFlightReadCancelationToken;
@property(retain, nonatomic) NSMutableDictionary *cachedExecutionErrorsKeyedByActionSetIdentifier; // @synthesize cachedExecutionErrorsKeyedByActionSetIdentifier=_cachedExecutionErrorsKeyedByActionSetIdentifier;
@property(retain, nonatomic) NSMutableDictionary *cachedWriteErrorsKeyedByCharacteristicIdentifier; // @synthesize cachedWriteErrorsKeyedByCharacteristicIdentifier=_cachedWriteErrorsKeyedByCharacteristicIdentifier;
@property(retain, nonatomic) NSMutableDictionary *cachedReadErrorsKeyedByCharacteristicIdentifier; // @synthesize cachedReadErrorsKeyedByCharacteristicIdentifier=_cachedReadErrorsKeyedByCharacteristicIdentifier;
@property(retain, nonatomic) NSMutableSet *characteristicsWithCachedValues; // @synthesize characteristicsWithCachedValues=_characteristicsWithCachedValues;
@property(retain, nonatomic) NSMutableSet *mutableAllReadCharacteristics; // @synthesize mutableAllReadCharacteristics=_mutableAllReadCharacteristics;
@property(retain, nonatomic) NSRecursiveLock *transactionLock; // @synthesize transactionLock=_transactionLock;
@property(retain, nonatomic) NSMutableArray *completionHandlersForReadTransactionsToExecuteOnNextRunLoop; // @synthesize completionHandlersForReadTransactionsToExecuteOnNextRunLoop=_completionHandlersForReadTransactionsToExecuteOnNextRunLoop;
@property(retain, nonatomic) NSMutableArray *readTransactionsToExecuteOnNextRunLoop; // @synthesize readTransactionsToExecuteOnNextRunLoop=_readTransactionsToExecuteOnNextRunLoop;
@property(retain, nonatomic) NSMutableArray *runningTransactions; // @synthesize runningTransactions=_runningTransactions;
@property(retain, nonatomic) HFCharacteristicValueTransaction *openTransaction; // @synthesize openTransaction=_openTransaction;
@property(nonatomic) long long _debug_totalNumberOfIssuedBatchReadRequests; // @synthesize _debug_totalNumberOfIssuedBatchReadRequests=__debug_totalNumberOfIssuedBatchReadRequests;
@property(retain, nonatomic) id <HFCharacteristicValueWriter> valueWriter; // @synthesize valueWriter=_valueWriter;
@property(retain, nonatomic) id <HFCharacteristicValueReader> valueReader; // @synthesize valueReader=_valueReader;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <HFCharacteristicOperationContextProviding> contextProvider;
- (id)writeValuesForCharacteristics:(id)arg1;
- (id)readValuesForCharacteristics:(id)arg1;
- (id)readValuesForCharacteristicsPassingTest:(CDUnknownBlockType)arg1 inServices:(id)arg2;
- (id)readValuesForCharacteristicTypes:(id)arg1 inServices:(id)arg2;
- (id)_readValuesForCharacteristics:(id)arg1 readSuccessBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;
- (void)cancelInFlightReadRequests;
- (void)invalidateAllCachedErrors;
- (id)cachedErrorForExecutionOfActionSet:(id)arg1;
- (id)cachedErrorForWriteToCharacteristic:(id)arg1;
- (void)invalidateCachedValuesForAccessory:(id)arg1;
- (void)invalidateCachedValueForCharacteristic:(id)arg1;
- (_Bool)hasCachedReadErrorForAccessory:(id)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)cachedReadErrorForCharacteristic:(id)arg1;
- (id)cachedValueForCharacteristic:(id)arg1;
- (void)_transactionLock_executeActionSetTransaction:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_transactionLock_executeReadTransaction:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_transactionLock_executeWriteTransaction:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)_openTransactionCompletionFuture;
- (void)commitTransactionWithReason:(id)arg1;
- (void)executeActionSet:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)writeValue:(id)arg1 forCharacteristic:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)readValueForCharacteristic:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)beginTransactionWithReason:(id)arg1 logger:(id)arg2 readValidator:(CDUnknownBlockType)arg3;
- (void)beginTransactionWithReason:(id)arg1;
- (id)_transactionLock_characteristicsWithPendingWritesInTransacton:(id)arg1 includeDirectWrites:(_Bool)arg2 includeActionSets:(_Bool)arg3;
@property(readonly, copy, nonatomic) NSSet *executingActionSets;
@property(readonly, copy, nonatomic) NSSet *characteristicsWithPendingWrites;
@property(readonly, copy, nonatomic) NSSet *characteristicsWithPendingReads;
@property(readonly, copy, nonatomic) NSSet *allReadCharacteristics;
- (id)initWithValueReader:(id)arg1 valueWriter:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

