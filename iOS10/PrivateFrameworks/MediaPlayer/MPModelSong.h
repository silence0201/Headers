//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <MediaPlayer/MPModelObject.h>

@class MPModelAlbum, MPModelArtist, MPModelComposer, MPModelFileAsset, MPModelGenre, MPModelHomeSharingAsset, MPModelLyrics, MPModelPlaybackPosition, MPModelStoreAsset, NSDate, NSString;

@interface MPModelSong : MPModelObject
{
    _Bool _explicitSong;
    _Bool _artistUploadedContent;
    _Bool _hasVideo;
    _Bool _shouldShowComposer;
    _Bool _libraryAdded;
    _Bool _libraryAddEligible;
    _Bool _hasCloudSyncSource;
    float _volumeNormalization;
    float _userRating;
    NSString *_title;
    NSString *_grouping;
    double _duration;
    long long _trackNumber;
    long long _discNumber;
    long long _beatsPerMinute;
    NSString *_copyrightText;
    long long _year;
    NSString *_classicalWork;
    NSString *_classicalMovement;
    long long _classicalMovementCount;
    long long _classicalMovementNumber;
    MPModelAlbum *_album;
    MPModelArtist *_artist;
    MPModelGenre *_genre;
    MPModelComposer *_composer;
    MPModelLyrics *_lyrics;
    MPModelHomeSharingAsset *_homeSharingAsset;
    MPModelFileAsset *_localFileAsset;
    MPModelPlaybackPosition *_playbackPosition;
    MPModelStoreAsset *_storeAsset;
    NSDate *_libraryAddedDate;
    long long _keepLocalEnableState;
    long long _keepLocalManagedStatus;
    CDUnknownBlockType _artworkCatalogBlock;
}

+ (id)__MPModelRelationshipSongPlaybackPosition__PROPERTY;
+ (id)__playbackPosition__KEY;
+ (id)__MPModelPropertySongUserRating__PROPERTY;
+ (id)__userRating__KEY;
+ (id)__MPModelRelationshipSongStoreAsset__PROPERTY;
+ (id)__storeAsset__KEY;
+ (id)__MPModelRelationshipSongHomeSharingAsset__PROPERTY;
+ (id)__homeSharingAsset__KEY;
+ (id)__MPModelPropertySongYear__PROPERTY;
+ (id)__year__KEY;
+ (id)__MPModelPropertySongClassicalMovementNumber__PROPERTY;
+ (id)__classicalMovementNumber__KEY;
+ (id)__MPModelPropertySongClassicalMovementCount__PROPERTY;
+ (id)__classicalMovementCount__KEY;
+ (id)__MPModelPropertySongClassicalMovement__PROPERTY;
+ (id)__classicalMovement__KEY;
+ (id)__MPModelPropertySongClassicalWork__PROPERTY;
+ (id)__classicalWork__KEY;
+ (id)__MPModelPropertySongHasCloudSyncSource__PROPERTY;
+ (id)__hasCloudSyncSource__KEY;
+ (id)__MPModelPropertySongLibraryAddEligible__PROPERTY;
+ (id)__libraryAddEligible__KEY;
+ (id)__MPModelPropertySongLibraryAddedDate__PROPERTY;
+ (id)__libraryAddedDate__KEY;
+ (id)__MPModelPropertySongLibraryAdded__PROPERTY;
+ (id)__libraryAdded__KEY;
+ (id)__MPModelPropertySongKeepLocalManagedStatus__PROPERTY;
+ (id)__keepLocalManagedStatus__KEY;
+ (id)__MPModelPropertySongKeepLocalEnableState__PROPERTY;
+ (id)__keepLocalEnableState__KEY;
+ (id)__MPModelRelationshipSongLocalFileAsset__PROPERTY;
+ (id)__localFileAsset__KEY;
+ (id)__MPModelPropertySongArtwork__PROPERTY;
+ (id)__artworkCatalogBlock__KEY;
+ (id)__MPModelPropertySongVolumeNormalization__PROPERTY;
+ (id)__volumeNormalization__KEY;
+ (id)__MPModelPropertySongShouldShowComposer__PROPERTY;
+ (id)__shouldShowComposer__KEY;
+ (id)__MPModelRelationshipSongLyrics__PROPERTY;
+ (id)__lyrics__KEY;
+ (id)__MPModelPropertySongBeatsPerMinute__PROPERTY;
+ (id)__beatsPerMinute__KEY;
+ (id)__MPModelPropertySongHasVideo__PROPERTY;
+ (id)__hasVideo__KEY;
+ (id)__MPModelPropertySongArtistUploadedContent__PROPERTY;
+ (id)__artistUploadedContent__KEY;
+ (id)__MPModelPropertySongExplicit__PROPERTY;
+ (id)__explicitSong__KEY;
+ (id)__MPModelPropertySongDiscNumber__PROPERTY;
+ (id)__discNumber__KEY;
+ (id)__MPModelPropertySongTrackNumber__PROPERTY;
+ (id)__trackNumber__KEY;
+ (id)__MPModelPropertySongDuration__PROPERTY;
+ (id)__duration__KEY;
+ (id)__MPModelPropertySongCopyrightText__PROPERTY;
+ (id)__copyrightText__KEY;
+ (id)__MPModelPropertySongGrouping__PROPERTY;
+ (id)__grouping__KEY;
+ (id)__MPModelRelationshipSongComposer__PROPERTY;
+ (id)__composer__KEY;
+ (id)__MPModelRelationshipSongGenre__PROPERTY;
+ (id)__genre__KEY;
+ (id)__MPModelRelationshipSongArtist__PROPERTY;
+ (id)__artist__KEY;
+ (id)__MPModelRelationshipSongAlbum__PROPERTY;
+ (id)__album__KEY;
+ (id)__MPModelPropertySongTitle__PROPERTY;
+ (id)__title__KEY;
+ (id)kindWithVariants:(unsigned long long)arg1 options:(unsigned long long)arg2;
+ (id)kindWithVariants:(unsigned long long)arg1;
+ (id)requiredLibraryAddStatusObservationProperties;
+ (_Bool)supportsLibraryAddStatusObservation;
+ (_Bool)supportsLibraryRemoval;
+ (id)requiredLibraryRemovalProperties;
+ (_Bool)supportsKeepLocalStatusObservation;
+ (id)requiredKeepLocalStatusObservationProperties;
+ (id)mqf_requiredPlaybackProperties;
+ (id)requiredStoreLibraryPersonalizationProperties;
@property(copy, nonatomic) CDUnknownBlockType artworkCatalogBlock; // @synthesize artworkCatalogBlock=_artworkCatalogBlock;
@property(nonatomic) long long keepLocalManagedStatus; // @synthesize keepLocalManagedStatus=_keepLocalManagedStatus;
@property(nonatomic) long long keepLocalEnableState; // @synthesize keepLocalEnableState=_keepLocalEnableState;
@property(nonatomic) _Bool hasCloudSyncSource; // @synthesize hasCloudSyncSource=_hasCloudSyncSource;
@property(nonatomic, getter=isLibraryAddEligible) _Bool libraryAddEligible; // @synthesize libraryAddEligible=_libraryAddEligible;
@property(copy, nonatomic) NSDate *libraryAddedDate; // @synthesize libraryAddedDate=_libraryAddedDate;
@property(nonatomic, getter=isLibraryAdded) _Bool libraryAdded; // @synthesize libraryAdded=_libraryAdded;
@property(retain, nonatomic) MPModelStoreAsset *storeAsset; // @synthesize storeAsset=_storeAsset;
@property(retain, nonatomic) MPModelPlaybackPosition *playbackPosition; // @synthesize playbackPosition=_playbackPosition;
@property(retain, nonatomic) MPModelFileAsset *localFileAsset; // @synthesize localFileAsset=_localFileAsset;
@property(retain, nonatomic) MPModelHomeSharingAsset *homeSharingAsset; // @synthesize homeSharingAsset=_homeSharingAsset;
@property(retain, nonatomic) MPModelLyrics *lyrics; // @synthesize lyrics=_lyrics;
@property(retain, nonatomic) MPModelComposer *composer; // @synthesize composer=_composer;
@property(retain, nonatomic) MPModelGenre *genre; // @synthesize genre=_genre;
@property(retain, nonatomic) MPModelArtist *artist; // @synthesize artist=_artist;
@property(retain, nonatomic) MPModelAlbum *album; // @synthesize album=_album;
@property(nonatomic) long long classicalMovementNumber; // @synthesize classicalMovementNumber=_classicalMovementNumber;
@property(nonatomic) long long classicalMovementCount; // @synthesize classicalMovementCount=_classicalMovementCount;
@property(copy, nonatomic) NSString *classicalMovement; // @synthesize classicalMovement=_classicalMovement;
@property(copy, nonatomic) NSString *classicalWork; // @synthesize classicalWork=_classicalWork;
@property(nonatomic) float userRating; // @synthesize userRating=_userRating;
@property(nonatomic) long long year; // @synthesize year=_year;
@property(nonatomic) float volumeNormalization; // @synthesize volumeNormalization=_volumeNormalization;
@property(nonatomic) _Bool shouldShowComposer; // @synthesize shouldShowComposer=_shouldShowComposer;
@property(copy, nonatomic) NSString *copyrightText; // @synthesize copyrightText=_copyrightText;
@property(nonatomic) long long beatsPerMinute; // @synthesize beatsPerMinute=_beatsPerMinute;
@property(nonatomic) _Bool hasVideo; // @synthesize hasVideo=_hasVideo;
@property(nonatomic, getter=isArtistUploadedContent) _Bool artistUploadedContent; // @synthesize artistUploadedContent=_artistUploadedContent;
@property(nonatomic, getter=isExplicitSong) _Bool explicitSong; // @synthesize explicitSong=_explicitSong;
@property(nonatomic) long long discNumber; // @synthesize discNumber=_discNumber;
@property(nonatomic) long long trackNumber; // @synthesize trackNumber=_trackNumber;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(copy, nonatomic) NSString *grouping; // @synthesize grouping=_grouping;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)artworkCatalog;
- (id)descriptionWithType:(long long)arg1;
- (id)mediaItemPropertyValues;
- (struct MPLibraryAddStatusObserverConfiguration)libraryAddStatusObserverConfiguration;
- (long long)libraryRemovalSupportedOptions;
- (id)newKeepLocalStatusObserverConfiguration;
- (id)mqf_playbackItemMetadataModelObject;
- (void)mqf_configurePlaybackItemMetadata:(id)arg1;
- (id)mqf_newPlaybackItemMetadata;
- (id)objectWithStoreLibraryPersonalizationRelativeModelObject:(id)arg1;
- (id)relativeModelObjectForStoreLibraryPersonalization;
- (id)personalizationScopedPropertiesForProperties:(id)arg1;

@end

