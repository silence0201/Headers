//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDictionary, NSNumber, NSString, NSTimeZone;

@interface _HKBehavior : NSObject
{
    NSNumber *_overridenAreSwimmingSessionsAvailable;
    _Bool _isDeviceSupported;
    _Bool _isAppleInternalInstall;
    _Bool _isAppleWatch;
    _Bool _isCompanionCapable;
    _Bool _hasTelephonyCapability;
    _Bool _isCoachingEventLoggingEnabled;
    _Bool _requestsRemoteAuthorization;
    _Bool _canCreateSources;
    _Bool _shouldPruneOldSamples;
    _Bool _isTestingDevice;
    NSString *_hostWriteAuthorizationUsageDescription;
    NSString *_hostReadAuthorizationUsageDescription;
}

+ (id)_simulatorDefaultName;
+ (id)_simulatorSettings;
+ (void)disableForceBuddy;
+ (void)disableSkipBuddy;
+ (_Bool)_hasCompletedBuddy;
+ (_Bool)_shouldShowBuddy;
+ (_Bool)_isForceBuddyEnabled;
+ (_Bool)_isSkipBuddyEnabled;
+ (_Bool)_hasTelephonyCapability;
+ (_Bool)_isAppleInternalInstall;
+ (_Bool)_isDeviceSupported;
+ (id)currentOSVersion;
+ (id)currentOSBuild;
+ (id)currentDeviceProductType;
+ (id)currentDeviceClass;
+ (id)currentDeviceManufacturer;
+ (id)currentDeviceName;
+ (id)currentDeviceDisplayName;
+ (_Bool)isTestingDevice;
+ (_Bool)hasTelephonyCapability;
+ (_Bool)hasCompletedBuddy;
+ (_Bool)shouldShowBuddy;
+ (_Bool)isAppleInternalInstall;
+ (_Bool)isCompanionCapable;
+ (_Bool)isDeviceSupported;
+ (_Bool)isRunningStoreDemoMode;
+ (void)resetSharedBehavior;
+ (_Bool)anyPairedWatchHasSOSModeCapability;
+ (id)activePairedWatchWithoutSOSMedicalIDContactsSupport;
+ (_Bool)hasPairedWatch;
+ (int)protocolVersionForNRDevice:(id)arg1;
+ (_Bool)currentlyPairedWatchMeetsMinimumVersion:(int)arg1;
+ (_Bool)allPairedWatchesMeetMinimumVersion:(int)arg1;
+ (void)setSharedBehavior:(id)arg1;
+ (id)sharedBehavior;
+ (id)behaviorQueue;
@property(copy, nonatomic) NSString *hostReadAuthorizationUsageDescription; // @synthesize hostReadAuthorizationUsageDescription=_hostReadAuthorizationUsageDescription;
@property(copy, nonatomic) NSString *hostWriteAuthorizationUsageDescription; // @synthesize hostWriteAuthorizationUsageDescription=_hostWriteAuthorizationUsageDescription;
@property(nonatomic) _Bool isTestingDevice; // @synthesize isTestingDevice=_isTestingDevice;
@property(nonatomic) _Bool shouldPruneOldSamples; // @synthesize shouldPruneOldSamples=_shouldPruneOldSamples;
@property(nonatomic) _Bool canCreateSources; // @synthesize canCreateSources=_canCreateSources;
@property(nonatomic) _Bool requestsRemoteAuthorization; // @synthesize requestsRemoteAuthorization=_requestsRemoteAuthorization;
@property(nonatomic) _Bool isCoachingEventLoggingEnabled; // @synthesize isCoachingEventLoggingEnabled=_isCoachingEventLoggingEnabled;
@property(nonatomic) _Bool hasTelephonyCapability; // @synthesize hasTelephonyCapability=_hasTelephonyCapability;
@property(nonatomic) _Bool isCompanionCapable; // @synthesize isCompanionCapable=_isCompanionCapable;
@property(nonatomic) _Bool isAppleWatch; // @synthesize isAppleWatch=_isAppleWatch;
@property(nonatomic) _Bool isAppleInternalInstall; // @synthesize isAppleInternalInstall=_isAppleInternalInstall;
@property(nonatomic) _Bool isDeviceSupported; // @synthesize isDeviceSupported=_isDeviceSupported;
- (void).cxx_destruct;
@property(nonatomic) _Bool areSwimmingSessionsAvailable;
@property(readonly, nonatomic) unsigned long long currentDiskSpaceAvailable;
@property(readonly, nonatomic) unsigned long long totalDiskCapacity;
@property(readonly, nonatomic) NSDictionary *currentDiskUsage;
@property(readonly, copy, nonatomic) NSTimeZone *localTimeZone;
@property(readonly, copy, nonatomic) NSString *currentOSVersion;
@property(readonly, copy, nonatomic) NSString *currentOSBuild;
@property(readonly, copy, nonatomic) NSString *currentDeviceClass;
@property(readonly, copy, nonatomic) NSString *currentDeviceProductType;
@property(readonly, copy, nonatomic) NSString *currentInternalDeviceModel;
@property(readonly, copy, nonatomic) NSString *currentDeviceManufacturer;
@property(readonly, copy, nonatomic) NSString *currentDeviceName;
@property(readonly, copy, nonatomic) NSString *currentDeviceDisplayName;
- (id)init;

@end

