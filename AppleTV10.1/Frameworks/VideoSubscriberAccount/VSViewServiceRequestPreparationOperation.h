//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <VideoSubscriberAccount/VSAsyncOperation.h>

@class NSArray, NSXPCConnection, VSAccount, VSFailable, VSIdentityProviderAvailabilityInfoCenter;

__attribute__((visibility("hidden")))
@interface VSViewServiceRequestPreparationOperation : VSAsyncOperation
{
    _Bool _requestAllowsPrivacyUI;
    _Bool _requestRequiresPrivacyUI;
    int _hostProcessIdentifier;
    NSArray *_supportedIdentityProviderIdentifiers;
    VSAccount *_currentAccount;
    VSFailable *_result;
    NSXPCConnection *_privacyServiceConnection;
    VSIdentityProviderAvailabilityInfoCenter *_availabilityInfoCenter;
    CDStruct_4c969caf _hostAuditToken;
}

@property(retain, nonatomic) VSIdentityProviderAvailabilityInfoCenter *availabilityInfoCenter; // @synthesize availabilityInfoCenter=_availabilityInfoCenter;
@property(retain, nonatomic) NSXPCConnection *privacyServiceConnection; // @synthesize privacyServiceConnection=_privacyServiceConnection;
@property(retain, nonatomic) VSFailable *result; // @synthesize result=_result;
@property(retain, nonatomic) VSAccount *currentAccount; // @synthesize currentAccount=_currentAccount;
@property(copy, nonatomic) NSArray *supportedIdentityProviderIdentifiers; // @synthesize supportedIdentityProviderIdentifiers=_supportedIdentityProviderIdentifiers;
@property(nonatomic) _Bool requestRequiresPrivacyUI; // @synthesize requestRequiresPrivacyUI=_requestRequiresPrivacyUI;
@property(nonatomic) _Bool requestAllowsPrivacyUI; // @synthesize requestAllowsPrivacyUI=_requestAllowsPrivacyUI;
@property(nonatomic) int hostProcessIdentifier; // @synthesize hostProcessIdentifier=_hostProcessIdentifier;
@property(nonatomic) CDStruct_4c969caf hostAuditToken; // @synthesize hostAuditToken=_hostAuditToken;
- (void).cxx_destruct;
- (void)cancel;
- (void)executionDidBegin;
- (void)_promptForPrivacyWithDisplayName:(id)arg1;
- (void)_determineProviderDisplayName;
- (void)_checkSupportedProviders;
- (void)_checkAvailability;
- (void)_checkPrivacy;
- (void)_checkEntitlement;
- (void)_finishWithError:(id)arg1;
- (id)_privacyServiceWithErrorHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;

@end

