//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <MediaPlayer/MPModelObject.h>

@class MPModelCurator, MPTiledArtworkRequest, NSDate, NSDateComponents, NSString, NSURL;

@interface MPModelPlaylist : MPModelObject
{
    _Bool _hasCleanContent;
    _Bool _hasExplicitContent;
    _Bool _owner;
    _Bool _curatorPlaylist;
    _Bool _publicPlaylist;
    _Bool _visiblePlaylist;
    _Bool _subscribed;
    _Bool _libraryAdded;
    NSString *_name;
    NSString *_descriptionText;
    MPModelCurator *_curator;
    unsigned long long _trackCount;
    long long _userEditableComponents;
    long long _type;
    NSString *_editorNotes;
    NSString *_shortEditorNotes;
    NSURL *_shareURL;
    NSURL *_shareShortURL;
    NSDateComponents *_releaseDateComponents;
    NSDateComponents *_lastModifiedDateComponents;
    NSDate *_lastDevicePlaybackDate;
    NSString *_cloudVersionHash;
    NSDate *_libraryAddedDate;
    long long _keepLocalEnableState;
    long long _keepLocalManagedStatus;
    CDUnknownBlockType _artworkCatalogBlock;
    CDUnknownBlockType _editorialArtworkCatalogBlock;
    MPTiledArtworkRequest *_tiledArtworkRequest;
}

+ (id)__MPModelPropertyPlaylistCloudVersionHash__PROPERTY;
+ (id)__cloudVersionHash__KEY;
+ (id)__MPModelPropertyPlaylistLastDevicePlaybackDate__PROPERTY;
+ (id)__lastDevicePlaybackDate__KEY;
+ (id)__MPModelPropertyPlaylistKeepLocalManagedStatus__PROPERTY;
+ (id)__keepLocalManagedStatus__KEY;
+ (id)__MPModelPropertyPlaylistKeepLocalEnableState__PROPERTY;
+ (id)__keepLocalEnableState__KEY;
+ (id)__MPModelPropertyPlaylistTracksTiledArtwork__PROPERTY;
+ (id)__tiledArtworkRequest__KEY;
+ (id)__MPModelPropertyPlaylistLibraryAddedDate__PROPERTY;
+ (id)__libraryAddedDate__KEY;
+ (id)__MPModelPropertyPlaylistLibraryAdded__PROPERTY;
+ (id)__libraryAdded__KEY;
+ (id)__MPModelPropertyPlaylistEditorialArtwork__PROPERTY;
+ (id)__editorialArtworkCatalogBlock__KEY;
+ (id)__MPModelPropertyPlaylistArtwork__PROPERTY;
+ (id)__artworkCatalogBlock__KEY;
+ (id)__MPModelPropertyPlaylistLastModifiedDateComponents__PROPERTY;
+ (id)__lastModifiedDateComponents__KEY;
+ (id)__MPModelPropertyPlaylistReleaseDateComponents__PROPERTY;
+ (id)__releaseDateComponents__KEY;
+ (id)__MPModelPropertyPlaylistShareShortURL__PROPERTY;
+ (id)__shareShortURL__KEY;
+ (id)__MPModelPropertyPlaylistShareURL__PROPERTY;
+ (id)__shareURL__KEY;
+ (id)__MPModelPropertyPlaylistShortEditorNotes__PROPERTY;
+ (id)__shortEditorNotes__KEY;
+ (id)__MPModelPropertyPlaylistEditorNotes__PROPERTY;
+ (id)__editorNotes__KEY;
+ (id)__MPModelPropertyPlaylistTrackCount__PROPERTY;
+ (id)__trackCount__KEY;
+ (id)__MPModelPropertyPlaylistType__PROPERTY;
+ (id)__type__KEY;
+ (id)__MPModelPropertyPlaylistUserEditableComponents__PROPERTY;
+ (id)__userEditableComponents__KEY;
+ (id)__MPModelPropertyPlaylistSubscribed__PROPERTY;
+ (id)__subscribed__KEY;
+ (id)__MPModelPropertyPlaylistVisiblePlaylist__PROPERTY;
+ (id)__visiblePlaylist__KEY;
+ (id)__MPModelPropertyPlaylistPublicPlaylist__PROPERTY;
+ (id)__publicPlaylist__KEY;
+ (id)__MPModelPropertyPlaylistIsOwner__PROPERTY;
+ (id)__owner__KEY;
+ (id)__MPModelPropertyPlaylistCuratorPlaylist__PROPERTY;
+ (id)__curatorPlaylist__KEY;
+ (id)__MPModelPropertyPlaylistHasExplicitContent__PROPERTY;
+ (id)__hasExplicitContent__KEY;
+ (id)__MPModelPropertyPlaylistHasCleanContent__PROPERTY;
+ (id)__hasCleanContent__KEY;
+ (id)__MPModelRelationshipPlaylistCurator__PROPERTY;
+ (id)__curator__KEY;
+ (id)__MPModelPropertyPlaylistDescriptionText__PROPERTY;
+ (id)__descriptionText__KEY;
+ (id)__MPModelPropertyPlaylistName__PROPERTY;
+ (id)__name__KEY;
+ (id)requiredLibraryAddStatusObservationProperties;
+ (_Bool)supportsLibraryAddStatusObservation;
+ (_Bool)supportsLibraryRemoval;
+ (id)requiredLibraryRemovalProperties;
+ (_Bool)supportsKeepLocalStatusObservation;
+ (id)requiredKeepLocalStatusObservationProperties;
+ (id)requiredStoreLibraryPersonalizationProperties;
@property(copy, nonatomic) MPTiledArtworkRequest *tiledArtworkRequest; // @synthesize tiledArtworkRequest=_tiledArtworkRequest;
@property(copy, nonatomic) CDUnknownBlockType editorialArtworkCatalogBlock; // @synthesize editorialArtworkCatalogBlock=_editorialArtworkCatalogBlock;
@property(copy, nonatomic) CDUnknownBlockType artworkCatalogBlock; // @synthesize artworkCatalogBlock=_artworkCatalogBlock;
@property(nonatomic) long long keepLocalManagedStatus; // @synthesize keepLocalManagedStatus=_keepLocalManagedStatus;
@property(nonatomic) long long keepLocalEnableState; // @synthesize keepLocalEnableState=_keepLocalEnableState;
@property(copy, nonatomic) NSDate *libraryAddedDate; // @synthesize libraryAddedDate=_libraryAddedDate;
@property(nonatomic, getter=isLibraryAdded) _Bool libraryAdded; // @synthesize libraryAdded=_libraryAdded;
@property(copy, nonatomic) NSString *cloudVersionHash; // @synthesize cloudVersionHash=_cloudVersionHash;
@property(copy, nonatomic) NSDate *lastDevicePlaybackDate; // @synthesize lastDevicePlaybackDate=_lastDevicePlaybackDate;
@property(copy, nonatomic) NSDateComponents *lastModifiedDateComponents; // @synthesize lastModifiedDateComponents=_lastModifiedDateComponents;
@property(copy, nonatomic) NSDateComponents *releaseDateComponents; // @synthesize releaseDateComponents=_releaseDateComponents;
@property(copy, nonatomic) NSURL *shareShortURL; // @synthesize shareShortURL=_shareShortURL;
@property(copy, nonatomic) NSURL *shareURL; // @synthesize shareURL=_shareURL;
@property(copy, nonatomic) NSString *shortEditorNotes; // @synthesize shortEditorNotes=_shortEditorNotes;
@property(copy, nonatomic) NSString *editorNotes; // @synthesize editorNotes=_editorNotes;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(nonatomic) long long userEditableComponents; // @synthesize userEditableComponents=_userEditableComponents;
@property(nonatomic, getter=isSubscribed) _Bool subscribed; // @synthesize subscribed=_subscribed;
@property(nonatomic, getter=isVisiblePlaylist) _Bool visiblePlaylist; // @synthesize visiblePlaylist=_visiblePlaylist;
@property(nonatomic, getter=isPublicPlaylist) _Bool publicPlaylist; // @synthesize publicPlaylist=_publicPlaylist;
@property(nonatomic, getter=isCuratorPlaylist) _Bool curatorPlaylist; // @synthesize curatorPlaylist=_curatorPlaylist;
@property(nonatomic, getter=isOwner) _Bool owner; // @synthesize owner=_owner;
@property(nonatomic) _Bool hasExplicitContent; // @synthesize hasExplicitContent=_hasExplicitContent;
@property(nonatomic) _Bool hasCleanContent; // @synthesize hasCleanContent=_hasCleanContent;
@property(nonatomic) unsigned long long trackCount; // @synthesize trackCount=_trackCount;
@property(copy, nonatomic) MPModelCurator *curator; // @synthesize curator=_curator;
@property(copy, nonatomic) NSString *descriptionText; // @synthesize descriptionText=_descriptionText;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)tracksTiledArtworkCatalogWithRows:(unsigned long long)arg1 columns:(unsigned long long)arg2;
- (id)trackArtworkCatalogsWithCount:(long long)arg1;
- (id)editorialArtworkCatalog;
- (id)artworkCatalog;
- (id)descriptionWithType:(long long)arg1;
- (struct MPLibraryAddStatusObserverConfiguration)libraryAddStatusObserverConfiguration;
- (long long)libraryRemovalSupportedOptions;
- (id)newKeepLocalStatusObserverConfiguration;
- (id)objectWithStoreLibraryPersonalizationRelativeModelObject:(id)arg1;
- (id)relativeModelObjectForStoreLibraryPersonalization;
- (id)personalizationScopedPropertiesForProperties:(id)arg1;

@end

