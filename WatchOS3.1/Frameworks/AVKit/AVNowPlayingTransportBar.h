//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class AVDurationTimeFormatter, AVFrameSet, AVGradientView, AVNavigationMarkersGroup, AVPlayer, AVPlayerItem, AVSpinnerView, AVTransportBarMask, NSArray, NSDate, NSDateFormatter, NSLayoutConstraint, NSString, UIImage, UIImageView, UILabel, UIVisualEffectView, _AVBlockedView, _AVPlayerLayerThumbnailView;
@protocol AVNowPlayingFrameSource, AVThumbLayerController;

__attribute__((visibility("hidden")))
@interface AVNowPlayingTransportBar : UIView
{
    UIView *_barView;
    UIVisualEffectView *_barVisualEffectView;
    UIView *_scrubNeedle;
    NSLayoutConstraint *_scrubNeedleLeft;
    NSLayoutConstraint *_scrubNeedleHeight;
    UIView *_elapsedTimeMarker;
    NSLayoutConstraint *_elapsedTimeMarkerLeft;
    UIView *_thumbnailView;
    NSLayoutConstraint *_thumbnailWidthZero;
    NSLayoutConstraint *_thumbnailHeightZero;
    _AVPlayerLayerThumbnailView *_clonedPlayerView;
    _AVPlayerLayerThumbnailView *_scrubPlayerView;
    UIImageView *_scrubImageView;
    AVGradientView *_gradientView;
    _Bool _shouldFadeTimeLabels;
    UILabel *_scrubNeedleTimeLabel;
    UILabel *_elapsedTimeLabel;
    UILabel *_startTimeLabel;
    UILabel *_remainingTimeLabel;
    UILabel *_interstitialTimeLabel;
    UIImageView *_hintIconLeft;
    UIImageView *_hintIconRight;
    AVSpinnerView *_loadingSpinner;
    _AVBlockedView *_blockedView;
    double _timeCorrespondingToElapsedTimeTextLabel;
    double _timeCorrespondingToRemainingTimeTextLabel;
    AVPlayer *_clonedPlayer;
    AVPlayerItem *_scrubPlayerItem;
    _Bool _live;
    _Bool _loading;
    _Bool _unusable;
    _Bool _navigationMarkersVisible;
    _Bool _displaysCurrentTime;
    _Bool _displaysRemainingTime;
    _Bool _scrubbing;
    _Bool _displaysScrubbingFrames;
    _Bool _scrubbingEnabled;
    UIImage *_maskImage;
    id <AVNowPlayingFrameSource> _frameSource;
    id <AVThumbLayerController> _thumbLayerController;
    double _startTime;
    NSDate *_startDate;
    NSDate *_endDate;
    double _duration;
    double _currentTimeInterval;
    double _savedTimeInterval;
    AVNavigationMarkersGroup *_navigationMarkersGroup;
    NSString *_needleText;
    NSArray *_interstitialTimes;
    AVTransportBarMask *_mask;
    AVDurationTimeFormatter *_durationTimeFormatter;
    double _unavailableFractionLeading;
    double _availableFraction;
    NSDateFormatter *_dateFormatter;
    NSDateFormatter *_currentDateFormatter;
    NSDate *_dateCorrespondingToStartTimeTextLabel;
    NSDate *_dateCorrespondingToTimeRemainingTextLabel;
    long long _hint;
}

+ (struct CGSize)maximumSizeForFrameImages;
@property(nonatomic) long long hint; // @synthesize hint=_hint;
@property(retain, nonatomic) NSDate *dateCorrespondingToTimeRemainingTextLabel; // @synthesize dateCorrespondingToTimeRemainingTextLabel=_dateCorrespondingToTimeRemainingTextLabel;
@property(retain, nonatomic) NSDate *dateCorrespondingToStartTimeTextLabel; // @synthesize dateCorrespondingToStartTimeTextLabel=_dateCorrespondingToStartTimeTextLabel;
@property(readonly) NSDateFormatter *currentDateFormatter; // @synthesize currentDateFormatter=_currentDateFormatter;
@property(readonly) NSDateFormatter *dateFormatter; // @synthesize dateFormatter=_dateFormatter;
@property(nonatomic) double availableFraction; // @synthesize availableFraction=_availableFraction;
@property(nonatomic) double unavailableFractionLeading; // @synthesize unavailableFractionLeading=_unavailableFractionLeading;
@property(readonly) AVDurationTimeFormatter *durationTimeFormatter; // @synthesize durationTimeFormatter=_durationTimeFormatter;
@property(readonly) AVTransportBarMask *mask; // @synthesize mask=_mask;
@property(retain, nonatomic) NSArray *interstitialTimes; // @synthesize interstitialTimes=_interstitialTimes;
@property(copy, nonatomic) NSString *needleText; // @synthesize needleText=_needleText;
@property(nonatomic, getter=isScrubbingEnabled) _Bool scrubbingEnabled; // @synthesize scrubbingEnabled=_scrubbingEnabled;
@property(nonatomic) _Bool displaysScrubbingFrames; // @synthesize displaysScrubbingFrames=_displaysScrubbingFrames;
@property(readonly, nonatomic, getter=isScrubbing) _Bool scrubbing; // @synthesize scrubbing=_scrubbing;
@property(retain, nonatomic) AVNavigationMarkersGroup *navigationMarkersGroup; // @synthesize navigationMarkersGroup=_navigationMarkersGroup;
@property(nonatomic, getter=isRemainingTimeDisplayed) _Bool displaysRemainingTime; // @synthesize displaysRemainingTime=_displaysRemainingTime;
@property(nonatomic, getter=isCurrentTimeDisplayed) _Bool displaysCurrentTime; // @synthesize displaysCurrentTime=_displaysCurrentTime;
@property(readonly, nonatomic) _Bool navigationMarkersVisible; // @synthesize navigationMarkersVisible=_navigationMarkersVisible;
@property(readonly, nonatomic) double savedTimeInterval; // @synthesize savedTimeInterval=_savedTimeInterval;
@property(nonatomic) double currentTimeInterval; // @synthesize currentTimeInterval=_currentTimeInterval;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(copy, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
@property(copy, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic, getter=isUnusable) _Bool unusable; // @synthesize unusable=_unusable;
@property(nonatomic, getter=isLoading) _Bool loading; // @synthesize loading=_loading;
@property(nonatomic, getter=isLive) _Bool live; // @synthesize live=_live;
@property(retain, nonatomic) id <AVThumbLayerController> thumbLayerController; // @synthesize thumbLayerController=_thumbLayerController;
@property(nonatomic) __weak id <AVNowPlayingFrameSource> frameSource; // @synthesize frameSource=_frameSource;
@property(retain, nonatomic) UIImage *maskImage; // @synthesize maskImage=_maskImage;
- (void).cxx_destruct;
- (id)makeMaskImageWasDirty:(_Bool *)arg1;
@property(retain, nonatomic) NSArray *interstitialDisplayTimes;
- (void)reloadFrames;
- (void)_updateThumbnailImage;
@property(retain, nonatomic) AVFrameSet *scrubFrameSet;
@property(retain, nonatomic) AVPlayerItem *scrubPlayerItem;
@property(retain, nonatomic) AVPlayer *clonedPlayer;
@property(readonly, nonatomic) unsigned long long currentFrameIndex;
- (unsigned long long)frameIndexForTime:(double)arg1;
- (void)_updateAccessoryVisibility;
- (void)_updateNeedlePositions;
- (void)setCurrentTimeInterval:(double)arg1 animated:(_Bool)arg2;
- (void)_updateTimeLabelVisibility;
- (void)_updateElapsedTimeText;
- (void)_updateRemainingTimeText;
- (void)_updateStartTimeText;
- (void)layoutSubviews;
- (void)stopScrubbingWithResetToPauseMarker:(_Bool)arg1;
- (void)startScrubbingForPauseTime:(double)arg1;
- (void)syncSavedTimeInterval;
- (double)_savedTimeFraction;
- (id)_endDate;
- (double)_currentTimeFraction;
@property(readonly, nonatomic) double endTime;
- (void)setAvailableTimeFrom:(double)arg1 to:(double)arg2;
- (void)setAvailableFractionFrom:(double)arg1 to:(double)arg2 animated:(_Bool)arg3;
- (void)setHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)createViews;
- (struct CGSize)intrinsicContentSize;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)layoutConstraintsForPresentationInView:(id)arg1;

@end

