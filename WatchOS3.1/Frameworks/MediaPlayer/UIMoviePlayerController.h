//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class MPAVController, MPAVItem, MPMovieAccessLog, MPMovieErrorLog, MPVideoView, NSArray, NSDate, NSString, UIImage, UIMovieView, UINavigationController, UIView, UIViewController, _UIHostedWindow;
@protocol MPVideoControllerProtocol;

@interface UIMoviePlayerController : NSObject
{
    id _delegate;
    MPAVItem *_item;
    NSString *_moviePath;
    MPAVController *_player;
    UIImage *_posterImage;
    NSString *_youTubeVideoID;
    UIViewController *_topViewController;
    id <MPVideoControllerProtocol> _activeVideoController;
    MPVideoView *_videoView;
    long long _transitionCount;
    UINavigationController *_portraitNavigationController;
    struct __CFBag *_ignoredChangeTypes;
    long long _pendingInterfaceOrientation;
    MPAVItem *_pendingItem;
    MPAVItem *_pendingItemWithDifferentType;
    struct CGRect _layoutRect;
    long long _lastSetUIInterfaceOrientation;
    long long _interfaceOrientation;
    long long _interfaceOrientationFromDevice;
    NSString *_playbackErrorDescription;
    unsigned long long _autoRotationMask;
    unsigned int _displayableParts;
    unsigned int _unmodifiedDisplayableParts;
    unsigned int _desiredParts;
    unsigned long long _audioControlsStyle;
    unsigned long long _playableContentTypeOverride;
    double _timeWhenResignedActive;
    double _timeToSnapshot;
    NSArray *_closedCaptionData;
    struct {
        unsigned int canShowControlsOverlay:1;
        unsigned int wantsControlsOverlayVis:1;
        unsigned int wantsControlsOverlayAnim:1;
        unsigned int wantsControlsOverlayDisableAutohide:1;
        unsigned int wantsFullscreen:1;
        unsigned int alwaysFullscreen:1;
        unsigned int canAnimateControlsOverlay:1;
        unsigned int autoplayWhenLikelyToKeepUp:1;
        unsigned int disallowsVideoOut:1;
        unsigned int exited:1;
        unsigned int generatingOrientationNotifications:1;
        unsigned int forStreaming:1;
        unsigned int isExternalTransformationActive:1;
        unsigned int controlsVisibleBeforeExternalTransformation:1;
        unsigned int isActive:1;
        unsigned int resigningActive:1;
        unsigned int didResignActive:1;
        unsigned int uiPrepared:1;
        unsigned int isChangingMoviePath:1;
        unsigned int alwaysAllowHidingControlsOverlay:1;
        unsigned int schedulePortraitLoadingIndicator:1;
        unsigned int clientClearedMoviePath:1;
        unsigned int canCommitOverlayChanges:1;
        unsigned int usingDebugTestPath:1;
        unsigned int allowsWirelessPlayback:1;
        unsigned int useHostedWindowWhenFullscreen:1;
    } _mpcBitfield;
    _Bool _isPreparedForPlayback;
    _Bool _stopAtEnd;
    _Bool _muted;
    _Bool _areClosedCaptionsAvailable;
    _Bool _limitReadAhead;
    _Bool _useApplicationAudioSession;
    _Bool _useHostedWindowWhenFullscreen;
    _Bool _videoOutActive;
    _Bool _canContinuePlayingInBackground;
    _Bool _canContinuePlayingWhenLocked;
    _Bool _disallowsVideoOut;
    _Bool _fullscreen;
    _Bool _closedCaptioningEnabled;
    _Bool _disableAlternateTextTrackRendering;
    _Bool _alwaysAllowHidingControlsOverlay;
    float _playbackRate;
    float _volume;
    unsigned int _hostedWindowContextID;
    unsigned long long _options;
    UIView *_view;
    unsigned long long _playableContentType;
    unsigned long long _playbackState;
    double _duration;
    double _currentTime;
    unsigned long long _bufferingState;
    double _playableDuration;
    double _playableStartTime;
    double _playableEndTime;
    double _seekableStartTime;
    double _seekableEndTime;
    NSDate *_currentDate;
    long long _fileSize;
    NSString *_movieTitle;
    NSString *_movieSubtitle;
    _UIHostedWindow *_hostedWindow;
    NSString *_audioSessionModeOverride;
    UIMovieView *_movieView;
    UIImage *_backgroundPlaceholderImage;
    UIView *_fullscreenView;
    UIView *_alternateTextTrackView;
    MPMovieAccessLog *_accessLog;
    MPMovieErrorLog *_errorLog;
    struct CGSize _naturalSize;
}

@property(nonatomic) _Bool alwaysAllowHidingControlsOverlay; // @synthesize alwaysAllowHidingControlsOverlay=_alwaysAllowHidingControlsOverlay;
@property(readonly, nonatomic) MPMovieErrorLog *errorLog; // @synthesize errorLog=_errorLog;
@property(readonly, nonatomic) MPMovieAccessLog *accessLog; // @synthesize accessLog=_accessLog;
@property(readonly, nonatomic) UIView *alternateTextTrackView; // @synthesize alternateTextTrackView=_alternateTextTrackView;
@property(nonatomic) _Bool disableAlternateTextTrackRendering; // @synthesize disableAlternateTextTrackRendering=_disableAlternateTextTrackRendering;
@property(nonatomic) _Bool closedCaptioningEnabled; // @synthesize closedCaptioningEnabled=_closedCaptioningEnabled;
@property(readonly, nonatomic) UIView *fullscreenView; // @synthesize fullscreenView=_fullscreenView;
@property(nonatomic, getter=isFullscreen) _Bool fullscreen; // @synthesize fullscreen=_fullscreen;
@property(retain, nonatomic) UIImage *backgroundPlaceholderImage; // @synthesize backgroundPlaceholderImage=_backgroundPlaceholderImage;
@property(retain, nonatomic) UIImage *posterImage; // @synthesize posterImage=_posterImage;
@property(nonatomic) _Bool disallowsVideoOut; // @synthesize disallowsVideoOut=_disallowsVideoOut;
@property(readonly, nonatomic) struct CGSize naturalSize; // @synthesize naturalSize=_naturalSize;
@property(copy, nonatomic) NSString *playbackErrorDescription; // @synthesize playbackErrorDescription=_playbackErrorDescription;
@property(nonatomic) unsigned long long audioControlsStyle; // @synthesize audioControlsStyle=_audioControlsStyle;
@property(readonly, nonatomic) UIMovieView *movieView; // @synthesize movieView=_movieView;
@property(retain, nonatomic) NSString *audioSessionModeOverride; // @synthesize audioSessionModeOverride=_audioSessionModeOverride;
@property(copy, nonatomic) NSString *youTubeVideoID; // @synthesize youTubeVideoID=_youTubeVideoID;
@property(readonly, nonatomic) _Bool canContinuePlayingWhenLocked; // @synthesize canContinuePlayingWhenLocked=_canContinuePlayingWhenLocked;
@property(readonly, nonatomic) _Bool canContinuePlayingInBackground; // @synthesize canContinuePlayingInBackground=_canContinuePlayingInBackground;
@property(readonly, nonatomic) _Bool videoOutActive; // @synthesize videoOutActive=_videoOutActive;
@property(readonly, nonatomic) unsigned int hostedWindowContextID; // @synthesize hostedWindowContextID=_hostedWindowContextID;
@property(readonly, nonatomic) _UIHostedWindow *hostedWindow; // @synthesize hostedWindow=_hostedWindow;
@property(nonatomic) _Bool useHostedWindowWhenFullscreen; // @synthesize useHostedWindowWhenFullscreen=_useHostedWindowWhenFullscreen;
@property(copy, nonatomic) NSString *movieSubtitle; // @synthesize movieSubtitle=_movieSubtitle;
@property(copy, nonatomic) NSString *movieTitle; // @synthesize movieTitle=_movieTitle;
@property(readonly, nonatomic) long long fileSize; // @synthesize fileSize=_fileSize;
@property(nonatomic) _Bool useApplicationAudioSession; // @synthesize useApplicationAudioSession=_useApplicationAudioSession;
@property(readonly, nonatomic) NSDate *currentDate; // @synthesize currentDate=_currentDate;
@property(nonatomic) _Bool limitReadAhead; // @synthesize limitReadAhead=_limitReadAhead;
@property(readonly, nonatomic) double seekableEndTime; // @synthesize seekableEndTime=_seekableEndTime;
@property(readonly, nonatomic) double seekableStartTime; // @synthesize seekableStartTime=_seekableStartTime;
@property(readonly, nonatomic) double playableEndTime; // @synthesize playableEndTime=_playableEndTime;
@property(readonly, nonatomic) double playableStartTime; // @synthesize playableStartTime=_playableStartTime;
@property(readonly, nonatomic) double playableDuration; // @synthesize playableDuration=_playableDuration;
@property(readonly, nonatomic) unsigned long long bufferingState; // @synthesize bufferingState=_bufferingState;
@property(readonly, nonatomic) _Bool areClosedCaptionsAvailable; // @synthesize areClosedCaptionsAvailable=_areClosedCaptionsAvailable;
@property(readonly, nonatomic) float volume; // @synthesize volume=_volume;
@property(readonly, nonatomic) _Bool muted; // @synthesize muted=_muted;
@property(nonatomic) double currentTime; // @synthesize currentTime=_currentTime;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) _Bool stopAtEnd; // @synthesize stopAtEnd=_stopAtEnd;
@property(readonly, nonatomic) unsigned long long playbackState; // @synthesize playbackState=_playbackState;
@property(nonatomic) float playbackRate; // @synthesize playbackRate=_playbackRate;
@property(readonly, nonatomic) _Bool isPreparedForPlayback; // @synthesize isPreparedForPlayback=_isPreparedForPlayback;
@property(nonatomic) unsigned long long playableContentType; // @synthesize playableContentType=_playableContentType;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) MPAVItem *item; // @synthesize item=_item;
@property(readonly, nonatomic) UIView *view; // @synthesize view=_view;
@property(copy, nonatomic) NSString *moviePath; // @synthesize moviePath=_moviePath;
@property(nonatomic) unsigned long long options; // @synthesize options=_options;
- (void).cxx_destruct;

@end

