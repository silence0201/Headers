//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <IOBluetooth/CBCentralManagerDelegate-Protocol.h>
#import <IOBluetooth/CBPeripheralDelegate-Protocol.h>

@class CBCentralManager, CBPeripheral, IOBluetoothDevice, IOBluetoothL2CAPChannel, NSDate, NSMutableArray, NSString;
@protocol IOBluetoothLEADelegate;

@interface IOBluetoothLEA : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate>
{
    IOBluetoothDevice *_bluetoothDevice;
    CBCentralManager *_central;
    CBPeripheral *_peripheral;
    IOBluetoothLEA *_relatedDevice;
    IOBluetoothL2CAPChannel *_LEAPChannel;
    IOBluetoothL2CAPChannel *_LEASChannel;
    id <IOBluetoothLEADelegate> _delegate;
    long long _state;
    long long _pendingState;
    unsigned char _previousVolume;
    BOOL _previousMuted;
    NSDate *_lastUpdatedVolume;
    unsigned short _version;
    unsigned short _companyID;
    unsigned short _hardwareVersion;
    unsigned short _softwareVersion;
    unsigned char _maxSupportedPacketSize;
    BOOL _output;
    BOOL _input;
    BOOL _stereo;
    BOOL _rightChannel;
    BOOL _audioMixing;
    BOOL _streamReady;
    NSMutableArray *_supportedCodecs;
    unsigned short _renderingDelay;
    unsigned char _codec;
    struct LEACodecProperty _codecProperty;
    unsigned char _maxPacketSize;
    unsigned char _audioContent;
    float _sampleRate;
    unsigned int _bitrate;
    float _latency;
}

+ (struct LEACodecProperty)propertyForCodec:(unsigned char)arg1 maxPacketSize:(unsigned char)arg2;
@property unsigned char audioContent; // @synthesize audioContent=_audioContent;
@property struct LEACodecProperty codecProperty; // @synthesize codecProperty=_codecProperty;
@property unsigned char codec; // @synthesize codec=_codec;
@property unsigned short renderingDelay; // @synthesize renderingDelay=_renderingDelay;
@property(retain) NSMutableArray *supportedCodecs; // @synthesize supportedCodecs=_supportedCodecs;
@property BOOL streamReady; // @synthesize streamReady=_streamReady;
@property BOOL audioMixing; // @synthesize audioMixing=_audioMixing;
@property BOOL rightChannel; // @synthesize rightChannel=_rightChannel;
@property BOOL stereo; // @synthesize stereo=_stereo;
@property BOOL input; // @synthesize input=_input;
@property BOOL output; // @synthesize output=_output;
@property unsigned char maxSupportedPacketSize; // @synthesize maxSupportedPacketSize=_maxSupportedPacketSize;
@property unsigned short softwareVersion; // @synthesize softwareVersion=_softwareVersion;
@property unsigned short hardwareVersion; // @synthesize hardwareVersion=_hardwareVersion;
@property unsigned short companyID; // @synthesize companyID=_companyID;
@property unsigned short version; // @synthesize version=_version;
@property(retain) NSDate *lastUpdatedVolume; // @synthesize lastUpdatedVolume=_lastUpdatedVolume;
@property BOOL previousMuted; // @synthesize previousMuted=_previousMuted;
@property unsigned char previousVolume; // @synthesize previousVolume=_previousVolume;
@property long long pendingState; // @synthesize pendingState=_pendingState;
@property long long state; // @synthesize state=_state;
@property id <IOBluetoothLEADelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) IOBluetoothL2CAPChannel *LEASChannel; // @synthesize LEASChannel=_LEASChannel;
@property(retain) IOBluetoothL2CAPChannel *LEAPChannel; // @synthesize LEAPChannel=_LEAPChannel;
@property IOBluetoothLEA *relatedDevice; // @synthesize relatedDevice=_relatedDevice;
@property(retain) CBPeripheral *peripheral; // @synthesize peripheral=_peripheral;
@property(retain) CBCentralManager *central; // @synthesize central=_central;
@property(retain) IOBluetoothDevice *bluetoothDevice; // @synthesize bluetoothDevice=_bluetoothDevice;
@property(readonly, copy) NSString *description;
- (void)l2capChannelData:(id)arg1 data:(void *)arg2 length:(unsigned long long)arg3;
- (void)l2capChannelPublished:(id)arg1;
- (void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverServices:(id)arg2;
- (void)centralManager:(id)arg1 didDisconnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2;
- (void)centralManagerDidUpdateState:(id)arg1;
- (void)sendAudioData:(char *)arg1 length:(unsigned long long)arg2;
- (void)sendAuth:(char *)arg1;
- (void)sendVolume;
- (void)sendRestart;
- (void)sendError:(unsigned short)arg1 command:(unsigned char)arg2;
- (void)sendPassthrough:(id)arg1;
- (void)sendStopStream;
- (void)sendStartStream:(unsigned short)arg1;
- (void)sendSelectCodec;
- (void)sendVersion;
- (void)stopAudio;
- (void)startAudio;
- (void)disconnect;
- (void)connect;
- (void)finalize;
- (id)initWithIdentifier:(id)arg1;
@property(readonly) float latency;
@property(readonly) unsigned int bitrate;
@property(readonly) float sampleRate;
@property(readonly) double connectionInterval;
@property(readonly) unsigned char maxPacketSize;
@property BOOL muted;
@property unsigned char volume;
- (void)removeAudioListeners;
- (void)addAudioListeners;
@property(readonly) unsigned int outputDeviceID;
@property(readonly) unsigned int inputDeviceID;
@property(readonly) NSString *pendingStateString;
@property(readonly) NSString *stateString;
- (id)stringOfState:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

