//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <EventKit/EKObject.h>

#import <EventKit/EKProtocolMutableCalendar-Protocol.h>

@class EKSource, NSColor, NSDictionary, NSError, NSManagedObjectID, NSSet, NSString, NSURL;
@protocol EKProtocolCalendar, EKProtocolCalendarSource;

@interface EKCalendar : EKObject <EKProtocolMutableCalendar>
{
    BOOL allowsScheduling;
    BOOL allowEvents;
    BOOL allowReminders;
    BOOL allowsContentModifications;
    BOOL cachedHasSharees;
    BOOL defaultOrganizerIsMeForNewItems;
    BOOL isDefaultSchedulingCalendar;
    BOOL isDistinguishedExchangeCalendar;
    BOOL isAffectingAvailability;
    BOOL isFamilyCalendar;
    BOOL isMarkedUndeletable;
    BOOL isMarkedImmutableSharees;
    BOOL isFacebookBirthdayCalendar;
    BOOL isRenameable;
    BOOL isColorEditable;
    BOOL isShareable;
    BOOL isSubscribed;
    BOOL isSubscribedHolidayCalendar;
    BOOL isSuggestedEventCalendar;
    BOOL _subscribed;
    NSString *calendarIdentifier;
    NSURL *defaultOrganizerAddressForNewItems;
    NSString *defaultOrganizerNameForNewItems;
    NSString *defaultOrganizerEmailForNewItems;
    NSString *path;
    NSURL *prePublishURL;
    NSURL *subscriptionURL;
    NSString *sharedOwnerAddress;
    NSSet *sharedOwnerAddresses;
    NSString *sharedOwnerName;
    NSString *sharingStatusString;
    NSString *serverPath;
}

+ (BOOL)_calendarsAreSharedToMeInSameSourceAndHaveSameOwner:(id)arg1;
+ (BOOL)_calendarsAreInSameSource:(id)arg1;
+ (BOOL)_calendarsAllowSharedSchedulingIfNeeded:(id)arg1;
+ (BOOL)_calendarsContainsSharedToMeCalendar:(id)arg1;
+ (id)_calendarIdentifiersForCalendars:(id)arg1;
+ (id)multiValueDiffKeys;
+ (id)singleValueDiffKeys;
+ (id)batchChangeNotificationName;
+ (id)typeDescription:(long long)arg1;
+ (long long)typeFromDescription:(id)arg1;
+ (long long)typeForCalendar:(id)arg1;
+ (id)typeStringForCalendar:(id)arg1;
+ (id)knownImmutableKeys;
+ (id)knownRelationshipSingleValueKeys;
+ (id)knownRelationshipMultiValueKeys;
+ (id)knownIdentityKeys;
+ (id)knownSingleValueKeys;
+ (BOOL)isWeakRelationship;
+ (id)orderSortDescriptors;
+ (id)uniqueIdentifierForObject:(id)arg1;
+ (Class)frozenClass;
+ (id)calendarForEntityType:(unsigned long long)arg1 eventStore:(id)arg2;
+ (id)calendarWithCalendar:(id)arg1 eventStore:(id)arg2;
+ (id)actionStringsPluralDisplayName;
+ (id)actionStringsDisplayName;
@property(readonly, nonatomic) BOOL isSubscribed; // @synthesize isSubscribed;
@property(readonly, nonatomic) NSString *serverPath; // @synthesize serverPath;
@property(readonly, nonatomic) NSString *sharingStatusString; // @synthesize sharingStatusString;
@property(readonly, nonatomic) NSString *sharedOwnerName; // @synthesize sharedOwnerName;
@property(readonly, nonatomic) NSSet *sharedOwnerAddresses; // @synthesize sharedOwnerAddresses;
@property(readonly, nonatomic) NSURL *subscriptionURL; // @synthesize subscriptionURL;
@property(readonly, nonatomic) NSURL *prePublishURL; // @synthesize prePublishURL;
@property(readonly, nonatomic) NSString *path; // @synthesize path;
@property(readonly, nonatomic) BOOL isSuggestedEventCalendar; // @synthesize isSuggestedEventCalendar;
@property(readonly, nonatomic) BOOL isSubscribedHolidayCalendar; // @synthesize isSubscribedHolidayCalendar;
@property(readonly, nonatomic) BOOL isShareable; // @synthesize isShareable;
@property(readonly, nonatomic) BOOL isRenameable; // @synthesize isRenameable;
@property(readonly, nonatomic) BOOL isFacebookBirthdayCalendar; // @synthesize isFacebookBirthdayCalendar;
@property(readonly) BOOL isMarkedImmutableSharees; // @synthesize isMarkedImmutableSharees;
@property(readonly) BOOL isMarkedUndeletable; // @synthesize isMarkedUndeletable;
@property(readonly, nonatomic) BOOL isFamilyCalendar; // @synthesize isFamilyCalendar;
@property(readonly, nonatomic) BOOL isAffectingAvailability; // @synthesize isAffectingAvailability;
@property(nonatomic) BOOL isDistinguishedExchangeCalendar; // @synthesize isDistinguishedExchangeCalendar;
@property(nonatomic) BOOL isDefaultSchedulingCalendar; // @synthesize isDefaultSchedulingCalendar;
@property(readonly, nonatomic) NSString *defaultOrganizerEmailForNewItems; // @synthesize defaultOrganizerEmailForNewItems;
@property(readonly, nonatomic) NSString *defaultOrganizerNameForNewItems; // @synthesize defaultOrganizerNameForNewItems;
@property(readonly, nonatomic) BOOL defaultOrganizerIsMeForNewItems; // @synthesize defaultOrganizerIsMeForNewItems;
@property(readonly, nonatomic) NSURL *defaultOrganizerAddressForNewItems; // @synthesize defaultOrganizerAddressForNewItems;
@property(readonly, nonatomic) NSString *calendarIdentifier; // @synthesize calendarIdentifier;
@property(readonly, nonatomic) BOOL cachedHasSharees; // @synthesize cachedHasSharees;
@property(nonatomic) BOOL allowReminders; // @synthesize allowReminders;
@property(nonatomic) BOOL allowEvents; // @synthesize allowEvents;
@property(readonly, nonatomic) BOOL allowsScheduling; // @synthesize allowsScheduling;
- (void).cxx_destruct;
- (id)_existingObjectForDecodedIdentifier:(id)arg1;
- (BOOL)_useExistingObjectWhenDecoding;
- (id)coreDataEntityName;
- (BOOL)revert;
- (void)refetch;
- (id)_updatedBackingCalendar;
- (BOOL)_refreshable;
- (BOOL)_reset;
- (BOOL)isDifferentFromCommitted;
- (id)committedCalendar;
- (long long)deletionWarningsMask;
- (id)exportData;
- (void)importData:(id)arg1 synchronous:(BOOL)arg2 processEvents:(BOOL)arg3 processReminders:(BOOL)arg4 progressBlock:(CDUnknownBlockType)arg5 finishBlock:(CDUnknownBlockType)arg6;
- (void)importData:(id)arg1 insertOptions:(unsigned long long)arg2 updateOptions:(unsigned long long)arg3 synchronous:(BOOL)arg4 processEvents:(BOOL)arg5 processReminders:(BOOL)arg6 progressBlock:(CDUnknownBlockType)arg7 finishBlock:(CDUnknownBlockType)arg8;
- (BOOL)_validateDeletableHelper:(id *)arg1;
- (BOOL)_validateEntityTypeIsSupported:(id *)arg1;
- (BOOL)_validateSource:(id *)arg1;
- (BOOL)_validateEditable:(id *)arg1;
- (BOOL)_hasChangesForKeyAndKeyIsOnlyChangedKey:(id)arg1;
- (BOOL)_validateAccessConsent:(id *)arg1;
- (BOOL)_anotherCalendarForRemindersExists;
- (BOOL)_anotherCalendarForDefaultSchedulingExists;
- (id)_otherCalendarsInSameSource;
- (id)_allCalendarsInSameSource;
- (id)_calendarsInEventStoreMatchingOurEntityType;
@property(readonly, nonatomic) BOOL eligibleForDefaultSchedulingCalendar;
- (BOOL)_validateDeletable:(id *)arg1;
- (BOOL)validate:(id *)arg1;
- (BOOL)remove:(id *)arg1;
- (id)freeBusyCache;
- (void)reinviteSharees:(id)arg1;
@property(readonly, nonatomic) NSURL *externalURI;
@property(readonly, nonatomic) unsigned long long supportedEventAvailabilities;
@property(readonly, nonatomic, getter=isImmutable) BOOL immutable;
- (BOOL)_isReadOnlyDelegate;
- (BOOL)isDeletable;
@property(readonly, nonatomic) BOOL isEditable;
@property(readonly, nonatomic) unsigned long long allowedEntityTypes;
@property(copy, nonatomic) NSString *symbolicColor;
@property(copy, nonatomic) NSColor *color;
@property(readonly, nonatomic) long long type;
- (void)setTypeString:(id)arg1;
- (id)typeString;
- (id)sourceIdentifierForCalendar;
@property(retain, nonatomic) EKSource *source;
@property(readonly, nonatomic) BOOL _allowsAttachments;
@property(readonly, nonatomic) BOOL _allowsPrivateModifications;
- (void)setSuppressEventSchedulingNotifications:(BOOL)arg1;
- (BOOL)suppressEventSchedulingNotifications;
- (void)setContainerSource:(id)arg1;
@property(readonly, copy, nonatomic) id <EKProtocolCalendarSource> containerSource;
- (long long)sharingStatus;
- (id)alarms;
- (void)setDefaultAlarmsForTimedEvents:(id)arg1;
@property(readonly, nonatomic) NSSet *defaultAlarmsForTimedEvents;
- (void)setDefaultAlarmsForAllDayEvents:(id)arg1;
@property(readonly, nonatomic) NSSet *defaultAlarmsForAllDayEvents;
- (BOOL)supportsCollectionAlarms;
- (void)removeAlarms:(id)arg1;
- (void)addAlarms:(id)arg1;
- (void)setAlarms:(id)arg1;
- (void)removeSharee:(id)arg1;
- (void)addSharee:(id)arg1;
- (void)setSharees:(id)arg1;
- (id)shareesAndOwner;
- (id)sharees;
- (void)setNotes:(id)arg1;
@property(readonly, copy, nonatomic) NSString *notes;
- (void)setPublishURL:(id)arg1;
@property(readonly, copy, nonatomic) NSURL *publishURL;
@property(readonly, nonatomic) NSString *sharedOwnerAddress; // @synthesize sharedOwnerAddress;
- (void)setIgnoreAlarms:(BOOL)arg1;
@property(readonly, nonatomic) BOOL ignoreAlarms;
- (id)defaultOrganizerForNewItems;
@property(nonatomic) int displayOrder;
- (void)setSymbolicColorName:(id)arg1;
@property(readonly, copy, nonatomic) NSString *symbolicColorName;
- (void)setColorString:(id)arg1;
@property(readonly, copy, nonatomic) NSString *colorString;
@property(readonly, nonatomic) BOOL isColorEditable; // @synthesize isColorEditable;
@property(copy, nonatomic) NSString *title;
- (void)reorderCalendars:(id)arg1 betweenEarlier:(id)arg2 later:(id)arg3;
- (void)reorderBetweenEarlier:(id)arg1 later:(id)arg2;
- (void)_updateToMaxDisplayOrder;
@property(readonly, nonatomic) NSError *calendarError;
@property(readonly, nonatomic) long long notificationCount;
@property(readonly, nonatomic, getter=isCurrentUserCalendarOwner) BOOL currentUserCalendarOwner;
@property(readonly, nonatomic) id <EKProtocolCalendar> backingCalendar;
- (BOOL)hasSharees;
@property(readonly, nonatomic) BOOL allowsContentModifications; // @synthesize allowsContentModifications;
- (id)initWithObject:(id)arg1 createPartialBackingObject:(BOOL)arg2 keepBackingObject:(BOOL)arg3 preFrozenRelationshipObjects:(id)arg4 additionalFrozenProperties:(id)arg5;
- (id)initWithAllowEvents:(BOOL)arg1 allowReminders:(BOOL)arg2;
- (id)actionStringsDisplayTitle;
- (BOOL)removeWithSpan:(long long)arg1 error:(id *)arg2;
- (BOOL)saveWithSpan:(long long)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, nonatomic) BOOL canBeConvertedToFullObject;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL isPartialObject;
@property(readonly, nonatomic) NSManagedObjectID *managedObjectID;
@property(readonly, nonatomic) NSDictionary *preFrozenRelationshipObjects;
@property(readonly, nonatomic, getter=isSubscribed) BOOL subscribed; // @synthesize subscribed=_subscribed;
@property(readonly) Class superclass;

@end

