//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class CWChannel, CWNetwork, CWNetworkProfile, CWTetherDevice, NSData, NSDictionary, NSSet, NSString;

@protocol WiFiXPCRequestProtocol
- (void)internal_userAgentWillShowJoinUIForWiFiNetwork:(CWNetwork *)arg1 interfaceName:(NSString *)arg2 dialogToken:(long long)arg3 reply:(void (^)(NSError *))arg4;
- (void)internal_foundTetherDevices:(NSSet *)arg1;
- (void)joinWiFiNetwork:(CWNetwork *)arg1 interfaceName:(NSString *)arg2 reply:(void (^)(NSError *, BOOL))arg3;
- (void)currentTetherDeviceWithInterfaceName:(NSString *)arg1 reply:(void (^)(NSError *, CWTetherDevice *))arg2;
- (void)connectToTetherDevice:(CWTetherDevice *)arg1 remember:(BOOL)arg2 interfaceName:(NSString *)arg3 token:(long long)arg4 authorization:(NSData *)arg5 reply:(void (^)(NSError *))arg6;
- (void)stopBrowsingForTetherDevicesAndReply:(void (^)(NSError *))arg1;
- (void)startBrowsingForTetherDevicesAndReply:(void (^)(NSError *))arg1;
- (void)restoreJoinConfigurationWithInterfaceName:(NSString *)arg1 uuid:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)saveJoinConfigurationWithInterfaceName:(NSString *)arg1 reply:(void (^)(NSError *, NSString *))arg2;
- (void)stopMonitoringAllEventsAndReply:(void (^)(NSError *))arg1;
- (void)stopMonitoringEventWithType:(long long)arg1 reply:(void (^)(NSError *))arg2;
- (void)startMonitoringEventWithType:(long long)arg1 reply:(void (^)(NSError *))arg2;
- (void)relinquishPriorityLockWithToken:(long long)arg1 reply:(void (^)(NSError *))arg2;
- (void)acquirePriorityLockWithType:(long long)arg1 priority:(long long)arg2 maximumAge:(double)arg3 token:(long long)arg4 reply:(void (^)(NSError *))arg5;
- (void)relinquishRequestLockWithType:(long long)arg1 interfaceName:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)acquireRequestLockWithType:(long long)arg1 interfaceName:(NSString *)arg2 priority:(long long)arg3 maximumAge:(double)arg4 reply:(void (^)(NSError *))arg5;
- (void)relinquishBluetoothPagingLockAndReply:(void (^)(NSError *))arg1;
- (void)acquireBluetoothPagingLockAndReply:(void (^)(NSError *))arg1;
- (void)relinquishBluetoothPagingLockWithInterfaceName:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (void)acquireBluetoothPagingLockWithInterfaceName:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (void)startAutoJoinForInterfaceName:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (void)dumpWiFiTemporaryLogAndReply:(void (^)(NSError *))arg1;
- (void)forgetPasspointWiFiNetworkProfileWithDomainName:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (void)forgetWiFiNetworkProfileWithSSID:(NSData *)arg1 reply:(void (^)(NSError *))arg2;
- (void)rememberWiFiNetworkProfile:(CWNetworkProfile *)arg1 reply:(void (^)(NSError *))arg2;
- (void)setWiFiHostAPModeKeychainItemforInterfaceName:(NSString *)arg1 password:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)setWiFiEAPKeychainItemforSSID:(NSData *)arg1 identity:(NSData *)arg2 reply:(void (^)(NSError *))arg3;
- (void)setWiFiEAPKeychainItemforSSID:(NSData *)arg1 username:(NSString *)arg2 password:(NSString *)arg3 reply:(void (^)(NSError *))arg4;
- (void)setWiFiKeychainItemforSSID:(NSData *)arg1 password:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)stopHostAPModeWithInterfaceName:(NSString *)arg1 token:(long long)arg2 priority:(long long)arg3 reply:(void (^)(NSError *))arg4;
- (void)startHostAPModeUsingConfigurationWithInterfaceName:(NSString *)arg1 token:(long long)arg2 priority:(long long)arg3 reply:(void (^)(NSError *))arg4;
- (void)startHostAPModeWithNetworkName:(NSString *)arg1 securityType:(unsigned long long)arg2 channel:(CWChannel *)arg3 password:(NSString *)arg4 interfaceName:(NSString *)arg5 token:(long long)arg6 priority:(long long)arg7 reply:(void (^)(NSError *))arg8;
- (void)stopIBSSModeForInterfaceName:(NSString *)arg1 token:(long long)arg2 priority:(long long)arg3 authorization:(NSData *)arg4 reply:(void (^)(NSError *))arg5;
- (void)startIBSSModeWithSSID:(NSData *)arg1 securityType:(unsigned long long)arg2 channel:(CWChannel *)arg3 password:(NSString *)arg4 interfaceName:(NSString *)arg5 token:(long long)arg6 priority:(long long)arg7 authorization:(NSData *)arg8 reply:(void (^)(NSError *))arg9;
- (void)disassociateForInterfaceName:(NSString *)arg1 token:(long long)arg2 priority:(long long)arg3 authorization:(NSData *)arg4 reply:(void (^)(NSError *))arg5;
- (void)associateToSystemMode8021XWiFiNetwork:(CWNetwork *)arg1 interfaceName:(NSString *)arg2 token:(long long)arg3 priority:(long long)arg4 authorization:(NSData *)arg5 reply:(void (^)(NSError *))arg6;
- (void)associateToWiFiNetworkUsingSystemKeychain:(CWNetwork *)arg1 interfaceName:(NSString *)arg2 token:(long long)arg3 priority:(long long)arg4 authorization:(NSData *)arg5 reply:(void (^)(NSError *))arg6;
- (void)associateToWPSNetwork:(CWNetwork *)arg1 pin:(NSString *)arg2 remember:(BOOL)arg3 interfaceName:(NSString *)arg4 token:(long long)arg5 priority:(long long)arg6 authorization:(NSData *)arg7 reply:(void (^)(NSError *))arg8;
- (void)associateToPasspointWiFiNetwork:(CWNetwork *)arg1 domainName:(NSString *)arg2 interfaceName:(NSString *)arg3 token:(long long)arg4 priority:(long long)arg5 authorization:(NSData *)arg6 reply:(void (^)(NSError *))arg7;
- (void)associateToLoginWindowMode8021XWiFiNetwork:(CWNetwork *)arg1 profile:(NSDictionary *)arg2 username:(NSString *)arg3 password:(NSString *)arg4 interfaceName:(NSString *)arg5 token:(long long)arg6 priority:(long long)arg7 authorization:(NSData *)arg8 reply:(void (^)(NSError *))arg9;
- (void)associateToUserMode8021XWiFiNetworkUsingKeychain:(CWNetwork *)arg1 remember:(BOOL)arg2 interfaceName:(NSString *)arg3 token:(long long)arg4 priority:(long long)arg5 authorization:(NSData *)arg6 reply:(void (^)(NSError *))arg7;
- (void)associateToUserMode8021XWiFiNetwork:(CWNetwork *)arg1 username:(NSString *)arg2 password:(NSString *)arg3 identity:(NSData *)arg4 remember:(BOOL)arg5 interfaceName:(NSString *)arg6 token:(long long)arg7 priority:(long long)arg8 authorization:(NSData *)arg9 reply:(void (^)(NSError *))arg10;
- (void)associateToWiFiNetwork:(CWNetwork *)arg1 password:(NSString *)arg2 remember:(BOOL)arg3 interfaceName:(NSString *)arg4 token:(long long)arg5 priority:(long long)arg6 authorization:(NSData *)arg7 reply:(void (^)(NSError *))arg8;
- (void)setWEPKey:(NSData *)arg1 flags:(unsigned long long)arg2 index:(long long)arg3 interfaceName:(NSString *)arg4 token:(long long)arg5 priority:(long long)arg6 reply:(void (^)(NSError *))arg7;
- (void)setPairwiseMasterKey:(NSData *)arg1 interfaceName:(NSString *)arg2 token:(long long)arg3 priority:(long long)arg4 reply:(void (^)(NSError *))arg5;
- (void)queryANQPCacheWithElements:(unsigned long long)arg1 network:(CWNetwork *)arg2 maxAge:(double)arg3 reply:(void (^)(NSError *, NSSet *))arg4;
- (void)queryANQPElements:(unsigned long long)arg1 network:(CWNetwork *)arg2 maxAge:(double)arg3 interfaceName:(NSString *)arg4 waitForWiFi:(BOOL)arg5 waitForBluetooth:(BOOL)arg6 token:(long long)arg7 priority:(long long)arg8 reply:(void (^)(NSError *, NSSet *))arg9;
- (void)clearANQPCacheForNetwork:(CWNetwork *)arg1 reply:(void (^)(NSError *))arg2;
- (void)clearScanCacheWithInterfaceName:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (void)queryScanCacheWithChannels:(NSSet *)arg1 ssidList:(NSSet *)arg2 maxAge:(double)arg3 maxMissCount:(long long)arg4 maxWakeCount:(long long)arg5 maxAutoJoinCount:(long long)arg6 interfaceName:(NSString *)arg7 reply:(void (^)(NSError *, NSSet *))arg8;
- (void)performScanWithChannels:(NSSet *)arg1 ssidList:(NSSet *)arg2 legacyScanSSID:(NSString *)arg3 includeHiddenNetworks:(BOOL)arg4 mergeScanResults:(BOOL)arg5 maxAge:(double)arg6 maxMissCount:(long long)arg7 maxWakeCount:(long long)arg8 maxAutoJoinCount:(long long)arg9 interfaceName:(NSString *)arg10 waitForWiFi:(BOOL)arg11 waitForBluetooth:(BOOL)arg12 token:(long long)arg13 priority:(long long)arg14 reply:(void (^)(NSError *, NSSet *))arg15;
- (void)setWiFiChannel:(CWChannel *)arg1 interfaceName:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)setWiFiPowerState:(BOOL)arg1 interfaceName:(NSString *)arg2 authorization:(NSData *)arg3 reply:(void (^)(NSError *))arg4;
- (void)cancelPendingRequestWithToken:(long long)arg1 reply:(void (^)(NSError *))arg2;
@end

