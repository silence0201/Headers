//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreBluetooth/NSCopying-Protocol.h>

@class CBCentralManager, NSArray, NSMutableArray, NSMutableDictionary, NSNumber, NSString, NSUUID;
@protocol CBPeripheralDelegate;

@interface CBPeripheral : NSObject <NSCopying>
{
    id <CBPeripheralDelegate> _delegate;
    struct __CFUUID *_UUID;
    NSUUID *_identifier;
    NSString *_name;
    NSNumber *_RSSI;
    long long _state;
    NSMutableArray *_services;
    CBCentralManager *_centralManager;
    unsigned long long mtuLength;
    NSMutableDictionary *_attributes;
    BOOL _isPaired;
    BOOL _isConnectedToSystem;
}

@property unsigned long long mtuLength; // @synthesize mtuLength;
@property(readonly, nonatomic) BOOL isConnectedToSystem; // @synthesize isConnectedToSystem=_isConnectedToSystem;
@property(readonly, nonatomic) BOOL isPaired; // @synthesize isPaired=_isPaired;
@property(retain) NSArray *services; // @synthesize services=_services;
@property long long state; // @synthesize state=_state;
@property(retain) NSNumber *RSSI; // @synthesize RSSI=_RSSI;
@property(retain) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSUUID *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) const struct __CFUUID *UUID; // @synthesize UUID=_UUID;
@property(nonatomic) id <CBPeripheralDelegate> delegate; // @synthesize delegate=_delegate;
- (void)handleDescriptorValueWritten:(id)arg1;
- (void)handleDescriptorValueUpdated:(id)arg1;
- (void)handleCharacteristicDescriptorsDiscovered:(id)arg1;
- (void)handleCharacteristicValueNotifying:(id)arg1;
- (void)handleCharacteristicValueWritten:(id)arg1;
- (void)handleCharacteristicValueUpdated:(id)arg1;
- (void)handleServiceCharacteristicsDiscovered:(id)arg1;
- (void)handleServiceIncludedServicesDiscovered:(id)arg1;
- (void)handleDescriptorEvent:(id)arg1 descriptorSelector:(SEL)arg2 delegateSelector:(SEL)arg3;
- (void)handleCharacteristicEvent:(id)arg1 characteristicSelector:(SEL)arg2 delegateSelector:(SEL)arg3;
- (void)handleServiceEvent:(id)arg1 serviceSelector:(SEL)arg2 delegateSelector:(SEL)arg3;
- (void)handleAttributeEvent:(id)arg1 args:(id)arg2 attributeSelector:(SEL)arg3 delegateSelector:(SEL)arg4;
- (void)handleUnpaired:(id)arg1;
- (void)handlePairingCompleted:(id)arg1;
- (void)handlePairingRequested:(id)arg1;
- (void)handleServicesDiscovered:(id)arg1;
- (void)handleWritesExecuted:(id)arg1;
- (void)handleRSSIUpdated:(id)arg1;
- (void)handleServicesChanged:(id)arg1;
- (void)handleNameUpdated:(id)arg1;
- (BOOL)hasTag:(id)arg1;
- (void)untag:(id)arg1;
- (void)tag:(id)arg1;
- (void)unpair;
- (void)acceptPairing:(BOOL)arg1 ofType:(id)arg2 withPasskey:(id)arg3;
- (void)pair;
- (void)writeValue:(id)arg1 forDescriptor:(id)arg2;
- (void)readValueForDescriptor:(id)arg1;
- (void)discoverDescriptorsForCharacteristic:(id)arg1;
- (void)setNotifyValue:(BOOL)arg1 forCharacteristic:(id)arg2;
- (void)setBroadcastValue:(BOOL)arg1 forCharacteristic:(id)arg2;
- (void)reliablyWriteValues:(id)arg1 forCharacteristics:(id)arg2;
- (void)writeValue:(id)arg1 forCharacteristic:(id)arg2 type:(long long)arg3;
- (void)readValueForCharacteristic:(id)arg1;
- (void)discoverCharacteristics:(id)arg1 forService:(id)arg2;
- (void)discoverIncludedServices:(id)arg1 forService:(id)arg2;
- (void)discoverServices:(id)arg1;
- (void)readRSSI;
@property(readonly) BOOL isConnected; // @dynamic isConnected;
- (void)setOrphan;
- (void)handleConnectionStateUpdated:(BOOL)arg1;
- (void)handleDisconnection;
- (void)handleConnection:(BOOL)arg1;
- (void)invalidateAllAttributes;
- (void)removeAttributeForHandle:(id)arg1;
- (void)setAttribute:(id)arg1 forHandle:(id)arg2;
- (id)attributeForHandle:(id)arg1;
- (void)handleMsg:(int)arg1 args:(id)arg2;
- (id)sendSyncMsg:(int)arg1 args:(id)arg2;
- (void)sendMsg:(int)arg1 requiresConnected:(BOOL)arg2 args:(id)arg3;
- (void)sendMsg:(int)arg1 args:(id)arg2;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (oneway void)release;
- (id)initWithCentralManager:(id)arg1 dictionary:(id)arg2;

@end

