//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AppKit/NSView.h>

#import <MapKit/MKAnnotationRepresentation-Protocol.h>
#import <MapKit/MKLocatableObject-Protocol.h>

@class GEORouteMatch, MKAnnotationManager, MKCalloutView, MKUserLocationAnnotationViewProxy, NSColor, NSImage, NSString, VKAnchorWrapper, _MKAnnotationViewAnchor;
@protocol MKAnnotation;

@interface MKAnnotationView : NSView <MKAnnotationRepresentation, MKLocatableObject>
{
    BOOL _customTransformApplied;
    BOOL _internalTransformApplied;
    BOOL _animatingToCoordinate;
    BOOL _tracking;
    struct CLLocationCoordinate2D _presentationCoordinate;
    double _presentationCourse;
    CDUnknownBlockType _presentationCoordinateChangedCallback;
    struct CLLocationCoordinate2D _coordinate;
    MKUserLocationAnnotationViewProxy *_userLocationProxy;
    double _rotationRadians;
    _MKAnnotationViewAnchor *_anchor;
    GEORouteMatch *_routeMatch;
    double _mapRotationRadians;
    BOOL _explicitlyHidden;
    BOOL _hiddenForOffscreen;
    BOOL _hiddenForInvalidPoint;
    double _mapPitchRadians;
    CDStruct_51745937 _mapDisplayStyle;
    MKAnnotationManager *_annotationManager;
    id <MKAnnotation> _annotation;
    MKCalloutView *_calloutView;
    NSView *_leftCalloutAccessoryView;
    NSView *_rightCalloutAccessoryView;
    NSView *_detailCalloutAccessoryView;
    NSString *_reuseIdentifier;
    NSImage *_image;
    unsigned long long _mapType;
    unsigned long long _zIndex;
    struct CGPoint _centerOffset;
    struct CGPoint _calloutOffset;
    struct CGPoint _leftCalloutOffset;
    struct CGPoint _rightCalloutOffset;
    unsigned long long _dragState;
    CDUnknownBlockType _calloutHitTest;
    BOOL _pendingSelectionAnimated;
    struct {
        unsigned int disabled:1;
        unsigned int selected:1;
        unsigned int canShowCallout:1;
        unsigned int isHighlighted:1;
        unsigned int canDisplayDisclosureInCallout:1;
        unsigned int canDisplayPlacemarkInCallout:1;
        unsigned int draggable:1;
        unsigned int useBalloonCallouts:1;
    } _flags;
    double _direction;
    NSColor *_leftCalloutAccessoryViewBackgroundColor;
}

+ (BOOL)_followsTerrain;
+ (unsigned long long)_selectedZIndex;
+ (unsigned long long)_zIndex;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)currentLocationTitle;
@property(nonatomic, getter=_isPendingSelectionAnimated, setter=_setPendingSelectionAnimated:) BOOL pendingSelectionAnimated; // @synthesize pendingSelectionAnimated=_pendingSelectionAnimated;
@property(nonatomic, getter=_isHiddenForInvalidPoint, setter=_setHiddenForInvalidPoint:) BOOL hiddenForInvalidPoint; // @synthesize hiddenForInvalidPoint=_hiddenForInvalidPoint;
@property(nonatomic, getter=_mapDisplayStyle, setter=_setMapDisplayStyle:) CDStruct_51745937 mapDisplayStyle; // @synthesize mapDisplayStyle=_mapDisplayStyle;
@property(nonatomic, getter=_mapPitchRadians, setter=_setMapPitchRadians:) double mapPitchRadians; // @synthesize mapPitchRadians=_mapPitchRadians;
@property(nonatomic, getter=_mapRotationRadians, setter=_setMapRotationRadians:) double mapRotationRadians; // @synthesize mapRotationRadians=_mapRotationRadians;
@property(retain, nonatomic, setter=_setRouteMatch:) GEORouteMatch *_routeMatch; // @synthesize _routeMatch;
@property(retain, nonatomic) NSColor *leftCalloutAccessoryViewBackgroundColor; // @synthesize leftCalloutAccessoryViewBackgroundColor=_leftCalloutAccessoryViewBackgroundColor;
@property(retain, nonatomic) NSView *detailCalloutAccessoryView; // @synthesize detailCalloutAccessoryView=_detailCalloutAccessoryView;
@property(retain, nonatomic) NSView *rightCalloutAccessoryView; // @synthesize rightCalloutAccessoryView=_rightCalloutAccessoryView;
@property(retain, nonatomic) NSView *leftCalloutAccessoryView; // @synthesize leftCalloutAccessoryView=_leftCalloutAccessoryView;
@property(nonatomic) struct CGPoint rightCalloutOffset; // @synthesize rightCalloutOffset=_rightCalloutOffset;
@property(nonatomic) struct CGPoint leftCalloutOffset; // @synthesize leftCalloutOffset=_leftCalloutOffset;
@property(copy, nonatomic) CDUnknownBlockType _calloutHitTest; // @synthesize _calloutHitTest;
@property(nonatomic, getter=_isTracking, setter=_setTracking:) BOOL _tracking; // @synthesize _tracking;
@property(nonatomic, getter=_isAnimatingToCoordinate, setter=_setAnimatingToCoordinate:) BOOL _animatingToCoordinate; // @synthesize _animatingToCoordinate;
@property(nonatomic, setter=_setPresentationCourse:) double _presentationCourse; // @synthesize _presentationCourse;
@property(copy, nonatomic, setter=_setPresentationCoordinateChangedCallback:) CDUnknownBlockType _presentationCoordinateChangedCallback; // @synthesize _presentationCoordinateChangedCallback;
@property(nonatomic, setter=_setAnnotationManager:) __weak MKAnnotationManager *_annotationManager; // @synthesize _annotationManager;
@property(nonatomic, setter=_setDirection:) double _direction; // @synthesize _direction;
- (void).cxx_destruct;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (BOOL)accessibilityIsIgnored;
@property struct CGPoint center;
@property(readonly, nonatomic, getter=_balloonContentView) NSView *balloonContentView;
@property(readonly, nonatomic, getter=_balloonImage) NSImage *balloonImage;
@property(readonly, nonatomic, getter=_balloonInnerStrokeColor) NSColor *balloonInnerStrokeColor;
@property(readonly, nonatomic, getter=_balloonStrokeColor) NSColor *balloonStrokeColor;
@property(readonly, nonatomic, getter=_balloonTintColor) NSColor *balloonTintColor;
- (void)_didHideBalloonCalloutView:(id)arg1;
- (void)_addBalloonCalloutView:(id)arg1;
- (BOOL)_balloonCalloutShouldOriginateFromSmallSize:(double *)arg1;
@property(readonly, nonatomic, getter=_balloonCalloutStyle) long long balloonCalloutStyle;
@property(nonatomic, getter=_useBalloonCallouts, setter=_setUseBalloonCallouts:) BOOL useBalloonCallouts;
- (void)_didUpdatePosition;
- (void)_updateFromMap;
- (double)_pointsForDistance:(double)arg1;
- (id)_vkMarker;
- (id)_containerView;
- (BOOL)_canChangeOrientation;
- (unsigned long long)_orientationCount;
- (BOOL)_hasAlternateOrientation;
- (void)_transitionFrom:(long long)arg1 to:(long long)arg2 duration:(double)arg3;
- (void)_setRotationRadians:(double)arg1 withAnimation:(id)arg2;
- (void)_enableRotationForHeadingMode:(double)arg1;
- (id)_annotationContainer;
- (void)setHidden:(BOOL)arg1;
- (void)_setHiddenForOffscreen:(BOOL)arg1;
- (void)_resetZIndexNotify:(BOOL)arg1;
- (void)_resetZIndex;
- (void)_setZIndex:(unsigned long long)arg1;
- (void)_setZIndex:(unsigned long long)arg1 notify:(BOOL)arg2;
- (unsigned long long)_zIndex;
- (void)_setMapType:(unsigned long long)arg1;
- (unsigned long long)_mapType;
- (BOOL)isPersistent;
- (void)_setCanDisplayPlacemarkInCallout:(BOOL)arg1;
- (BOOL)_canDisplayPlacemarkInCallout;
- (void)_setCanDisplayDisclosureInCallout:(BOOL)arg1;
- (BOOL)_canDisplayDisclosureInCallout;
- (void)setDragState:(unsigned long long)arg1 animated:(BOOL)arg2;
@property(nonatomic) unsigned long long dragState;
@property(nonatomic, getter=isDraggable) BOOL draggable;
@property(nonatomic, getter=isHighlighted) BOOL highlighted;
@property(nonatomic, getter=isEnabled) BOOL enabled;
@property(readonly, nonatomic) struct CGRect _significantFrame;
@property(readonly, nonatomic, getter=_significantBounds) struct CGRect significantBounds;
- (struct CGRect)_mapkit_visibleRect;
@property(readonly, nonatomic) MKUserLocationAnnotationViewProxy *_userLocationProxy;
@property(readonly, nonatomic) VKAnchorWrapper *anchor;
- (void)_invalidateCachedCoordinate;
@property(nonatomic, setter=_setPresentationCoordinate:) struct CLLocationCoordinate2D _presentationCoordinate; // @synthesize _presentationCoordinate;
@property(readonly, nonatomic) struct CLLocationCoordinate2D coordinate;
@property(nonatomic) struct CGPoint calloutOffset;
@property(nonatomic) struct CGPoint centerOffset;
- (struct CGPoint)_draggingDropOffset;
@property(nonatomic) BOOL canShowCallout;
- (void)setSelected:(BOOL)arg1 animated:(BOOL)arg2;
@property(nonatomic, getter=isSelected) BOOL selected;
@property(retain, nonatomic) NSImage *image;
- (id)_contentLayer;
- (id)menuForEvent:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)_setCalloutView:(id)arg1;
- (id)_calloutView;
@property(retain, nonatomic) id <MKAnnotation> annotation;
- (void)prepareForReuse;
@property(readonly, nonatomic) NSString *reuseIdentifier;
- (void)dealloc;
- (id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)isFlipped;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

