//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <SceneKit/SCNResourceManager-Protocol.h>

@class MTKTextureLoader, NSMutableArray, NSString, SCNMTLBufferAllocator, SCNMTLShadableKey, SCNMetalLibraryManager;
@protocol MTLCommandQueue, MTLDevice, MTLTexture, OS_dispatch_semaphore;

__attribute__((visibility("hidden")))
@interface SCNMetalResourceManager : NSObject <SCNResourceManager>
{
    id <MTLDevice> _device;
    struct __C3DEngineStats *__engineStats;
    SCNMetalLibraryManager *_libraryManager;
    SCNMTLBufferAllocator *_commonProfileBuffersAllocator;
    CDStruct_cf799f7f _availableIrradianceTextures;
    CDStruct_cf799f7f _availableRadianceTextures;
    CDStruct_cf799f7f _availableImages;
    CDStruct_cf799f7f _availableImageProxy;
    CDStruct_cf799f7f _availableSamplers;
    CDStruct_cf799f7f _availableBuffers;
    CDStruct_cf799f7f _availableMeshes;
    CDStruct_cf799f7f _availableMeshSources;
    CDStruct_cf799f7f _availableMeshElements;
    CDStruct_cf799f7f _availableRasterizerStates;
    CDStruct_cf799f7f _availableMorphs;
    CDStruct_cf799f7f _availableComputePipelines;
    CDStruct_cf799f7f _availableShadables;
    SCNMTLShadableKey *_availableShadablesSearchKey;
    NSMutableArray *_availableShaderManagers;
    NSObject<OS_dispatch_semaphore> *_shaderManagerLock;
    id <MTLTexture> _specularDFGTexture;
    id <MTLTexture> _defaultTexture;
    id <MTLTexture> _defaultTexture3D;
    id <MTLTexture> _defaultCubeTexture;
    id <MTLCommandQueue> _resourceQueue;
    MTKTextureLoader *_mtkTextureLoader;
}

+ (void)unregisterManagerForDevice:(id)arg1;
+ (id)resourceManagerForDevice:(id)arg1;
@property(readonly, nonatomic) id <MTLDevice> device; // @synthesize device=_device;
@property(retain, nonatomic) SCNMetalLibraryManager *libraryManager; // @synthesize libraryManager=_libraryManager;
- (struct __C3DEngineStats *)stats;
- (void)flush;
- (id)unstageTexture:(id)arg1;
- (id)latlongTextureForCubemap:(id)arg1 pixelFormat:(unsigned long long)arg2 needsMipmap:(BOOL)arg3;
- (id)cubemapTextureForLatlongTexture:(id)arg1 pixelFormat:(unsigned long long)arg2 needsMipmap:(BOOL)arg3;
- (void)dispatchForCubemap:(id)arg1 computeEncoder:(id)arg2 pipelineState:(id)arg3;
- (void)dispatchForTexture:(id)arg1 computeEncoder:(id)arg2 pipelineState:(id)arg3;
- (id)newRenderPipelineStateWithPixelFormat:(unsigned long long)arg1 vertexFunctionName:(id)arg2 fragmentFunctionName:(id)arg3 library:(id)arg4 vertexConstantValues:(id)arg5 fragmentConstantValues:(id)arg6;
- (id)newRenderPipelineStateWithPixelFormat:(unsigned long long)arg1 vertexFunctionName:(id)arg2 fragmentFunctionName:(id)arg3 library:(id)arg4;
- (id)defaultTexture3D;
- (id)defaultCubeTexture;
- (id)defaultTexture;
- (id)renderResourceForImage:(struct __C3DImage *)arg1 sampler:(struct __C3DTextureSampler *)arg2 options:(int)arg3;
- (id)convertTextureToCubeMapIfApplicable:(id)arg1 needsMipmap:(BOOL)arg2;
- (id)renderResourceForImageProxy:(struct __C3DImageProxy *)arg1 sampler:(struct __C3DTextureSampler *)arg2 engineContext:(struct __C3DEngineContext *)arg3;
- (id)renderResourcesForEffectSlot:(struct __C3DEffectSlot *)arg1 withEngineContext:(struct __C3DEngineContext *)arg2;
- (id)renderResourceForSampler:(struct __C3DTextureSampler *)arg1;
- (id)_fillTexture:(id)arg1 withImage:(struct __C3DImage *)arg2 needsMipMap:(BOOL)arg3 textureOptions:(int)arg4;
- (void)_enqueueMipmapGenerationForTexture:(id)arg1;
- (id)_newTextureWithDescriptor:(id)arg1;
- (id)renderResourceForMaterial:(struct __C3DMaterial *)arg1 geometry:(struct __C3DGeometry *)arg2 renderPipeline:(id)arg3 engineContext:(struct __C3DEngineContext *)arg4;
- (id)newConstantBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2;
- (id)computePipelineStateForKernel:(id)arg1;
- (id)renderResourceForMorph:(struct __C3DMorph *)arg1 baseMesh:(struct __C3DMesh *)arg2;
- (id)renderResourceForMesh:(struct __C3DMesh *)arg1;
- (void)__updateMutableMesh:(struct __C3DMesh *)arg1 withMetalMesh:(id)arg2;
-     // Error parsing type: @24@0:8^{__C3DMeshElement={__C3DEntity={__CFRuntimeBase=Q[4C]I}^v^{__CFString}^{__CFString}^{__CFDictionary}qq}II^{__C3DMeshElement}CCC{?=c^{__CFData}I}{?=c^{__CFData}I}^v^{__C3DMeshSource}[2]}16, name: renderResourceForMeshElement:
- (id)renderResourceForMeshSource:(struct __C3DMeshSource *)arg1;
- (id)_bufferForData:(struct __CFData *)arg1 bytesPerIndex:(unsigned long long)arg2;
- (id)renderResourceForRasterizerState:(struct __C3DRasterizerStates *)arg1;
- (void)removeAllShaders;
- (id)shaderManagerForPassDescriptor:(id)arg1;
- (void)_geometryWillDie:(id)arg1;
- (void)_materialWillDie:(id)arg1;
- (void)_passWillDie:(id)arg1;
- (void)_programWillDie:(id)arg1;
- (void)_imageProxyWillDie:(id)arg1;
- (void)_imageWillDie:(id)arg1;
- (void)_morphWillDie:(id)arg1;
- (void)_meshWillDie:(id)arg1;
- (void)_meshElementWillDie:(id)arg1;
- (void)_meshSourceWillDie:(id)arg1;
- (void)dealloc;
- (id)initWithDevice:(id)arg1;
- (id)textureForSamplingTexture:(id)arg1 atSize:(unsigned long long)arg2 mipmapLevelCount:(unsigned long long *)arg3;
- (id)specularDFGTexture;
- (id)radianceTextureForEnvironmentTexture:(id)arg1;
- (void)_bakeSphericalHamonicsBasedIrradianceTexture:(id)arg1 forEnvironmentTexture:(id)arg2;
- (void)_bakeStochasticIrradianceTexture:(id)arg1 forEnvironmentTexture:(id)arg2 mipmapLevelForSampling:(unsigned long long)arg3 useTextureView:(BOOL)arg4;
- (id)irradianceTextureForEnvironmentTexture:(id)arg1;
- (id)sphericalHarmonicsForEnvironmentTexture:(id)arg1 order:(unsigned long long)arg2 commandBuffer:(id)arg3;
- (id)shFromCPU:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

