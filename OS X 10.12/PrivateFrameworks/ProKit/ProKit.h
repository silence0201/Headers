//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface ProKit : NSObject
{
}

+ (BOOL)isWindowLiveResizeTestEnabled;
+ (BOOL)isLiveScrollingTestEnabled;
+ (BOOL)isSharedCacheSizeTestEnabled;
+ (BOOL)isUILatencyTestEnabled;
+ (BOOL)isLaunchTimeTestEnabled;
+ (BOOL)isLiveSeamDraggingTestEnabled;
+ (BOOL)isZoomScrollerLiveZoomingTestEnabled;
+ (BOOL)isContrastLiveChangeTestEnabled;
+ (id)versionCreditsString;
+ (void)_installSystemPanels;
+ (void)installForCustomLook:(id)arg1;
+ (void)_setCustomLookDelegate:(id)arg1;
+ (id)_customLookDelegate;
+ (void)install;
+ (void)initialize;
+ (BOOL)_isInIBCocoaSimulator;
+ (void)installProMethodSwizzles;
+ (void)_determineCompatibilityMode;
+ (id)defaultsDomainName;
+ (void)setBool:(BOOL)arg1 forDefaultsKey:(id)arg2;
+ (void)setValue:(id)arg1 forDefaultsKey:(id)arg2;
+ (long long)integerForDefaultsKey:(id)arg1;
+ (id)stringForDefaultsKey:(id)arg1;
+ (BOOL)boolForDefaultsKey:(id)arg1;
+ (BOOL)defaultExistsForKey:(id)arg1;
+ (void)setAllowsScaling:(BOOL)arg1;
+ (BOOL)allowsScaling;
+ (BOOL)forceHelvetica;
+ (void)setForceHelvetica:(BOOL)arg1;
+ (void)setShouldDisableProSystemPanels:(BOOL)arg1;
+ (BOOL)shouldDisableProSystemPanels;
+ (BOOL)useClassicContextualMenuFont;
+ (void)setUseClassicContextualMenuFont:(BOOL)arg1;
+ (BOOL)isProKitFrameworkCompatible5x;
+ (void)forceProKitFrameworkCompatibilityVersion:(int)arg1;
+ (long long)proKitFrameworkCompatibleMode;
+ (long long)defaultFontAppearance;
+ (long long)_defaultFontAppearanceForCurrentLook;
+ (BOOL)lookSupportsClassicLarge;
+ (long long)lookCongruencyForObject:(id)arg1;
+ (struct _themelook *)currentSystemThemeLook;
+ (void)changeToLook:(struct _themelook *)arg1;
+ (void)_invalidateVisibleWindows;
+ (BOOL)_isCurrentLook:(struct _themelook *)arg1;
+ (void)_setCurrentSystemThemeLook:(struct _themelook *)arg1;
+ (void)_updateMenuBarDrawingStyleForLook:(struct _themelook *)arg1;
+ (BOOL)_hasDarkMenuBarForLook:(struct _themelook *)arg1;
+ (void)_setThemeLookDelegate:(id)arg1;
+ (id)_themeLookDelegate;
+ (long long)maximumLookGradation;
+ (long long)currentLookGradation;
+ (void)changeToLookGradation:(long long)arg1;
+ (void)_changeToLookGradation:(long long)arg1 forceRedraw:(BOOL)arg2;

@end

