//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <CloudPhotoLibrary/CPLPlatformObject.h>

#import <CloudPhotoLibrary/CPLEngineStoreImplementation-Protocol.h>

@class CPLPrequeliteVariable, NSDate, NSMutableSet, NSObject, NSString, NSURL, PQLConnection;
@protocol OS_dispatch_queue;

@interface CPLPrequeliteStore : CPLPlatformObject <CPLEngineStoreImplementation>
{
    NSObject<OS_dispatch_queue> *_queue;
    PQLConnection *_db;
    NSURL *_dbURL;
    BOOL _configuringDB;
    NSMutableSet *_modifiedVariables;
    CPLPrequeliteVariable *_libraryVersionVar;
    CPLPrequeliteVariable *_userIdentifierVar;
    CPLPrequeliteVariable *_libraryZoneNameVar;
    CPLPrequeliteVariable *_supportedFeatureVersionInLastSyncVar;
    CPLPrequeliteVariable *_lastQuarantineCountReportDateVar;
    CPLPrequeliteVariable *_clientCacheIdentifierVar;
    CPLPrequeliteVariable *_clientCacheIdentifierAsKnownByClient;
    CPLPrequeliteVariable *_libraryCreationDateVar;
    NSObject<OS_dispatch_queue> *_isClientInSyncWithClientCacheQueue;
    BOOL _isClientInSyncWithClientCache;
    unsigned long long _resetOption;
    NSString *_resetReason;
    BOOL _needsToReset;
    BOOL _reentrencyGuard;
    int _upgradeEventJournal;
    NSDate *_libraryCreationDate;
}

@property(readonly) NSDate *libraryCreationDate; // @synthesize libraryCreationDate=_libraryCreationDate;
- (void).cxx_destruct;
- (void)table:(id)arg1 enumerateCountGroupedByProperty:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)table:(id)arg1 enumerateCountGroupedByUnsignedIntegerProperty:(id)arg2 block:(CDUnknownBlockType)arg3;
- (unsigned long long)table:(id)arg1 countOfRecordsMatchingQuery:(id)arg2;
- (BOOL)table:(id)arg1 hasRecordsMatchingQuery:(id)arg2;
- (void)recordUpgradeEvent:(id)arg1 arguments:(struct __va_list_tag [1])arg2;
- (void)recordUpgradeEvent:(id)arg1;
- (id)status;
- (void)writeTransactionDidFail;
- (void)writeTransactionDidSucceed;
- (BOOL)isClientInSyncWithClientCache;
- (BOOL)storeClientIsNotInSyncWithClientCacheWithError:(id *)arg1;
- (BOOL)storeClientIsInSyncWithClientCacheWithError:(id *)arg1;
- (id)createNewClientCacheIdentifier;
- (BOOL)storeClientCacheIdentifier:(id)arg1 error:(id *)arg2;
- (id)clientCacheIdentifier;
- (BOOL)storeLastQuarantineCountReportDate:(id)arg1 error:(id *)arg2;
- (id)lastQuarantineCountReportDate;
- (BOOL)storeSupportedFeatureVersionInLastSync:(unsigned long long)arg1 error:(id *)arg2;
- (unsigned long long)supportedFeatureVersionInLastSync;
- (BOOL)storeLibraryZoneName:(id)arg1 error:(id *)arg2;
- (id)libraryZoneName;
- (BOOL)storeUserIdentifier:(id)arg1 error:(id *)arg2;
- (id)userIdentifier;
- (id)valueForGlobalVariable:(id)arg1;
- (BOOL)setValue:(id)arg1 forGlobalVariable:(id)arg2 error:(id *)arg3;
- (BOOL)addGlobalVariable:(id)arg1 defaultValue:(id)arg2 error:(id *)arg3;
- (void)_cacheValue:(id)arg1 forVariable:(id)arg2;
- (id)pqlConnection;
- (id)createNewLibraryVersion;
- (BOOL)storeLibraryVersion:(id)arg1 withError:(id *)arg2;
- (id)libraryVersion;
- (void)performBarrierTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (BOOL)closeWithError:(id *)arg1;
- (void)performWriteTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)performReadTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (BOOL)executePostOpenWithError:(id *)arg1;
- (BOOL)openWithError:(id *)arg1;
- (BOOL)_openWithError:(id *)arg1;
- (BOOL)_setupPragmas;
@property(readonly, nonatomic) id corruptionInfo;
- (BOOL)_setupDBIfNeeded;
- (BOOL)_upgradeDB:(long long)arg1;
- (BOOL)_postUpgradeToVersion:(long long)arg1;
- (BOOL)_upgradeToVersion:(long long)arg1;
- (BOOL)_initializeDB;
- (void)triggerResetAfterUpgrade:(unsigned long long)arg1 withReason:(id)arg2;
- (id)initWithAbstractObject:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

