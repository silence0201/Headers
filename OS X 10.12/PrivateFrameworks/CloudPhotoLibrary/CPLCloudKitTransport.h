//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <CloudPhotoLibrary/CPLPlatformObject.h>

#import <CloudPhotoLibrary/APSConnectionDelegate-Protocol.h>
#import <CloudPhotoLibrary/CPLEngineTransportImplementation-Protocol.h>

@class APSConnection, CDSession, CKContainer, CKDatabase, CKRecord, CKRecordZone, CPLCloudKitOperationCounter, CPLEngineLibrary, CPLLibraryInfo, NSDate, NSMapTable, NSMutableDictionary, NSMutableSet, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface CPLCloudKitTransport : CPLPlatformObject <APSConnectionDelegate, CPLEngineTransportImplementation>
{
    NSObject<OS_dispatch_queue> *_workQueue;
    APSConnection *_pushConnection;
    NSObject<OS_dispatch_queue> *_pushQueue;
    NSObject<OS_dispatch_queue> *_pendingOperationQueue;
    NSMapTable *_startDateForPendingOperations;
    NSMapTable *_batchStartForPendingOperations;
    NSMapTable *_progressPerOperations;
    NSMutableSet *_cancelledOperations;
    CPLCloudKitOperationCounter *_operationCounter;
    BOOL _registeredPushSubscription;
    double _lastPushRegistrationTime;
    NSMutableDictionary *_duetTicketProvidersPerClientID;
    CDSession *_coreDuetSession;
    CKContainer *_container;
    BOOL _stoppedWaitingForPush;
    CPLLibraryInfo *_cachedLibraryInfo;
    NSDate *_lastLibraryInfoCheckDate;
    unsigned long long _ongoingDownloadOperations;
    CKDatabase *_database;
    CKRecord *_userRecord;
    CKRecordZone *_primaryZone;
    NSDate *_significantWorkBeginDate;
}

+ (unsigned long long)ResourceTypeForCloudKitKey:(id)arg1 outSuffix:(id *)arg2;
+ (BOOL)HasCloudKitKeyForResourceType:(unsigned long long)arg1;
+ (id)CloudKitKeyForResourceType:(unsigned long long)arg1 suffix:(id)arg2;
+ (void)_AddMappingsForResourceTypes;
+ (void)_AddMappingsForResourceType:(unsigned long long)arg1 prefix:(id)arg2;
+ (id)_bestErrorForUnderlyingError:(id)arg1;
+ (BOOL)_isCKErrorForRejectedRecord:(id)arg1;
+ (id)_errorsByTaskForTasksByRecordId:(id)arg1 fromUnderlyingError:(id)arg2;
+ (id)_betterErrorForRecordId:(id)arg1 recordError:(id)arg2;
@property(retain, nonatomic) NSDate *significantWorkBeginDate; // @synthesize significantWorkBeginDate=_significantWorkBeginDate;
@property(retain, nonatomic) CKRecordZone *primaryZone; // @synthesize primaryZone=_primaryZone;
@property(retain, nonatomic) CKRecord *userRecord; // @synthesize userRecord=_userRecord;
@property(retain, nonatomic) CKDatabase *database; // @synthesize database=_database;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
- (void).cxx_destruct;
- (BOOL)hasOngoingDownloadOperations;
- (void)getStatusDictionaryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)getStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)_budgetDescriptionForDuetTicketProvider:(id)arg1;
- (id)componentName;
- (void)_didCancelCKOperation:(id)arg1;
- (void)_didFinishCKOperation:(id)arg1;
- (void)_CKOperation:(id)arg1 didProgress:(double)arg2;
- (void)_markBatchForCKOperation:(id)arg1;
- (void)_didStartCKOperation:(id)arg1;
- (void)_cancelAllCKOperationsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_emitLogForCurrentOperations;
- (BOOL)_operationUsesBackgroundSession:(id)arg1;
- (id)_pendingOperationsStatus;
- (void)connection:(id)arg1 didReceiveToken:(id)arg2 forTopic:(id)arg3 identifier:(id)arg4;
- (void)connection:(id)arg1 didReceiveIncomingMessage:(id)arg2;
- (void)connection:(id)arg1 didReceivePublicToken:(id)arg2;
- (void)stopWaitingForPushNotificationsAndDeactivate:(BOOL)arg1;
- (void)startWaitingForPushNotifications;
- (id)_dictionaryFromCPLPlaceAnnotation:(id)arg1;
- (id)_CPLPlaceAnnotationFromDictionary:(id)arg1;
- (id)_CloudKitContainerFromFromCPLAlbumChange:(id)arg1;
- (id)_CloudKitContainerRelationChangeFromCPLContainerRelationChange:(id)arg1;
- (id)_CloudKitMemoryChangeFromCPLMemoryChange:(id)arg1;
- (id)_CloudKitPersonChangeFromCPLPersonChange:(id)arg1;
- (id)_CloudKitBaseChangeForRecordType:(id)arg1 fromCPLRecordChange:(id)arg2;
- (id)_CloudKitAssetFromCPLAssetChange:(id)arg1 clearMissingResources:(BOOL)arg2 outError:(id *)arg3;
- (id)_CloudKitMasterFromCPLMasterChange:(id)arg1 clearMissingResources:(BOOL)arg2 outError:(id *)arg3;
- (id)newCKRecordFromCPLRecordChange:(id)arg1 withRecordType:(id)arg2 recordID:(id)arg3;
- (id)_addResourcesFromCPLResources:(id)arg1 clearMissing:(BOOL)arg2 clearResourceIfNecessary:(BOOL)arg3 toCloudKitRecord:(id)arg4;
- (void)_clearResourceWithType:(unsigned long long)arg1 inCloudKitRecord:(id)arg2;
- (void)_addResourceValuesForResourceType:(unsigned long long)arg1 imageWidth:(id)arg2 imageHeight:(id)arg3 fileSize:(id)arg4 fileUTI:(id)arg5 fingerPrint:(id)arg6 resourceFileURL:(id)arg7 setResource:(BOOL)arg8 toCloudKitRecord:(id)arg9;
- (id)_imagePrefixForresourceType:(unsigned long long)arg1;
- (void)_updateRemapInfoInCPLRecordChange:(id)arg1 withCloudKitRecord:(id)arg2;
- (void)_setZoneStateEnabled:(BOOL)arg1 withDisabledTime:(id)arg2 deleteTime:(id)arg3;
- (void)_updateLocalZoneStateFromCloudKitZoneState:(id)arg1;
- (id)_CPLContainerRelationChangeFromCloudKitContainerRelation:(id)arg1 withChangeType:(unsigned long long)arg2;
- (id)_CPLMemoryChangeFromCloudKitMemory:(id)arg1 withChangeType:(unsigned long long)arg2;
- (id)_CPLPersonChangeFromCloudKitPerson:(id)arg1 withChangeType:(unsigned long long)arg2;
- (id)_CPLAlbumChangeFromCloudKitAlbum:(id)arg1 withChangeType:(unsigned long long)arg2;
- (id)_CPLAssetChangeFromCloudKitAsset:(id)arg1 withChangeType:(unsigned long long)arg2;
- (id)_CPLLocationFromCLLocation:(id)arg1;
- (id)_CLLocationFromCPLLocationDict:(id)arg1;
- (id)_validatedObjectForKey:(id)arg1 fromDict:(id)arg2 validateClass:(Class)arg3;
- (id)_CPLMasterChangeFromCloudKitMaster:(id)arg1 withChangeType:(unsigned long long)arg2;
- (void)_updateBaseCloudKitRecord:(id)arg1 fromCPLRecordChange:(id)arg2;
- (void)_updateBaseCPLRecordChange:(id)arg1 fromCloudKitRecord:(id)arg2;
- (void)_addResourcesFromCloudKitRecord:(id)arg1 toFinalResources:(id)arg2 withIdentifier:(id)arg3 isCoherent:(char *)arg4;
- (id)preferredFileExtensionForType:(id)arg1;
- (void)_updatePropertyInResourceIdentity:(id)arg1 forSuffix:(id)arg2 withValue:(id)arg3 incoherentErrorDescription:(id *)arg4;
- (void)_updateFingerPrint:(id)arg1 inResourceIdentity:(id)arg2 incoherentErrorDescription:(id *)arg3;
- (void)runResourceDownloadTasks:(id)arg1;
- (void)downloadResourceForTask:(id)arg1;
- (BOOL)canBatchResourceDownloadTasks:(id)arg1:(id)arg2;
- (void)_updateDownloadOperation:(id)arg1 withCellularAccessForResource:(id)arg2 isForeground:(BOOL)arg3 isHighPriority:(BOOL)arg4;
- (id)_createChangeBatchFromUpdates:(id)arg1 deletions:(id)arg2;
- (id)_CPLRecordChangeFromCKRecord:(id)arg1;
- (void)_downloadNextChangeBatchForSyncAnchor:(id)arg1 foreground:(BOOL)arg2 cancelState:(id)arg3 progressHandler:(CDUnknownBlockType)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_queryNextBatchForCursor:(id)arg1 forClass:(Class)arg2 foreground:(BOOL)arg3 cancelState:(id)arg4 progressHandler:(CDUnknownBlockType)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (id)_duetTicketForOperation:(id)arg1 clientBundleID:(id)arg2 foreground:(BOOL)arg3;
- (void)downloadNextChangeBatchForSyncAnchor:(id)arg1 foreground:(BOOL)arg2 cancelState:(id)arg3 progressHandler:(CDUnknownBlockType)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)queryNextBatchForCursor:(id)arg1 forClass:(Class)arg2 foreground:(BOOL)arg3 cancelState:(id)arg4 progressHandler:(CDUnknownBlockType)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)getLibraryInfo:(BOOL)arg1 updateState:(BOOL)arg2 cancelState:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_fetchRecords:(id)arg1 foreground:(BOOL)arg2 cancelState:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_updateLibraryInfoFromCKRecord:(id)arg1;
- (void)sendFeedbackMessages:(id)arg1 cancelState:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)inMemoryDownloadResource:(id)arg1 foreground:(BOOL)arg2 cancelState:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)rampingRequestForResourceType:(unsigned long long)arg1 numRequested:(unsigned long long)arg2 foreground:(BOOL)arg3 cancelState:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)publishResource:(id)arg1 foreground:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)uploadChangeBatch:(id)arg1 forSyncAnchor:(id)arg2 foreground:(BOOL)arg3 cancelState:(id)arg4 progressHandler:(CDUnknownBlockType)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)checkRecordsExistence:(id)arg1 fetchPropertiesRecords:(id)arg2 foreground:(BOOL)arg3 cancelState:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_resetPushSubscriptionState;
- (void)setupPushWithCancelState:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchPrimaryZoneCreateIfNecessary:(BOOL)arg1 proposedZoneName:(id)arg2 cancelState:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (long long)_qualityOfServiceForForegroundState:(BOOL)arg1 isUpload:(BOOL)arg2 isMetadata:(BOOL)arg3;
- (long long)_zoneIndexFromZoneName:(id)arg1;
- (void)setupCloudWithCancelState:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)CPLErrorForCloudKitError:(id)arg1 withRequestUUIDs:(id)arg2 description:(id)arg3 arguments:(struct __va_list_tag [1])arg4;
- (id)CPLErrorForCloudKitError:(id)arg1 withRequestUUIDs:(id)arg2 description:(id)arg3;
- (BOOL)_isLoggableError:(id)arg1;
- (void)processCPLErrorIfNeeded:(id)arg1;
- (void)noteClientIsEndingSignificantWork;
- (void)noteClientIsBeginningSignificantWork;
- (void)setIsSignificantWorkPending:(BOOL)arg1;
- (void)noteClientIsInBackground;
- (void)noteClientIsInForeground;
- (id)simpleDataForSyncAnchor:(id)arg1;
- (id)bestErrorForUnderlyingError:(id)arg1;
- (id)sendFeedbackTaskForMessages:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)inMemoryDownloadTaskForResource:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)rampingRequestTaskForResourceType:(unsigned long long)arg1 numRequested:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)resourcePublishTaskForResource:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)resourceDownloadTaskForResource:(id)arg1 clientBundleID:(id)arg2 didStartHandler:(CDUnknownBlockType)arg3 progressHandler:(CDUnknownBlockType)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)downloadBatchTaskForSyncAnchor:(id)arg1 progressHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)queryTaskForCursor:(id)arg1 class:(Class)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)getLibraryInfoAndUpdateState:(BOOL)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)uploadBatchTaskForBatch:(id)arg1 progressHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)checkRecordsExistenceTaskForRecords:(id)arg1 fetchRecordProperties:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (id)setupTaskCreateLibraryIfNecessary:(BOOL)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) BOOL supportsBatchDownloadPipelining;
- (void)closeAndDeactivate:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)openWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, retain, nonatomic) CPLEngineLibrary *engineLibrary;
- (id)initWithAbstractObject:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

