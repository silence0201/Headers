//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <ABLE/ABLEEvents-Protocol.h>

@class ABLEBONPostAdjust, ABLECoreDuetController, ABLEModelController, CDAdmissionControlLogWriter, NSArray, NSDate, NSDictionary, NSNumber, NSString, NSUserDefaults;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface ABLEController : NSObject <ABLEEvents>
{
    NSObject<OS_dispatch_queue> *DuetABLEQueue;
    NSObject<OS_dispatch_source> *DuetABLETimer;
    unsigned long long sequenceNumber;
    BOOL _suspended;
    BOOL _enabled;
    BOOL _timerSuspended;
    BOOL _adjustForAbsoluteBatteryLevel;
    BOOL _adjustForShortDrain;
    BOOL _admissionLoggingEnabled;
    float _timerFrequencyPerHour;
    int _settingsNotifyToken;
    int _coreDuetSettingsNotifyToken;
    NSUserDefaults *_ableUserDefaults;
    NSUserDefaults *_coreDuetUserDefaults;
    ABLECoreDuetController *_coreDuetController;
    ABLEModelController *_chargingModelController;
    ABLEModelController *_defaultModelController;
    NSDictionary *_modelControllers;
    NSArray *_validModelControllers;
    ABLEBONPostAdjust *_postAdjust;
    ABLEBONPostAdjust *_postAdjustDrainDirect;
    ABLEBONPostAdjust *_postAdjustChargeDirect;
    double _shortDrainMultiplier;
    double _shortDrainThreshold;
    long long _maxBONWithoutCharge;
    NSString *_selectedModel;
    NSNumber *_lastBON;
    NSNumber *_lastRawBON;
    NSDate *_lastBONDate;
    NSNumber *_lastBatteryLevel;
    NSNumber *_lastChargingState;
    CDUnknownBlockType _configurationChangedHandler;
    NSDictionary *_appSettings;
    id _dataSourceOverride;
    CDAdmissionControlLogWriter *_cdAdmissionLog;
    double _timeToRecalculateModel;
    double _timeToResetAndRecalculateModel;
    double _timeToCalculateBON;
}

+ (void)resetConfiguration;
+ (id)appDefaults;
+ (id)staticAppDefaults;
@property double timeToCalculateBON; // @synthesize timeToCalculateBON=_timeToCalculateBON;
@property double timeToResetAndRecalculateModel; // @synthesize timeToResetAndRecalculateModel=_timeToResetAndRecalculateModel;
@property double timeToRecalculateModel; // @synthesize timeToRecalculateModel=_timeToRecalculateModel;
@property BOOL admissionLoggingEnabled; // @synthesize admissionLoggingEnabled=_admissionLoggingEnabled;
@property(retain) CDAdmissionControlLogWriter *cdAdmissionLog; // @synthesize cdAdmissionLog=_cdAdmissionLog;
@property(retain) id dataSourceOverride; // @synthesize dataSourceOverride=_dataSourceOverride;
@property(retain) NSDictionary *appSettings; // @synthesize appSettings=_appSettings;
@property(copy, nonatomic) CDUnknownBlockType configurationChangedHandler; // @synthesize configurationChangedHandler=_configurationChangedHandler;
@property int coreDuetSettingsNotifyToken; // @synthesize coreDuetSettingsNotifyToken=_coreDuetSettingsNotifyToken;
@property int settingsNotifyToken; // @synthesize settingsNotifyToken=_settingsNotifyToken;
@property(retain) NSNumber *lastChargingState; // @synthesize lastChargingState=_lastChargingState;
@property(retain) NSNumber *lastBatteryLevel; // @synthesize lastBatteryLevel=_lastBatteryLevel;
@property(retain) NSDate *lastBONDate; // @synthesize lastBONDate=_lastBONDate;
@property(retain) NSNumber *lastRawBON; // @synthesize lastRawBON=_lastRawBON;
@property(retain) NSNumber *lastBON; // @synthesize lastBON=_lastBON;
@property float timerFrequencyPerHour; // @synthesize timerFrequencyPerHour=_timerFrequencyPerHour;
@property(retain) NSString *selectedModel; // @synthesize selectedModel=_selectedModel;
@property long long maxBONWithoutCharge; // @synthesize maxBONWithoutCharge=_maxBONWithoutCharge;
@property double shortDrainThreshold; // @synthesize shortDrainThreshold=_shortDrainThreshold;
@property double shortDrainMultiplier; // @synthesize shortDrainMultiplier=_shortDrainMultiplier;
@property BOOL adjustForShortDrain; // @synthesize adjustForShortDrain=_adjustForShortDrain;
@property BOOL adjustForAbsoluteBatteryLevel; // @synthesize adjustForAbsoluteBatteryLevel=_adjustForAbsoluteBatteryLevel;
@property(retain) ABLEBONPostAdjust *postAdjustChargeDirect; // @synthesize postAdjustChargeDirect=_postAdjustChargeDirect;
@property(retain) ABLEBONPostAdjust *postAdjustDrainDirect; // @synthesize postAdjustDrainDirect=_postAdjustDrainDirect;
@property(retain) ABLEBONPostAdjust *postAdjust; // @synthesize postAdjust=_postAdjust;
@property BOOL timerSuspended; // @synthesize timerSuspended=_timerSuspended;
@property(retain) NSArray *validModelControllers; // @synthesize validModelControllers=_validModelControllers;
@property(retain) NSDictionary *modelControllers; // @synthesize modelControllers=_modelControllers;
@property(retain) ABLEModelController *defaultModelController; // @synthesize defaultModelController=_defaultModelController;
@property(retain) ABLEModelController *chargingModelController; // @synthesize chargingModelController=_chargingModelController;
@property(retain) ABLECoreDuetController *coreDuetController; // @synthesize coreDuetController=_coreDuetController;
@property(retain) NSUserDefaults *coreDuetUserDefaults; // @synthesize coreDuetUserDefaults=_coreDuetUserDefaults;
@property(retain) NSUserDefaults *ableUserDefaults; // @synthesize ableUserDefaults=_ableUserDefaults;
@property BOOL enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (id)reportStateWithRequestInner;
- (id)reportStateWithRequest:(id)arg1;
- (void)significantEventAtDate:(id)arg1;
- (void)updateModelsForDate:(id)arg1;
- (void)resetModel;
- (void)calculateBONForCurrentLevel:(float)arg1 andChargeState:(BOOL)arg2 atDate:(id)arg3 onQueue:(id)arg4 usingHandler:(CDUnknownBlockType)arg5;
- (BOOL)getChargeModeOverride;
- (id)getModelMode;
@property BOOL suspended;
- (void)updateTimerAndScheduleImmediately:(BOOL)arg1;
- (void)updateConfiguration;
- (void)updateConfigurationFromCoreDuet;
- (void)typeCheckAndFixConfiguration:(id)arg1;
- (float)gradientShort;
- (float)gradientLong;
- (id)initWithCDSession:(id)arg1 device:(id)arg2 changeHandler:(CDUnknownBlockType)arg3;
- (id)initWithCoreDuetController:(id)arg1 changeHandler:(CDUnknownBlockType)arg2;

@end

