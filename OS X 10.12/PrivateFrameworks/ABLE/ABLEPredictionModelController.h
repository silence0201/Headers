//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <ABLE/ABLEModelController.h>

@class ABLEBONPrediction, ABLECoreDuetController, ABLEPredictabilityController, ABLEPredictionController, NSArray, NSDate;

@interface ABLEPredictionModelController : ABLEModelController
{
    BOOL valid;
    BOOL expires;
    BOOL enabled;
    BOOL _softLanding;
    NSDate *expiryDate;
    double lifetime;
    NSArray *dayOffsets;
    double predictabilityOffset;
    unsigned long long _currentBON;
    ABLECoreDuetController *_coreDuetController;
    ABLEPredictabilityController *_predictabilityController;
    ABLEPredictionController *_predictionController;
    double _minimumValidCorrelation;
    NSArray *_predictionVector;
    NSArray *_adjustedPredictionVector;
    NSArray *_predictionPriorDayVector;
    NSArray *_adjustedPredictionPriorDayVector;
    NSArray *_todayActualVector;
    NSDate *_priorDay;
    double _samplePeriod;
    NSArray *_priorDayActualVector;
    NSDate *_predictionDate;
    double _rsquaredForPriorDay;
    ABLEBONPrediction *_bonMap;
    double _minimumRSquared;
    double _softLandingDecayRate;
    double _softLandingMinimum;
    double _softLandingMaximum;
}

+ (id)predictionVectorWithSession:(id)arg1 date:(id)arg2 config:(id)arg3;
+ (id)defaultConfiguration;
@property double softLandingMaximum; // @synthesize softLandingMaximum=_softLandingMaximum;
@property double softLandingMinimum; // @synthesize softLandingMinimum=_softLandingMinimum;
@property double softLandingDecayRate; // @synthesize softLandingDecayRate=_softLandingDecayRate;
@property BOOL softLanding; // @synthesize softLanding=_softLanding;
@property double minimumRSquared; // @synthesize minimumRSquared=_minimumRSquared;
@property(readonly) ABLEBONPrediction *bonMap; // @synthesize bonMap=_bonMap;
@property double rsquaredForPriorDay; // @synthesize rsquaredForPriorDay=_rsquaredForPriorDay;
@property(retain) NSDate *predictionDate; // @synthesize predictionDate=_predictionDate;
@property(retain) NSArray *priorDayActualVector; // @synthesize priorDayActualVector=_priorDayActualVector;
@property double samplePeriod; // @synthesize samplePeriod=_samplePeriod;
@property(retain) NSDate *priorDay; // @synthesize priorDay=_priorDay;
@property(retain) NSArray *todayActualVector; // @synthesize todayActualVector=_todayActualVector;
@property(retain) NSArray *adjustedPredictionPriorDayVector; // @synthesize adjustedPredictionPriorDayVector=_adjustedPredictionPriorDayVector;
@property(retain) NSArray *predictionPriorDayVector; // @synthesize predictionPriorDayVector=_predictionPriorDayVector;
@property(retain) NSArray *adjustedPredictionVector; // @synthesize adjustedPredictionVector=_adjustedPredictionVector;
@property(retain) NSArray *predictionVector; // @synthesize predictionVector=_predictionVector;
@property double minimumValidCorrelation; // @synthesize minimumValidCorrelation=_minimumValidCorrelation;
@property(retain) ABLEPredictionController *predictionController; // @synthesize predictionController=_predictionController;
@property(retain) ABLEPredictabilityController *predictabilityController; // @synthesize predictabilityController=_predictabilityController;
@property(readonly) ABLECoreDuetController *coreDuetController; // @synthesize coreDuetController=_coreDuetController;
@property(readonly) unsigned long long currentBON; // @synthesize currentBON=_currentBON;
@property BOOL enabled; // @synthesize enabled;
@property double predictabilityOffset; // @synthesize predictabilityOffset;
@property(retain) NSArray *dayOffsets; // @synthesize dayOffsets;
@property(readonly) double lifetime; // @synthesize lifetime;
- (BOOL)expires;
- (id)expiryDate;
- (void)setValid:(BOOL)arg1;
- (BOOL)valid;
- (void).cxx_destruct;
- (id)currentState;
- (BOOL)existsDataForPredictionUsingDefaultOffsetsAndDay:(id)arg1;
- (BOOL)existsDataForPredictionUsingDay:(id)arg1 andOffsetDays:(id)arg2;
- (void)calculateBONForCurrentLevel:(float)arg1 andChargeState:(BOOL)arg2 atDate:(id)arg3 onQueue:(id)arg4 usingHandler:(CDUnknownBlockType)arg5;
- (double)getPredictionFromExistingPredictionForDate:(id)arg1;
- (void)significantEventAtDate:(id)arg1;
- (void)createPredictionForDateRaw:(id)arg1;
- (void)updateConfiguration:(id)arg1;
- (void)resetModel;
- (id)initWithCoreDuetController:(id)arg1;

@end

