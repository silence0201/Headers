//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class ABLEBSMPluginMonitor, ABLEBSMRoutineMonitor, ABLECoreData, CDSession, NSArray, NSDate, NSDictionary, NSLocale, NSMutableArray, NSUserDefaults;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface ABLEBSMPredictor : NSObject
{
    int autoNotifyToken;
    BOOL autoNotifyEnabled;
    ABLECoreData *ableCoreData;
    NSObject<OS_dispatch_queue> *cdQueue;
    NSObject<OS_dispatch_queue> *syncQueue;
    NSObject<OS_dispatch_queue> *timerQueue;
    NSObject<OS_dispatch_source> *timer;
    NSObject<OS_dispatch_source> *statTimer;
    NSDate *lastRun;
    NSDate *previousRun;
    BOOL haveBatteryAndPluginData;
    CDSession *cdSession;
    BOOL ekEnabled;
    ABLEBSMRoutineMonitor *routineMonitor;
    int bsmToken;
    BOOL bsmEnabled;
    NSDate *lastBSMDisableDate;
    int lockstateToken;
    ABLEBSMPluginMonitor *pluginMonitor;
    BOOL bsmThrown;
    BOOL bsmDisplayed;
    NSDate *lastDeniedDate;
    long long consecutiveDenies;
    NSDictionary *predictionConfig;
    NSArray *ablePrediction;
    NSDate *ablePredictionDate;
    NSDate *lastThrown;
    NSDate *firstDetect;
    NSDate *ableNextChargeDate;
    NSDate *projNextChargeDate;
    NSDate *ableZeroDate;
    NSDate *projZeroDate;
    double ableDrain;
    double ableZero;
    double projDrain;
    double projZero;
    NSDate *predNextChargeDate;
    NSDate *predNextZeroDate;
    BOOL isTraveling;
    NSDate *lastInfoNoteShown;
    NSLocale *currLocale;
    NSUserDefaults *defaults;
    BOOL isInternal;
    NSDate *lastReportedDate;
    NSMutableArray *ableChargePredictions;
    NSMutableArray *histChargePredictions;
    NSMutableArray *predictedZeroDates;
    NSMutableArray *projectedZeroDates;
}

+ (BOOL)isSupported;
+ (id)sharedInstanceWithSession:(id)arg1;
- (void).cxx_destruct;
- (void)recordPredictedKeyEventsOnDate:(id)arg1 charge:(double)arg2;
- (void)recordPrediction:(id)arg1 predDate:(id)arg2;
- (void)handleUserResponse:(unsigned long long)arg1;
- (void)displayNotificationRaw:(BOOL)arg1;
- (void)registerForUnlockNotification:(BOOL)arg1;
- (void)start;
- (void)triggerNotificationIfNecessary;
- (BOOL)shouldDisplayBSMNotificationWithDate:(id)arg1 charge:(double)arg2 chargeDate:(id)arg3 zeroDate:(id)arg4;
- (BOOL)shouldConsiderBSMWithCharge:(double)arg1;
- (id)predictedZeroDateAfterDate:(id)arg1 charge:(double)arg2 prediction:(id)arg3 atTime:(id)arg4 nextCharge:(id)arg5;
- (id)zeroDateFromDrainAfterDate:(id)arg1 charge:(double)arg2;
- (id)zeroDateFromABLEPredictionAfterDate:(id)arg1 charge:(double)arg2 prediction:(id)arg3 atTime:(id)arg4 nextCharge:(id)arg5;
- (double)drainRateMultiplierWithLevel:(double)arg1 predictedLevel:(double)arg2;
- (id)predictedChargeDateAfterDate:(id)arg1 withPrediction:(id)arg2 atTime:(id)arg3 withCharge:(double)arg4;
- (double)leewayAdjustmentForDate:(id)arg1;
- (double)leewayAdjustmentForTravel;
- (double)leewayAdjustmentForEventsAt:(id)arg1;
- (void)reportStatsRaw;
- (void)incrementFalsePositivesForPredictions:(id)arg1 withTruth:(id)arg2 withKey:(id)arg3;
- (void)recordPredictionsforABLECharge:(id)arg1 forHistCharge:(id)arg2 forPredZero:(id)arg3 forProjZero:(id)arg4;
- (void)updateConfiguration;
- (void)initializeValues;
- (id)loadPredictionsForKey:(id)arg1;
- (id)initializeArrayWithKey:(id)arg1;
- (void)updatePredictionArray:(id)arg1 forKey:(id)arg2;
- (void)updateArray:(id)arg1 forKey:(id)arg2;
- (void)resetBSMValuesIfApplicable;
- (BOOL)bsmEnabledAfterDate:(id)arg1;
- (BOOL)updateLastReportedDate:(id)arg1;
- (BOOL)updateLastDeniedDate:(id)arg1;
- (BOOL)updateConsecutiveDenies:(long long)arg1;
- (BOOL)updateNotificationDisplayed:(BOOL)arg1;
- (BOOL)updateNextZeroDate:(id)arg1;
- (BOOL)updateNextChargeDate:(id)arg1;
- (BOOL)updateABLEPrediction:(id)arg1;
- (BOOL)updateABLEPredictionDate:(id)arg1;
- (BOOL)updateFirstDetect:(id)arg1;
- (BOOL)updateLastThrown:(id)arg1;
- (BOOL)updateLastRun:(id)arg1;
- (void)saveDate:(id)arg1 forKey:(id)arg2;
- (BOOL)isInternalBuild;
- (void)handleAutoNotifySettingChanged;
- (id)predictionFromString:(id)arg1;
- (id)predictionToString:(id)arg1;
- (void)dealloc;
- (id)initWithSession:(id)arg1;

@end

