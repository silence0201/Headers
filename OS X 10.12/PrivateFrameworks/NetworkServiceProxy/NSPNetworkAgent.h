//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NetworkServiceProxy/NWNetworkAgent-Protocol.h>

@class NEConfiguration, NSData, NSString, NSUUID;
@protocol NSPNetworkAgentDelegate;

@interface NSPNetworkAgent : NSObject <NWNetworkAgent>
{
    BOOL active;
    BOOL kernelActivated;
    BOOL userActivated;
    BOOL voluntary;
    NSUUID *agentUUID;
    NSString *agentDescription;
    NEConfiguration *_configuration;
    id <NSPNetworkAgentDelegate> _delegate;
    NSData *_agentData;
    NSData *_internalKeybag;
}

+ (id)agentFromData:(id)arg1;
+ (id)agentType;
+ (id)agentDomain;
@property(retain) NSData *internalKeybag; // @synthesize internalKeybag=_internalKeybag;
@property(retain) NSData *agentData; // @synthesize agentData=_agentData;
@property __weak id <NSPNetworkAgentDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) NEConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic, getter=isVoluntary) BOOL voluntary; // @synthesize voluntary;
@property(nonatomic, getter=isUserActivated) BOOL userActivated; // @synthesize userActivated;
@property(nonatomic, getter=isKernelActivated) BOOL kernelActivated; // @synthesize kernelActivated;
@property(nonatomic, getter=isActive) BOOL active; // @synthesize active;
@property(copy, nonatomic) NSString *agentDescription; // @synthesize agentDescription;
@property(copy, nonatomic) NSUUID *agentUUID; // @synthesize agentUUID;
- (void).cxx_destruct;
- (void)unassertAgentWithOptions:(id)arg1;
- (BOOL)assertAgentWithOptions:(id)arg1;
@property(retain) NSData *keybag;
- (id)copyConfiguration;
- (id)copyAgentData;
- (id)init;

// Remaining properties
@property(nonatomic, getter=isNetworkProvider) BOOL networkProvider;
@property(nonatomic, getter=isNexusProvider) BOOL nexusProvider;
@property(nonatomic, getter=isSpecificUseOnly) BOOL specificUseOnly;

@end

