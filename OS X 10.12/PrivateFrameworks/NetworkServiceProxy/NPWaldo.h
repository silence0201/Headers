//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NetworkServiceProxy/NSSecureCoding-Protocol.h>

@class NPLocation, NPTuscanyEdge, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSString, NSURL;
@protocol NPWaldoDelegate, OS_dispatch_source;

@interface NPWaldo : NSObject <NSSecureCoding>
{
    NSDictionary *_currentNetworkCharacteristics;
    BOOL _enableLatencyDerivationFromWaldo;
    BOOL _enableLatencyDerivation;
    BOOL _shouldSave;
    BOOL _dayPassExtendedValidationFromWaldo;
    BOOL _dayPassExtendedValidation;
    BOOL _useGeohashFromServer;
    BOOL _daypassRefreshInProgress;
    BOOL _reprocessPending;
    BOOL _reprocessCancelled;
    BOOL _reprocessAfterCancelled;
    unsigned int _timestamp;
    unsigned int _lastFailureReason;
    unsigned int _generation;
    long long _currentEdgeIndex;
    NSDictionary *_nextProbeDates;
    double _probeFrequency;
    id <NPWaldoDelegate> _delegate;
    double _latencyFactorA;
    double _latencyFactorB;
    double _latencyFactorX;
    NPLocation *_cachedLocation;
    NSDate *_locationCheckTimestamp;
    NSDate *_locationExpiration;
    NSArray *_edges;
    double _edgeFairnessFactor;
    long long _locationCheckInterval;
    long long _locationTTL;
    long long _locationToleranceDistance;
    long long _viewSize;
    long long _probePause;
    long long _signatureLimit;
    long long _fallbackTimeout;
    long long _connectionTimeout;
    long long _connectionIdleTimeout;
    NSString *_dayPassHostname;
    NSString *_tag;
    NSURL *_telemetryURL;
    NSString *_telemetryService;
    double _telemetryRatio;
    NSDate *_resurrectionDate;
    NSMutableDictionary *_signatureEdgeLists;
    NSMutableDictionary *_signatureReprocessRateLimits;
    NSMutableDictionary *_networkInformation;
    NSArray *_currentEdges;
    long long _retryPause;
    long long _reprocessSamplingInterval;
    long long _reprocessSampleSize;
    long long _observedRTTSampleSize;
    NSData *_dayPass;
    NPTuscanyEdge *_nextEdge;
    unsigned long long _version;
    NSArray *_daypassSoftExpiry;
    NSObject<OS_dispatch_source> *_reprocessSamplingTimer;
    long long _reprocessSampleCount;
    unsigned long long _diskVersion;
}

+ (id)removeFromKeychain;
+ (BOOL)supportsSecureCoding;
@property(readonly) unsigned long long diskVersion; // @synthesize diskVersion=_diskVersion;
@property long long reprocessSampleCount; // @synthesize reprocessSampleCount=_reprocessSampleCount;
@property(retain) NSObject<OS_dispatch_source> *reprocessSamplingTimer; // @synthesize reprocessSamplingTimer=_reprocessSamplingTimer;
@property unsigned int generation; // @synthesize generation=_generation;
@property BOOL reprocessAfterCancelled; // @synthesize reprocessAfterCancelled=_reprocessAfterCancelled;
@property BOOL reprocessCancelled; // @synthesize reprocessCancelled=_reprocessCancelled;
@property BOOL reprocessPending; // @synthesize reprocessPending=_reprocessPending;
@property(readonly) NSArray *daypassSoftExpiry; // @synthesize daypassSoftExpiry=_daypassSoftExpiry;
@property(readonly) unsigned long long version; // @synthesize version=_version;
@property(readonly) NPTuscanyEdge *nextEdge; // @synthesize nextEdge=_nextEdge;
@property(retain) NSData *dayPass; // @synthesize dayPass=_dayPass;
@property(readonly) long long observedRTTSampleSize; // @synthesize observedRTTSampleSize=_observedRTTSampleSize;
@property(readonly) long long reprocessSampleSize; // @synthesize reprocessSampleSize=_reprocessSampleSize;
@property(readonly) long long reprocessSamplingInterval; // @synthesize reprocessSamplingInterval=_reprocessSamplingInterval;
@property(readonly) long long retryPause; // @synthesize retryPause=_retryPause;
@property(readonly) NSArray *currentEdges; // @synthesize currentEdges=_currentEdges;
@property BOOL daypassRefreshInProgress; // @synthesize daypassRefreshInProgress=_daypassRefreshInProgress;
@property(retain) NSMutableDictionary *networkInformation; // @synthesize networkInformation=_networkInformation;
@property(retain) NSMutableDictionary *signatureReprocessRateLimits; // @synthesize signatureReprocessRateLimits=_signatureReprocessRateLimits;
@property(retain) NSMutableDictionary *signatureEdgeLists; // @synthesize signatureEdgeLists=_signatureEdgeLists;
@property(readonly) BOOL useGeohashFromServer; // @synthesize useGeohashFromServer=_useGeohashFromServer;
@property(readonly) NSDate *resurrectionDate; // @synthesize resurrectionDate=_resurrectionDate;
@property double telemetryRatio; // @synthesize telemetryRatio=_telemetryRatio;
@property(retain) NSString *telemetryService; // @synthesize telemetryService=_telemetryService;
@property(retain) NSURL *telemetryURL; // @synthesize telemetryURL=_telemetryURL;
@property(readonly) NSString *tag; // @synthesize tag=_tag;
@property(retain) NSString *dayPassHostname; // @synthesize dayPassHostname=_dayPassHostname;
@property BOOL dayPassExtendedValidation; // @synthesize dayPassExtendedValidation=_dayPassExtendedValidation;
@property BOOL dayPassExtendedValidationFromWaldo; // @synthesize dayPassExtendedValidationFromWaldo=_dayPassExtendedValidationFromWaldo;
@property long long connectionIdleTimeout; // @synthesize connectionIdleTimeout=_connectionIdleTimeout;
@property long long connectionTimeout; // @synthesize connectionTimeout=_connectionTimeout;
@property long long fallbackTimeout; // @synthesize fallbackTimeout=_fallbackTimeout;
@property long long signatureLimit; // @synthesize signatureLimit=_signatureLimit;
@property long long probePause; // @synthesize probePause=_probePause;
@property long long viewSize; // @synthesize viewSize=_viewSize;
@property long long locationToleranceDistance; // @synthesize locationToleranceDistance=_locationToleranceDistance;
@property long long locationTTL; // @synthesize locationTTL=_locationTTL;
@property long long locationCheckInterval; // @synthesize locationCheckInterval=_locationCheckInterval;
@property double edgeFairnessFactor; // @synthesize edgeFairnessFactor=_edgeFairnessFactor;
@property(retain) NSArray *edges; // @synthesize edges=_edges;
@property(retain) NSDate *locationExpiration; // @synthesize locationExpiration=_locationExpiration;
@property(retain) NSDate *locationCheckTimestamp; // @synthesize locationCheckTimestamp=_locationCheckTimestamp;
@property(retain) NPLocation *cachedLocation; // @synthesize cachedLocation=_cachedLocation;
@property unsigned int lastFailureReason; // @synthesize lastFailureReason=_lastFailureReason;
@property BOOL shouldSave; // @synthesize shouldSave=_shouldSave;
@property(readonly) unsigned int timestamp; // @synthesize timestamp=_timestamp;
@property double latencyFactorX; // @synthesize latencyFactorX=_latencyFactorX;
@property double latencyFactorB; // @synthesize latencyFactorB=_latencyFactorB;
@property double latencyFactorA; // @synthesize latencyFactorA=_latencyFactorA;
@property BOOL enableLatencyDerivation; // @synthesize enableLatencyDerivation=_enableLatencyDerivation;
@property BOOL enableLatencyDerivationFromWaldo; // @synthesize enableLatencyDerivationFromWaldo=_enableLatencyDerivationFromWaldo;
@property __weak id <NPWaldoDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) double probeFrequency; // @synthesize probeFrequency=_probeFrequency;
@property(retain) NSDictionary *nextProbeDates; // @synthesize nextProbeDates=_nextProbeDates;
@property long long currentEdgeIndex; // @synthesize currentEdgeIndex=_currentEdgeIndex;
- (void).cxx_destruct;
- (id)copyStateIncludeDistance:(BOOL)arg1;
- (id)edgeContainingOnRamp:(id)arg1;
@property(readonly) NSDate *currentNetworkLastUsed;
@property(readonly) NSDate *expirationDate;
- (id)copyLatencyInfoDictionary:(BOOL)arg1;
- (void)logLatencyInfoToStdout:(BOOL)arg1;
- (void)refreshDayPassesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)getDayPassRTT;
@property(readonly) BOOL hasEdges;
@property(readonly) unsigned long long edgeCount;
- (id)edgeAtIndex:(long long)arg1;
- (void)setEdgeListForCurrentNetworkSignature:(id)arg1;
@property(readonly) NSArray *currentEdgeList;
@property(readonly) unsigned long long probeSize;
- (BOOL)shouldReprocess;
- (BOOL)shouldFetchWaldo;
- (void)loadObservedRTTSamples:(id)arg1;
- (BOOL)validateEdgeList:(id)arg1;
- (id)getLatencyFromList:(id)arg1 edgeIndex:(unsigned long long)arg2;
- (id)copyEdgeListRTTAverage:(id)arg1 observed:(BOOL)arg2 shortDescription:(BOOL)arg3;
- (id)copyEdgeList:(id)arg1;
- (void)logEdgeList:(id)arg1 debug:(BOOL)arg2 toStdout:(BOOL)arg3;
- (void)startProbingEdges:(id)arg1 atIndex:(unsigned long long)arg2 withResults:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (BOOL)reprocessWithNewRTT:(unsigned long long)arg1 reProbe:(char *)arg2;
- (void)reprocessSamplingWithCompletionHandler:(CDUnknownBlockType)arg1 fromScratch:(BOOL)arg2;
- (void)reprocessWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancelProbes;
- (void)setCurrentNetworkCharacteristics:(id)arg1;
- (void)timestampNetworkSignature:(id)arg1;
- (void)retainValidDayPassesFromWaldoInfo:(id)arg1;
- (BOOL)shouldPerformDayPassRefresh;
@property(readonly) NPTuscanyEdge *currentEdge;
@property(readonly) long long dayPassFetchCount;
- (long long)indexOfBestEdge;
- (void)handleKeyUsageUpdate:(id)arg1 appData:(id)arg2;
- (BOOL)rebuildLatencyMaps:(id)arg1;
- (id)rebuildLatencyMap:(id)arg1 latencyMap:(id)arg2;
- (void)clearAllLatencyMaps;
- (void)ageOutLatencyMap;
- (BOOL)pushCurrentDayPassesToKernelUpdateGeneration:(BOOL)arg1;
- (void)saveToKeychain;
- (id)initFromKeychain;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithJSONData:(id)arg1 timestamp:(unsigned int)arg2 softExpiryOverride:(id)arg3;
- (void)setConstraint:(id)arg1;

@end

