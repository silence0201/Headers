//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <MetalTools/MTLToolsRenderCommandEncoder.h>

@class MTLDepthStencilDescriptor, MTLRenderPassDescriptor;
@protocol MTLDepthStencilState, MTLDevice, MTLRenderPipelineState;

@interface MTLDebugRenderCommandEncoder : MTLToolsRenderCommandEncoder
{
    unsigned int _dirtyBits;
    CDStruct_dbea1aba *_vertexBuiltinArguments;
    unsigned long long _vertexBuiltinArgumentCount;
    unsigned long long _vertexBuiltinArgumentCapacity;
    unsigned long long _vertexBufferStride[31];
    CDStruct_dbea1aba _attachmentInfo[10];
    CDStruct_3f59ab6b _vertexBuffers[31];
    CDStruct_3f59ab6b _vertexTextures[128];
    CDStruct_3f59ab6b _vertexSamplers[16];
    CDStruct_3f59ab6b _fragmentBuffers[31];
    CDStruct_3f59ab6b _fragmentTextures[128];
    CDStruct_3f59ab6b _fragmentSamplers[16];
    CDStruct_f0b825e2 _limits;
    unsigned int _encoderState;
    unsigned int _unknownStoreActions;
    struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> *_visibilityOffsets;
    struct ResourceTrackingDeferredAttachments _deferredAttachments;
    float _lineWidth;
    float _depthBias;
    float _depthBiasSlopeScale;
    float _depthBiasClamp;
    unsigned int _frontStencilRef;
    unsigned int _backStencilRef;
    float _blendColorRed;
    float _blendColorGreen;
    float _blendColorBlue;
    float _blendColorAlpha;
    float _tessellationFactorScale;
    id <MTLDevice> _cachedDevice;
    MTLRenderPassDescriptor *_descriptor;
    unsigned long long _frontFacingWinding;
    unsigned long long _cullMode;
    unsigned long long _depthClipMode;
    unsigned long long _triangleFillMode;
    id <MTLRenderPipelineState> _renderPipelineState;
    id <MTLDepthStencilState> _depthStencilState;
    MTLDepthStencilDescriptor *_defaultDepthStencilDescriptor;
    unsigned long long _visibilityResultMode;
    unsigned long long _visibilityResultOffset;
    unsigned long long _width;
    unsigned long long _height;
    unsigned long long _tessellationFactorBufferInstanceStride;
    CDStruct_5f3a0cd7 _scissorRect;
    CDStruct_4b2885c7 _viewport;
    CDStruct_3f59ab6b _tessellationFactorBufferArgument;
}

@property(readonly, nonatomic) float tessellationFactorScale; // @synthesize tessellationFactorScale=_tessellationFactorScale;
@property(readonly, nonatomic) unsigned long long tessellationFactorBufferInstanceStride; // @synthesize tessellationFactorBufferInstanceStride=_tessellationFactorBufferInstanceStride;
@property(readonly, nonatomic) CDStruct_3f59ab6b tessellationFactorBufferArgument; // @synthesize tessellationFactorBufferArgument=_tessellationFactorBufferArgument;
@property(readonly) unsigned long long height; // @synthesize height=_height;
@property(readonly) unsigned long long width; // @synthesize width=_width;
@property(readonly, nonatomic) float blendColorAlpha; // @synthesize blendColorAlpha=_blendColorAlpha;
@property(readonly, nonatomic) float blendColorBlue; // @synthesize blendColorBlue=_blendColorBlue;
@property(readonly, nonatomic) float blendColorGreen; // @synthesize blendColorGreen=_blendColorGreen;
@property(readonly, nonatomic) float blendColorRed; // @synthesize blendColorRed=_blendColorRed;
@property(readonly, nonatomic) unsigned long long visibilityResultOffset; // @synthesize visibilityResultOffset=_visibilityResultOffset;
@property(readonly, nonatomic) unsigned long long visibilityResultMode; // @synthesize visibilityResultMode=_visibilityResultMode;
@property(readonly, nonatomic) unsigned int backStencilRef; // @synthesize backStencilRef=_backStencilRef;
@property(readonly, nonatomic) unsigned int frontStencilRef; // @synthesize frontStencilRef=_frontStencilRef;
@property(readonly, nonatomic) MTLDepthStencilDescriptor *defaultDepthStencilDescriptor; // @synthesize defaultDepthStencilDescriptor=_defaultDepthStencilDescriptor;
@property(readonly, nonatomic) id <MTLDepthStencilState> depthStencilState; // @synthesize depthStencilState=_depthStencilState;
@property(readonly, nonatomic) id <MTLRenderPipelineState> renderPipelineState; // @synthesize renderPipelineState=_renderPipelineState;
@property(readonly, nonatomic) unsigned long long triangleFillMode; // @synthesize triangleFillMode=_triangleFillMode;
@property(readonly, nonatomic) CDStruct_5f3a0cd7 scissorRect; // @synthesize scissorRect=_scissorRect;
@property(readonly, nonatomic) float depthBiasClamp; // @synthesize depthBiasClamp=_depthBiasClamp;
@property(readonly, nonatomic) float depthBiasSlopeScale; // @synthesize depthBiasSlopeScale=_depthBiasSlopeScale;
@property(readonly, nonatomic) float depthBias; // @synthesize depthBias=_depthBias;
@property(readonly, nonatomic) float lineWidth; // @synthesize lineWidth=_lineWidth;
@property(readonly, nonatomic) unsigned long long depthClipMode; // @synthesize depthClipMode=_depthClipMode;
@property(readonly, nonatomic) unsigned long long cullMode; // @synthesize cullMode=_cullMode;
@property(readonly, nonatomic) unsigned long long frontFacingWinding; // @synthesize frontFacingWinding=_frontFacingWinding;
@property(readonly, nonatomic) CDStruct_4b2885c7 viewport; // @synthesize viewport=_viewport;
@property(readonly, copy, nonatomic) MTLRenderPassDescriptor *descriptor; // @synthesize descriptor=_descriptor;
@property(readonly, nonatomic) id <MTLDevice> cachedDevice; // @synthesize cachedDevice=_cachedDevice;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_resourceTrackingRecordBoundResourceAccesses;
- (void)_resourceTrackingRecordRenderTargetAccessesForEndEncoding:(BOOL)arg1;
- (void)_resourceTrackingRecordDrawAccesses;
- (void)drawIndexedPatches:(unsigned long long)arg1 patchIndexBuffer:(id)arg2 patchIndexBufferOffset:(unsigned long long)arg3 controlPointIndexBuffer:(id)arg4 controlPointIndexBufferOffset:(unsigned long long)arg5 indirectBuffer:(id)arg6 indirectBufferOffset:(unsigned long long)arg7;
- (void)drawIndexedPatches:(unsigned long long)arg1 patchStart:(unsigned long long)arg2 patchCount:(unsigned long long)arg3 patchIndexBuffer:(id)arg4 patchIndexBufferOffset:(unsigned long long)arg5 controlPointIndexBuffer:(id)arg6 controlPointIndexBufferOffset:(unsigned long long)arg7 instanceCount:(unsigned long long)arg8 baseInstance:(unsigned long long)arg9;
- (void)drawPatches:(unsigned long long)arg1 patchIndexBuffer:(id)arg2 patchIndexBufferOffset:(unsigned long long)arg3 indirectBuffer:(id)arg4 indirectBufferOffset:(unsigned long long)arg5;
- (void)drawPatches:(unsigned long long)arg1 patchStart:(unsigned long long)arg2 patchCount:(unsigned long long)arg3 patchIndexBuffer:(id)arg4 patchIndexBufferOffset:(unsigned long long)arg5 instanceCount:(unsigned long long)arg6 baseInstance:(unsigned long long)arg7;
- (void)setTessellationFactorScale:(float)arg1;
- (void)setTessellationFactorBuffer:(id)arg1 offset:(unsigned long long)arg2 instanceStride:(unsigned long long)arg3;
- (void)endEncoding;
- (void)drawIndexedPrimitives:(unsigned long long)arg1 indexType:(unsigned long long)arg2 indexBuffer:(id)arg3 indexBufferOffset:(unsigned long long)arg4 indirectBuffer:(id)arg5 indirectBufferOffset:(unsigned long long)arg6;
- (void)drawPrimitives:(unsigned long long)arg1 indirectBuffer:(id)arg2 indirectBufferOffset:(unsigned long long)arg3;
- (void)drawIndexedPrimitives:(unsigned long long)arg1 indexCount:(unsigned long long)arg2 indexType:(unsigned long long)arg3 indexBuffer:(id)arg4 indexBufferOffset:(unsigned long long)arg5 instanceCount:(unsigned long long)arg6 baseVertex:(long long)arg7 baseInstance:(unsigned long long)arg8;
- (void)drawPrimitives:(unsigned long long)arg1 vertexStart:(unsigned long long)arg2 vertexCount:(unsigned long long)arg3 instanceCount:(unsigned long long)arg4 baseInstance:(unsigned long long)arg5;
- (void)drawIndexedPrimitives:(unsigned long long)arg1 indexCount:(unsigned long long)arg2 indexType:(unsigned long long)arg3 indexBuffer:(id)arg4 indexBufferOffset:(unsigned long long)arg5;
- (void)drawIndexedPrimitives:(unsigned long long)arg1 indexCount:(unsigned long long)arg2 indexType:(unsigned long long)arg3 indexBuffer:(id)arg4 indexBufferOffset:(unsigned long long)arg5 instanceCount:(unsigned long long)arg6;
- (void)validateDrawIndexedPrimitives:(unsigned long long)arg1 indexCount:(unsigned long long)arg2 indexType:(unsigned long long)arg3 indexBuffer:(id)arg4 indexBufferOffset:(unsigned long long)arg5 instanceCount:(unsigned long long)arg6 function:(const char *)arg7;
- (void)drawPrimitives:(unsigned long long)arg1 vertexStart:(unsigned long long)arg2 vertexCount:(unsigned long long)arg3;
- (void)drawPrimitives:(unsigned long long)arg1 vertexStart:(unsigned long long)arg2 vertexCount:(unsigned long long)arg3 instanceCount:(unsigned long long)arg4;
- (void)validateDrawPrimitives:(unsigned long long)arg1 vertexStart:(unsigned long long)arg2 vertexCount:(unsigned long long)arg3 instanceCount:(unsigned long long)arg4 function:(const char *)arg5;
- (void)_validateAllFunctionArguments;
- (void)validateCommonDrawErrors:(unsigned long long)arg1 instanceCount:(unsigned long long)arg2 baseInstance:(unsigned long long)arg3 maxVertexID:(unsigned long long)arg4;
- (void)updatePipelineData;
- (void)setBlendColorRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (void)setVisibilityResultMode:(unsigned long long)arg1 offset:(unsigned long long)arg2;
- (void)setStencilStoreAction:(unsigned long long)arg1;
- (void)setDepthStoreAction:(unsigned long long)arg1;
- (void)setColorStoreAction:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;
- (void)setStencilFrontReferenceValue:(unsigned int)arg1 backReferenceValue:(unsigned int)arg2;
- (void)setStencilReferenceValue:(unsigned int)arg1;
- (void)setDepthStencilState:(id)arg1;
- (void)setTriangleFillMode:(unsigned long long)arg1;
- (void)setScissorRect:(CDStruct_5f3a0cd7)arg1;
- (void)setDepthBias:(float)arg1 slopeScale:(float)arg2 clamp:(float)arg3;
- (void)setLineWidth:(float)arg1;
- (void)setDepthClipMode:(unsigned long long)arg1;
- (void)setCullMode:(unsigned long long)arg1;
- (void)setFrontFacingWinding:(unsigned long long)arg1;
- (void)setViewport:(CDStruct_4b2885c7)arg1;
- (void)setFragmentSamplerStates:(const id *)arg1 lodMinClamps:(const float *)arg2 lodMaxClamps:(const float *)arg3 withRange:(struct _NSRange)arg4;
- (void)setFragmentSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(unsigned long long)arg4;
- (void)setFragmentSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setFragmentSamplerState:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setFragmentTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setFragmentTexture:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setFragmentBuffers:(const id *)arg1 offsets:(const unsigned long long *)arg2 withRange:(struct _NSRange)arg3;
- (void)setFragmentBufferOffset:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;
- (void)setFragmentBuffer:(id)arg1 offset:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;
- (void)setFragmentBytes:(const void *)arg1 length:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;
- (void)setVertexSamplerStates:(const id *)arg1 lodMinClamps:(const float *)arg2 lodMaxClamps:(const float *)arg3 withRange:(struct _NSRange)arg4;
- (void)setVertexSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(unsigned long long)arg4;
- (void)setVertexSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setVertexSamplerState:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setVertexTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setVertexTexture:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setVertexBuffers:(const id *)arg1 offsets:(const unsigned long long *)arg2 withRange:(struct _NSRange)arg3;
- (void)setVertexBufferOffset:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;
- (void)setVertexBuffer:(id)arg1 offset:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;
- (void)setVertexBytes:(const void *)arg1 length:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;
- (void)setRenderPipelineState:(id)arg1;
- (void)validateFramebufferWithRenderPipelineState:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRenderCommandEncoder:(id)arg1 parent:(id)arg2 descriptor:(id)arg3;
- (void)_setDefaults;
- (void)enumerateFragmentSamplersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateFragmentTexturesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateFragmentBuffersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateVertexSamplersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateVertexTexturesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateVertexBuffersUsingBlock:(CDUnknownBlockType)arg1;

@end

