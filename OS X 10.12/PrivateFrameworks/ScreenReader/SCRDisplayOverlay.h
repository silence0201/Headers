//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class CAContext, CALayer, NSLock, SCRCThreadKey;

__attribute__((visibility("hidden")))
@interface SCRDisplayOverlay : NSObject
{
    unsigned int _window;
    unsigned int _surface;
    struct _CAView *_animationView;
    CAContext *_layerContext;
    CALayer *_rootLayer;
    struct CGRect _rect;
    unsigned int _cgsConnectionID;
    struct CGAffineTransform _transform;
    double _lastShowTime;
    double _fadeInInterval;
    double _fadeOutInterval;
    double _flashInterval;
    NSLock *_lock;
    double _colorRed;
    double _colorGreen;
    double _colorBlue;
    double _colorAlpha;
    struct __CFRunLoopSource *_mouseSource;
    struct __CFRunLoop *_runLoop;
    struct CGPoint _vexposeLocation;
    int _windowLevel;
    int _vexposeState;
    struct CGRect _maxVexposeRect;
    SCRCThreadKey *_threadKey;
    double _scaleFactor;
    unsigned long long _disableUpdateToken;
    struct {
        unsigned int isEnabled:1;
        unsigned int shadowEnabled:1;
        unsigned int needsDraw:1;
        unsigned int isVexposeAnimated:1;
        unsigned int isRegisteredForVexpose:1;
        unsigned int isShowEnabled:1;
        unsigned int isAboveEverything:1;
        unsigned int waitingToOrderOut:1;
        unsigned int isOrderedIn:1;
        unsigned int allowActiveShadow:1;
        unsigned int reserved:22;
    } _sroFlags;
}

+ (unsigned long long)multiMonitorSpace;
+ (int)initialWindowLevel;
+ (BOOL)windowsAreAboveEverything;
+ (void)setWindowsAreAboveEverything:(BOOL)arg1;
+ (void)_setIsAboveEverything:(id)arg1 forWindow:(id)arg2;
+ (void)_unregisterForVexpose:(id)arg1;
+ (void)_registerForVexpose:(id)arg1;
+ (int)vexposeState;
+ (id)newScreenCurtain;
+ (void)setVexposeState:(int)arg1;
+ (BOOL)toggleVexposeState:(int)arg1;
+ (void)_setMaxVexposeRect:(id)arg1 forWindow:(id)arg2;
+ (void)_setVexposeStateForWindow:(id)arg1 withNumber:(id)arg2;
+ (void)initialize;
- (void)enableCGUpdate;
- (void)disableCGUpdate;
- (void)_eventHandlerWithPort:(struct __CFMachPort *)arg1 message:(void *)arg2 size:(long long)arg3 context:(void *)arg4;
- (void)handleMouseEvent:(struct _CGSEventRecord)arg1;
- (void)hide:(BOOL)arg1;
- (void)_subscribeForOrderOut:(BOOL)arg1 withFadeTime:(double)arg2;
- (void)_orderOut;
- (void)hide;
- (void)reorder;
- (void)orderFront;
- (void)show;
- (BOOL)overrideEnableForVexposeState:(int)arg1;
- (BOOL)usesDrawInContext;
- (void)drawInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (BOOL)isEnabled;
- (void)setIsEnabled:(BOOL)arg1;
- (BOOL)hasContents;
- (BOOL)needsDraw;
- (void)setNeedsDraw:(BOOL)arg1;
- (void)flash;
- (double)flashInterval;
- (void)setFlashInterval:(double)arg1;
- (double)fadeOutInterval;
- (void)setFadeOutInterval:(double)arg1;
- (double)fadeInInterval;
- (void)setFadeInInterval:(double)arg1;
- (struct CGRect)maxScreenRect;
- (struct CGRect)screenRect;
- (void)setScreenRect:(struct CGRect)arg1;
- (struct CGRect)_maxVexposeRect;
- (void)_setMaxVexposeRect:(struct CGRect)arg1;
- (int)vexposeState;
- (void)setVexposeState:(int)arg1;
- (struct CGRect)_vexposeTiledRectForRect:(struct CGRect)arg1;
- (void)_slideWindowFromOrigin:(struct CGPoint)arg1 toOrigin:(struct CGPoint)arg2;
- (void)setAlpha:(double)arg1;
- (void)setScreenColorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (void)_enableMouseEventsOnMainThread:(id)arg1;
- (void)enableMouseEventsWithOptions:(int)arg1;
- (BOOL)isShadowEnabled;
- (void)setIsShadowEnabled:(BOOL)arg1;
- (struct __CFDictionary *)createShadowPropertyDictionaryForOpacity:(double)arg1 radius:(double)arg2 yOffset:(double)arg3 rimDensity:(double)arg4;
- (BOOL)allowActiveShadow;
- (void)setAllowActiveShadow:(BOOL)arg1;
- (BOOL)isVexposeAnimated;
- (void)setIsVexposeAnimated:(BOOL)arg1;
- (void)unregisterForVexpose;
- (void)registerForVexpose;
- (BOOL)isShowEnabled;
- (void)setIsShowEnabled:(BOOL)arg1;
- (unsigned int)cgsConnectionId;
- (void)moveWindowToMultiMonitorSpace;
- (int)windowLevel;
- (void)setWindowLevel:(int)arg1;
- (void)_updateWindowLevel;
- (BOOL)isAboveEverything;
- (void)setIsAboveEverything:(BOOL)arg1;
- (long long)_compareByScreenRect:(id)arg1;
- (id)rootLayer;
- (void)enableCoreAnimation;
- (void)updateWindowDPI;
- (void)updateWindowDPIIfNeeded;
- (void)displayConfigurationDidChange;
- (double)scaleFactor;
- (double)bestDisplayScaleFactor;
- (void)_updateLayerFactor:(id)arg1 withScale:(double)arg2;
- (id)threadKey;
- (void)dealloc;
- (void)updateCoreAnimation;
- (id)initWithScreenRect:(struct CGRect)arg1 withRed:(double)arg2 green:(double)arg3 blue:(double)arg4 alpha:(double)arg5;
- (id)initForWholeScreenWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;

@end

