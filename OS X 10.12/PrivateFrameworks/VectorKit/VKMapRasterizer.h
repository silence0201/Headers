//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <VectorKit/VKModelObject.h>

@class MDTextureCanvas, NSMutableSet, VKCamera, VKMapModel, VKMapRasterizerRoot, VKScene, VKTileProvider;

__attribute__((visibility("hidden")))
@interface VKMapRasterizer : VKModelObject
{
    struct VKTileKey _keyToRasterize;
    VKScene *_rasterizeScene;
    NSMutableSet *_rasterizeTilesToRender;
    struct LayoutContext *_rasterizeLayoutContext;
    MDTextureCanvas *_rasterizeCanvas;
    VKTileProvider *_tileProvider;
    Matrix_5173352a _backgroundColor;
    unsigned long long _rasterizingScaleFactor;
    VKMapRasterizerRoot *_root;
    VKCamera *_rasterizeCamera;
    struct Device {
        int;
        shared_ptr_807ec9ac;
        struct unique_ptr<md::SharedDeviceResources, std::__1::default_delete<md::SharedDeviceResources>>;
    } *_device;
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer>> _depthStencilBuffer;
    struct unique_ptr<ggl::RenderTarget, std::__1::default_delete<ggl::RenderTarget>> _renderToTextureTarget;
    struct unique_ptr<md::RenderQueue, std::__1::default_delete<md::RenderQueue>> _rttQueue;
    struct unique_ptr<ggl::TexturePool, std::__1::default_delete<ggl::TexturePool>> _texturePool;
    shared_ptr_479d1306 _renderTexture;
    struct RenderTargetFormat _renderTargetFormat;
    unsigned int _canvasPointSize;
    VKMapModel *_mapModel;
}

@property(nonatomic) unsigned long long rasterizingScaleFactor; // @synthesize rasterizingScaleFactor=_rasterizingScaleFactor;
@property(nonatomic) Matrix_5173352a backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) VKTileProvider *tileProvider; // @synthesize tileProvider=_tileProvider;
@property(nonatomic) VKMapModel *mapModel; // @synthesize mapModel=_mapModel;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)stylesheetDidChange;
- (void)gglLayoutScene:(id)arg1 withContext:(struct LayoutContext *)arg2 renderQueue:(struct RenderQueue *)arg3;
- (void)gglLayoutSceneIfNeeded:(id)arg1 withContext:(struct LayoutContext *)arg2 renderQueue:(struct RenderQueue *)arg3 dispatchQueue:(id)arg4;
- (void)prepRenderTargetWithTexture:(const shared_ptr_479d1306 *)arg1;
- (void)createRasterizationLayoutContext:(struct LayoutContext *)arg1 canvasPointSize:(unsigned int)arg2;
- (void)updateCameraFromKey:(const struct VKTileKey *)arg1;
- (BOOL)isBusy;
- (void)rasterizeKey:(const struct VKTileKey *)arg1 scene:(id)arg2;
- (void)addSubmodel:(id)arg1;
- (void)flushTextureCache;
- (void)reset;
- (void)dealloc;
- (id)initWithDevice:(struct Device *)arg1;
@property(readonly, nonatomic) const struct VKTileKey *keyToRasterize;

@end

