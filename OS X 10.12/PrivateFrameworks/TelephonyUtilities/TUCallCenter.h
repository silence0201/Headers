//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class CNContactStore, NSArray, TUAudioDeviceController, TUCall, TUCallProviderManager, TUCallServicesInterface;
@protocol OS_dispatch_queue;

@interface TUCallCenter : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    TUCallServicesInterface *_callServicesInterface;
    TUAudioDeviceController *_audioDeviceController;
    CNContactStore *_contactStore;
    TUCallProviderManager *_providerManager;
    CDUnknownBlockType _disconnectCallPreflight;
    struct CGSize _localLandscapeAspectRatio;
    struct CGSize _localPortraitAspectRatio;
}

+ (id)displayedCallFromCalls:(id)arg1;
+ (id)callCenterWithQueue:(id)arg1;
+ (id)sharedInstanceWithQueue:(id)arg1 daemonDelegate:(id)arg2 shouldRegister:(BOOL)arg3;
+ (id)sharedInstance;
+ (id)sharedContactStore;
+ (id)sharedAddressBook;
+ (BOOL)isInCallServiceProcess;
@property(copy, nonatomic) CDUnknownBlockType disconnectCallPreflight; // @synthesize disconnectCallPreflight=_disconnectCallPreflight;
@property(nonatomic) struct CGSize localPortraitAspectRatio; // @synthesize localPortraitAspectRatio=_localPortraitAspectRatio;
@property(nonatomic) struct CGSize localLandscapeAspectRatio; // @synthesize localLandscapeAspectRatio=_localLandscapeAspectRatio;
@property(retain, nonatomic) TUCallProviderManager *providerManager; // @synthesize providerManager=_providerManager;
@property(retain, nonatomic) CNContactStore *contactStore; // @synthesize contactStore=_contactStore;
@property(retain, nonatomic) TUAudioDeviceController *audioDeviceController; // @synthesize audioDeviceController=_audioDeviceController;
@property(retain, nonatomic) TUCallServicesInterface *callServicesInterface; // @synthesize callServicesInterface=_callServicesInterface;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (unsigned long long)_callGroupCountForCall:(id)arg1 withCall:(id)arg2;
- (BOOL)canGroupCall:(id)arg1 withCall:(id)arg2;
@property(readonly, nonatomic, getter=isHoldAndAnswerAllowed) BOOL holdAndAnswerAllowed;
@property(readonly, nonatomic, getter=isEndAndAnswerAllowed) BOOL endAndAnswerAllowed;
@property(readonly, nonatomic, getter=isAmbiguous) BOOL ambiguous;
@property(readonly, nonatomic, getter=isAddCallAllowed) BOOL addCallAllowed;
@property(readonly, nonatomic) BOOL canMergeCalls;
- (BOOL)isSendToVoicemailAllowed;
- (BOOL)isHardPauseAvailable;
- (BOOL)isTakingCallsPrivateAllowed;
- (BOOL)isHoldAllowed;
- (BOOL)isMergeable;
- (BOOL)isSwappable;
- (void)enteredBackgroundForAllCalls;
- (void)enteredForegroundForCall:(id)arg1;
- (void)pullHostedCallsFromPairedHostDevice;
- (void)pushHostedCallsToPairedClientDevice;
- (void)pullRelayingCallsFromClient;
- (void)pushRelayingCallsToHostWithSourceIdentifier:(id)arg1;
- (void)pushRelayingCallsToHost;
- (void)pullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)disconnectAllCalls;
- (void)disconnectCurrentCallAndActivateHeld;
- (void)disconnectCall:(id)arg1 withReason:(int)arg2;
- (void)disconnectCall:(id)arg1;
- (void)_preflightDisconnectForCalls:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)ungroupCall:(id)arg1;
- (void)groupCall:(id)arg1 withOtherCall:(id)arg2;
- (void)swapCalls;
- (void)resumeCall:(id)arg1;
- (void)unholdCall:(id)arg1;
- (void)holdCall:(id)arg1;
- (void)updateCall:(id)arg1 withAnswerRequest:(id)arg2;
- (void)answerWithRequest:(id)arg1;
- (void)endActiveOrHeldAndAnswerCall:(id)arg1;
- (void)endHeldAndAnswerCall:(id)arg1;
- (void)endActiveAndAnswerCall:(id)arg1;
- (void)holdActiveAndAnswerCall:(id)arg1;
- (void)answerCall:(id)arg1 withSourceIdentifier:(id)arg2 wantsHoldMusic:(BOOL)arg3;
- (void)answerCallWithHoldMusic:(id)arg1;
- (void)answerCall:(id)arg1 withSourceIdentifier:(id)arg2;
- (void)answerCall:(id)arg1;
- (void)sendFieldModeDigits:(id)arg1;
- (void)launchAppForDialRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_dial:(id)arg1 callID:(id)arg2 provider:(id)arg3 video:(BOOL)arg4 sourceIdentifier:(id)arg5 dialType:(long long)arg6;
- (id)_dial:(id)arg1 callID:(id)arg2 service:(int)arg3 sourceIdentifier:(id)arg4 dialType:(long long)arg5;
- (id)dialVoicemailWithSourceIdentifier:(id)arg1;
- (id)dialVoicemail;
- (id)dialEmergency:(id)arg1 sourceIdentifier:(id)arg2;
- (id)dialEmergency:(id)arg1;
- (id)dial:(id)arg1 callID:(id)arg2 service:(int)arg3;
- (id)dial:(id)arg1 service:(int)arg2;
- (id)_dialWithRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dialWithRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)dialWithRequest:(id)arg1;
- (BOOL)canDialWithRequest:(id)arg1;
- (BOOL)_canDialWithRequest:(id)arg1 shouldUseRelay:(char *)arg2;
- (BOOL)_isCallingAvailableOnSecondaryDeviceWithRelayCallingAvailability:(int)arg1 isProviderAvailable:(BOOL)arg2 isRelayAllowed:(BOOL)arg3 shouldUseRelay:(char *)arg4;
- (BOOL)_existingCallsAllowDialRequest:(id)arg1 allowVoiceWithData:(BOOL)arg2;
@property(readonly, copy, nonatomic) NSArray *callGroupsOnDefaultPairedDevice;
@property(readonly, copy, nonatomic) NSArray *currentCallGroups;
- (id)_callGroupsFromCalls:(id)arg1;
- (BOOL)existingCallsHaveMultipleProviders;
- (BOOL)allCallsAreOfService:(int)arg1;
@property(readonly, nonatomic) BOOL anyCallIsEndpointOnCurrentDevice;
@property(readonly, nonatomic) BOOL anyCallIsHostedOnCurrentDevice;
@property(readonly, nonatomic) BOOL hasCurrentVideoCalls;
@property(readonly, nonatomic) BOOL hasCurrentAudioCalls;
@property(readonly, nonatomic) BOOL hasCurrentCalls;
- (BOOL)allCallsPassTest:(CDUnknownBlockType)arg1;
- (BOOL)anyCallPassesTest:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long callCountOnDefaultPairedDevice;
@property(readonly, nonatomic) unsigned long long currentAudioAndVideoCallCount;
@property(readonly, nonatomic) unsigned long long currentVideoCallCount;
@property(readonly, nonatomic) unsigned long long currentCallCount;
- (unsigned long long)countOfCallsPassingTest:(CDUnknownBlockType)arg1;
- (id)displayedCallFromCalls:(id)arg1;
- (id)frontmostAudioOrVideoCall;
- (id)frontmostCall;
- (id)conferenceCall;
- (id)displayedCall;
- (id)callWithCallUUID:(id)arg1;
- (id)callWithUniqueProxyIdentifier:(id)arg1;
- (id)audioOrVideoCallWithStatus:(int)arg1;
- (id)videoCallWithStatus:(int)arg1;
- (id)callWithStatus:(int)arg1;
@property(readonly, nonatomic) TUCall *currentVideoCall;
@property(readonly, nonatomic) TUCall *activeVideoCall;
@property(readonly, nonatomic) TUCall *incomingVideoCall;
@property(readonly, nonatomic) TUCall *incomingCall;
- (id)callPassingTest:(CDUnknownBlockType)arg1 sortedUsingComparator:(CDUnknownBlockType)arg2;
- (id)callPassingTest:(CDUnknownBlockType)arg1 withOptions:(unsigned long long)arg2;
- (id)callPassingTest:(CDUnknownBlockType)arg1;
- (id)callsWithGroupUUID:(id)arg1;
- (id)audioAndVideoCallsWithStatus:(int)arg1;
- (id)callsWithStatus:(int)arg1;
@property(readonly, copy, nonatomic) NSArray *callsOnDefaultPairedDevice;
@property(readonly, copy, nonatomic) NSArray *callsHostedOrAnEndpointElsewhere;
@property(readonly, copy, nonatomic) NSArray *callsWithAnEndpointElsewhere;
@property(readonly, copy, nonatomic) NSArray *callsHostedElsewhere;
@property(readonly, copy, nonatomic) NSArray *conferenceParticipantCalls;
@property(readonly, copy, nonatomic) NSArray *displayedCalls;
@property(readonly, copy, nonatomic) NSArray *incomingCalls;
@property(readonly, copy, nonatomic) NSArray *currentAudioAndVideoCalls;
@property(readonly, copy, nonatomic) NSArray *currentVideoCalls;
@property(readonly, copy, nonatomic) NSArray *currentCalls;
- (id)callsPassingTest:(CDUnknownBlockType)arg1 returningNilForEmpty:(BOOL)arg2;
- (id)callsPassingTest:(CDUnknownBlockType)arg1;
- (id)_allCalls;
- (void)enumerateCallsWithOptions:(unsigned long long)arg1 invokingBlock:(CDUnknownBlockType)arg2 forCallsPassingTest:(CDUnknownBlockType)arg3;
- (void)enumerateCallsInvokingBlock:(CDUnknownBlockType)arg1 forCallsPassingTest:(CDUnknownBlockType)arg2;
- (BOOL)shouldPreferRelayOverDirectSecondaryCallingForProvider:(id)arg1;
- (id)callServicesClientCapabilities;
- (void)dealloc;
- (void)registerWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)debugDescription;
- (id)initWithQueue:(id)arg1;
- (id)init;

@end

