//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class NSArray, NSData, NSNumber, NSString;

@protocol WDXPCHelper
- (void)stopFrameCaptureWithAuthorizationData:(NSData *)arg1 reply:(void (^)(NSError *))arg2;
- (void)startFrameCaptureWithDataLinkType:(long long)arg1 promiscuousMode:(BOOL)arg2 interfaceName:(NSString *)arg3 authorizationData:(NSData *)arg4 reply:(void (^)(NSError *))arg5;
- (void)startFrameCaptureInMonitorModeWithSaveFilePath:(NSString *)arg1 interfaceName:(NSString *)arg2 authorizationData:(NSData *)arg3 reply:(void (^)(NSError *))arg4;
- (void)setSystemDebugLoggingEnabled:(BOOL)arg1 authorizationData:(NSData *)arg2 reply:(void (^)(NSError *))arg3;
- (void)querySystemDebugLoggingEnabledWithAuthorizationData:(NSData *)arg1 reply:(void (^)(NSError *, BOOL))arg2;
- (void)setOpenDirectoryLoggingEnabled:(BOOL)arg1 authorizationData:(NSData *)arg2 reply:(void (^)(NSError *))arg3;
- (void)queryOpenDirectoryLoggingEnabledWithAuthorizationData:(NSData *)arg1 reply:(void (^)(NSError *, BOOL))arg2;
- (void)setDNSLoggingEnabled:(BOOL)arg1 authorizationData:(NSData *)arg2 reply:(void (^)(NSError *))arg3;
- (void)queryDNSLoggingEnabledWithAuthorizationData:(NSData *)arg1 reply:(void (^)(NSError *, BOOL))arg2;
- (void)setDHCPLoggingEnabled:(BOOL)arg1 authorizationData:(NSData *)arg2 reply:(void (^)(NSError *))arg3;
- (void)queryDHCPLoggingEnabledWithAuthorizationData:(NSData *)arg1 reply:(void (^)(NSError *, BOOL))arg2;
- (void)setEAPOLLoggingEnabled:(BOOL)arg1 authorizationData:(NSData *)arg2 reply:(void (^)(NSError *))arg3;
- (void)queryEAPOLLoggingEnabledWithAuthorizationData:(NSData *)arg1 reply:(void (^)(NSError *, BOOL))arg2;
- (void)setWiFiLoggingEnabled:(BOOL)arg1 interfaceName:(NSString *)arg2 authorizationData:(NSData *)arg3 reply:(void (^)(NSError *))arg4;
- (void)queryWiFiLoggingEnabledWithInterfaceName:(NSString *)arg1 authorizationData:(NSData *)arg2 reply:(void (^)(NSError *, BOOL))arg3;
- (void)configureIPv6AutomaticallyWithServiceID:(NSString *)arg1 authorizationData:(NSData *)arg2 reply:(void (^)(NSError *))arg3;
- (void)configureIPv6ManuallyWithIPAddress:(NSString *)arg1 router:(NSString *)arg2 prefixLength:(NSNumber *)arg3 serviceID:(NSString *)arg4 authorizationData:(NSData *)arg5 reply:(void (^)(NSError *))arg6;
- (void)configureIPv4UsingDHCPWithServiceID:(NSString *)arg1 authorizationData:(NSData *)arg2 reply:(void (^)(NSError *))arg3;
- (void)configureIPv4ManuallyWithIPAddress:(NSString *)arg1 routerAddress:(NSString *)arg2 subnetMask:(NSString *)arg3 serviceID:(NSString *)arg4 authorizationData:(NSData *)arg5 reply:(void (^)(NSError *))arg6;
- (void)setDNSServerAddresses:(NSArray *)arg1 searchDomains:(NSArray *)arg2 serviceID:(NSString *)arg3 authorizationData:(NSData *)arg4 reply:(void (^)(NSError *))arg5;
- (void)createDiagnosticsReportUsingTemporaryDirectory:(NSString *)arg1 interfaceName:(NSString *)arg2 authorizationData:(NSData *)arg3 reply:(void (^)(NSError *, NSArray *))arg4;
- (void)createMiniDiagnosticsReportUsingTemporaryDirectory:(NSString *)arg1 interfaceName:(NSString *)arg2 authorizationData:(NSData *)arg3 reply:(void (^)(NSError *, NSArray *))arg4;
- (void)setEventSubscriptions:(unsigned long long)arg1 reply:(void (^)(NSError *))arg2;
- (void)queryEventSubscriptionsWithReply:(void (^)(NSError *, unsigned long long))arg1;
@end

