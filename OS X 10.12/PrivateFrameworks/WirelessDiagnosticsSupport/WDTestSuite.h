//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class CWInterface, NSArray, NSNumber, NSSet, NSString, SFAuthorization, WDLogger, WDSystemConfiguration, WDXPCClient;

@interface WDTestSuite : NSObject
{
    BOOL _isDefaultRoute;
    BOOL _isUsingIncorrectNetworkLocation;
    BOOL _checkWiFiOn;
    BOOL _checkWiFiAssociated;
    BOOL _checkLANConnectivity;
    BOOL _checkWANConnectivity;
    BOOL _checkDNSResolution;
    BOOL _checkReachability;
    BOOL _cannotLoadWebpage;
    long long _preferredDNSIndex;
    NSArray *_dnsServerAddresses;
    NSArray *_dnsSearchDomains;
    NSArray *_preferredDNSNameservers;
    NSString *_manualIPv4IPAddress;
    NSString *_manualIPv4Router;
    NSString *_manualIPv4SubnetMask;
    NSString *_manualIPv6IPAddress;
    NSString *_manualIPv6Router;
    NSNumber *_manualIPv6PrefixLength;
    NSString *_wifiServiceID;
    WDXPCClient *_xpcClient;
    WDLogger *_testSuiteLogger;
    WDSystemConfiguration *_wdSysConfig;
    SFAuthorization *_authorization;
    CWInterface *_interface;
    CWInterface *_awdlInterface;
    NSSet *_scanResults;
    id _delegate;
}

+ (id)descriptionForHotspot;
+ (id)descriptionForIncorrectNetworkLocation;
+ (id)descriptionForPreferredNetworkMismatch;
+ (id)descriptionForWANConnectivityFailure;
+ (id)descriptionForLANConnectivityFailure;
+ (id)descriptionForBasicConnectivityFailure;
+ (id)descriptionForWiFiNotAssociated;
+ (id)descriptionForWiFiOff;
+ (id)descriptionForDroppedWiFiConnection;
+ (id)descriptionForDoubleNAT;
+ (id)descriptionForSelfAssignedIP;
+ (id)descriptionForDNSFailure;
+ (id)descriptionForConflictingSecurityTypes;
+ (id)descriptionForConflictingCountryCodesWithNetworkList:(id)arg1 currentCountryCode:(id)arg2;
+ (id)descriptionForCrowdedWiFiChannel;
+ (id)descriptionForPoorSignal;
+ (id)descriptionForPoorWirelessEnvironment;
+ (id)descriptionForMisconfiguredIPv6;
+ (id)descriptionForCustomIPv6;
+ (id)descriptionForMisconfiguredIPv4;
+ (id)descriptionForCustomIPv4;
+ (id)descriptionForMisconfiguredWebProxy;
+ (id)descriptionForMisconfiguredDNS;
+ (id)descriptionForCustomDNS;
+ (id)descriptionForWiFiBestPractices;
+ (id)bestPracticesRecommentationItem;
+ (id)getChannelGroupsSortedByWeightWithChannels:(id)arg1 scanResults:(id)arg2;
+ (id)getWeightedChannelGroupsWithChannels:(id)arg1 scanResults:(id)arg2;
+ (id)getWeightedChannels:(id)arg1 scanResults:(id)arg2;
+ (id)localizedString:(id)arg1;
@property __weak id delegate; // @synthesize delegate=_delegate;
- (void)detectDualHomed;
- (void)detectInternetSharing;
- (void)detectHT402GHzNetworks;
- (void)detectMismatchedWiFiNetworkInterface;
- (void)detectFirewallEnabled;
- (void)detectiOSPersonalHotspot;
- (void)detectAirPortNetwork;
- (void)detectHiddenNetwork;
- (void)detectLegacySecurityType;
- (void)detectCaptivePortalNetwork;
- (void)detectBlockedSMTPPort;
- (void)detectLongDTIMInterval;
- (void)detectLongBeaconInterval;
- (void)detectLargePreferedNetworksList;
- (BOOL)canLoadWebPage:(id)arg1 withProxy:(id)arg2 withPort:(id)arg3;
- (BOOL)isUsingCustomWebProxy:(id *)arg1 withPort:(id *)arg2;
- (BOOL)isWiFiTheDefaultRoute;
- (BOOL)isIPv6Available;
- (BOOL)isIPv4Available;
- (BOOL)detectSelfAssignedIPAddressHelper;
- (BOOL)detectCustomNetworkLocation;
- (BOOL)detectDefaultNetworkLocationExists;
- (BOOL)detectMultipleNetworkLocations;
- (BOOL)detectPoorSNRWithRSSI:(long long)arg1 noise:(long long)arg2;
- (BOOL)detectPoorSignalStrengthHelperWithRSSI:(long long)arg1;
- (BOOL)detectConflictingSecurityTypesHelper;
- (BOOL)detectConflictingCountryCodesHelper:(id)arg1;
- (BOOL)detectCrowdedWiFiChannelHelper;
- (id)getWeightedChannelDictionary:(id)arg1;
- (id)getOverlappingChannelSetFrom40MHzChannel:(id)arg1;
- (id)getChannelRangeFor40MHzChannel:(id)arg1;
- (void)addWeightForChannel:(id)arg1 withChannelWeightDictionary:(id)arg2;
- (void)addWeightForMultipleChannels:(id)arg1 withChannelList:(id)arg2 withChannelWeightDictionary:(id)arg3;
- (BOOL)doesCurrentNetworkMatchAPreferredNetworkEntrySecurityProfile;
- (BOOL)verifyConnectivityToHost:(id)arg1;
- (BOOL)performDNSResolution:(id)arg1;
- (BOOL)isUsingCustomDNS;
- (BOOL)quickPingAddress:(id)arg1 trafficClass:(id)arg2 output:(id *)arg3;
- (BOOL)pingAddress:(id)arg1 output:(id *)arg2;
- (BOOL)isWiFiIsNotPrimaryIPv6Interface;
- (BOOL)isWiFiIsNotPrimaryIPv4Interface;
- (BOOL)detectSelfAssignedIPv6AddressHelper;
- (BOOL)detectSelfAssignedIPv4AddressHelper;
- (BOOL)isUsingStaticIPv6Settings;
- (BOOL)isUsingStaticIPv4Settings;
- (id)extractConflictedNetworks:(id)arg1;
- (id)extractDuplicateNetworks:(id)arg1;
- (id)detectHotspotNetwork;
- (id)detectDoubleNAT;
- (BOOL)__detectLocalIPv4Address:(id)arg1;
- (id)detectMisconfiguredWebProxy;
- (id)detectPreferredNetworkSecurityMismatch;
- (id)detectSelfAssignedIPAddress;
- (id)detectPoorSignalStrengthWithRSSI:(long long)arg1;
- (id)detectCrowdedWiFiChannel;
- (id)detectPoorWirelessEnvironmentWithRSSI:(long long)arg1 noise:(long long)arg2;
- (id)detectConflictingSecurityTypes;
- (id)detectConflictingCountryCodes;
- (id)detectDNSFailure;
- (id)detectMisconfiguredNetworkSettings;
- (void)restoreCustomIPv6Settings;
- (void)clearCustomIPv6Settings;
- (void)restoreCustomIPv4Settings;
- (void)clearCustomIPv4Settings;
- (void)restoreCustomDNSSettings;
- (void)setDNSServerAddresses:(id)arg1 searchDomains:(id)arg2;
- (void)clearCustomDNSSettings;
- (void)backupNetworkSettings;
- (id)detectIncorrectNetworkLocation;
- (BOOL)checkReachability;
- (BOOL)checkDNSResolution;
- (BOOL)checkWANConnectivity;
- (void)queryAWDLState;
- (void)querySignalQuality;
- (BOOL)quickCheckWANConnectivity;
- (BOOL)checkLANConnectivity;
- (BOOL)checkWiFiAssociated;
- (BOOL)checkWiFiOn;
- (BOOL)quickCheckLANConnectivity;
- (void)__qosPingWithAddress:(id)arg1;
- (void)__qosPingWithAddress:(id)arg1 trafficClass:(id)arg2;
- (void)runAllLogEntries;
- (id)runMonitorTestCasesWithRSSI:(long long)arg1 noise:(long long)arg2 reason:(long long)arg3;
- (id)runEnvironmentTestCases;
- (id)runConfigurationTestCases;
- (BOOL)runTestCasesAndReturnRecommendationItems:(id *)arg1;
- (BOOL)runBasicTestCasesAndReturnRecommendationItems:(id *)arg1;
- (void)checkInitialConnectivity;
- (void)__quickCheckInitialConnectivity;
- (id)__parsePingStatistics:(id)arg1;
- (unsigned long long)testCaseCount;
- (void)dealloc;
- (id)initWithXPCClient:(id)arg1 interface:(id)arg2 logger:(id)arg3 authorization:(id)arg4;

@end

