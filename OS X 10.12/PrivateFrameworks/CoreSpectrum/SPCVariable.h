//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <CoreSpectrum/SPCObject.h>

@class NSSet, SPCExpression, SPCTable, SPCValueDescriptor;
@protocol NSObject><NSCoding;

@interface SPCVariable : SPCObject
{
    id <NSObject><NSCoding> _internalValue;
    BOOL _isConstant;
    id _objectValue;
    SPCTable *_tableValue;
    SPCTable *_tableRepresentation;
    SPCExpression *_expression;
    SPCValueDescriptor *_valueDescriptor;
}

+ (BOOL)supportsSecureCoding;
+ (id)constantWithName:(id)arg1 valueDescriptor:(id)arg2;
+ (id)variableWithName:(id)arg1 valueDescriptor:(id)arg2;
@property(readonly, nonatomic, getter=isConstant) BOOL isConstant; // @synthesize isConstant=_isConstant;
@property(readonly, copy, nonatomic) SPCValueDescriptor *valueDescriptor; // @synthesize valueDescriptor=_valueDescriptor;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)logicalPathToEnvironment;
- (id)defaultLogicalPathCollectionName;
- (BOOL)setExpression:(id)arg1 withError:(id *)arg2;
- (BOOL)setTableRepresentation:(id)arg1 withError:(id *)arg2;
- (BOOL)setObjectValue:(id)arg1 withError:(id *)arg2;
@property(readonly, nonatomic) SPCExpression *expression; // @synthesize expression=_expression;
@property(readonly, nonatomic) SPCTable *tableRepresentation; // @synthesize tableRepresentation=_tableRepresentation;
@property(readonly, nonatomic) SPCTable *tableValue; // @synthesize tableValue=_tableValue;
@property(readonly, nonatomic) id objectValue; // @synthesize objectValue=_objectValue;
- (id)description;
@property(readonly, copy, nonatomic) NSSet *referencedVariables;
- (void)_updateCachedValuesWithObjectValue:(id)arg1 tableValue:(id)arg2 tableRepresentation:(id)arg3 expression:(id)arg4;
- (void)_invalidateCachedValues;
- (void)_notifyChangeManager;
- (void)dealloc;
- (id)initWithName:(id)arg1 identifier:(id)arg2 valueDescriptor:(id)arg3 isConstant:(BOOL)arg4;
- (id)initWithName:(id)arg1;
- (id)init;

@end

