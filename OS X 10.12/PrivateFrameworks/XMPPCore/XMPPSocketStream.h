//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 19 2016 22:08:00).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSData, NSError, NSMutableData, NSTimer;

@interface XMPPSocketStream : NSObject
{
    struct __CFReadStream *_in;
    struct __CFWriteStream *_out;
    struct {
        long long version;
        void *info;
        CDUnknownFunctionPointerType retain;
        CDUnknownFunctionPointerType release;
        CDUnknownFunctionPointerType copyDescription;
    } _streamCallbackContext;
    char *_readBuffer;
    NSMutableData *_outBuffer;
    struct __CFHTTPMessage *_httpResponse;
    NSTimer *_connectTimer;
    double _connectTimeout;
    int _bufSz;
    int _fastReadCounter;
    BOOL _inOpened;
    BOOL _outOpened;
    BOOL _closing;
    BOOL _fastReadCallback;
    BOOL _EOFReached;
    BOOL _inTrimmedMemoryUseState;
}

@property(readonly, nonatomic) BOOL outputOpened; // @synthesize outputOpened=_outOpened;
@property(readonly, nonatomic) BOOL inputOpened; // @synthesize inputOpened=_inOpened;
@property(readonly, nonatomic) struct __CFWriteStream *outputStream; // @synthesize outputStream=_out;
@property(readonly, nonatomic) struct __CFReadStream *inputStream; // @synthesize inputStream=_in;
- (void)trimMemoryUsageButKeepSocketsAlive;
- (void)_setEOFReached:(BOOL)arg1;
- (void)_canAcceptBytes;
- (void)pleaseSendMoreData;
@property(readonly, nonatomic) BOOL isReadyForData;
- (BOOL)writeData:(id)arg1;
- (long long)writeBytes:(char *)arg1 length:(int)arg2;
- (long long)_writeFromBuffer;
- (void)setMinimumIncomingBufferSize:(int)arg1;
- (void)setMinimumOutgoingBufferSize:(int)arg1;
- (void)setFastReadCallback:(BOOL)arg1;
@property(readonly, nonatomic) int incomingBufferSize;
@property(readonly, nonatomic) int outgoingBufferSize;
@property(readonly, nonatomic) int incomingMinimumBufferSize;
@property(readonly, nonatomic) int outgoingMinimumBufferSize;
- (void)_dataReceived;
- (void)EOFReached;
- (void)receivedBytes:(char *)arg1 length:(unsigned int)arg2;
- (void)receivedDataBytes:(id)arg1;
- (void)dataReceived:(id)arg1;
- (void)openCompleted:(void *)arg1;
- (void)_openCompleted:(void *)arg1;
- (void)errorOccurred:(id)arg1 onStream:(void *)arg2;
- (void)_errorOccurred:(void *)arg1;
- (id)valueOfResponseHeader:(id)arg1;
@property(readonly, nonatomic) NSData *remoteSocketAddress;
@property(readonly, nonatomic) NSData *localSocketAddress;
@property(readonly, nonatomic) NSError *outputError;
@property(readonly, nonatomic) NSError *inputError;
- (void)_finishClosing;
- (void)close;
- (void)disconnect;
- (void)_connectTimedOut;
- (id)_finishConnecting:(BOOL)arg1;
- (void)_stopConnectionTimer;
- (id)connectToSocket:(int)arg1;
- (id)connectToHTTPURL:(id)arg1 method:(id)arg2 extraHeaders:(id)arg3;
- (id)connectToHost:(id)arg1 port:(unsigned short)arg2 securitySettings:(struct __CFDictionary *)arg3;
- (void)negotiateSSLWithSecuritySettings:(id)arg1;
- (id)connectToHost:(id)arg1 port:(unsigned short)arg2 security:(struct __CFString *)arg3;
- (id)connectToSocketSignature:(CDStruct_5398b360 *)arg1 securitySettings:(struct __CFDictionary *)arg2;
- (id)connectToHost:(id)arg1 port:(unsigned short)arg2 socksSettings:(id)arg3;
- (id)connectToNetService:(id)arg1;
- (void)setConnectTimeout:(double)arg1;
- (void)dealloc;

@end

